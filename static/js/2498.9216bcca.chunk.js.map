{"version":3,"file":"static/js/2498.9216bcca.chunk.js","mappings":"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","sources":["webpack://ctic/./src/@crema/core/AppCard/index.module.scss?c1e2","@crema/core/AppCard/index.js","@crema/core/AppComponentCard/highlightTheme.js","webpack://ctic/./src/@crema/core/AppComponentCard/index.module.scss?0c6d","@crema/core/AppAnimate/Expand.js","@crema/core/AppComponentCard/ComponentCardWithoutAnim.js","@crema/core/AppComponentCard/index.js","webpack://ctic/./src/@crema/core/AppComponentHeader/index.module.scss?ae62","@crema/core/AppComponentHeader/index.js","@crema/core/AppRowContainer/index.js","pages/components/Overlays/Overview.js","pages/components/Overlays/OverlayTriggerDemo.js","pages/components/Overlays/Customizing.js","pages/components/Overlays/Tooltips.js","pages/components/Overlays/Tooltips2.js","pages/components/Overlays/Popovers.js","pages/components/Overlays/Disabled.js","pages/components/Overlays/Changing.js","pages/components/Overlays/UpdatingPosition.js","pages/components/Overlays/index.js","webpack://ctic/./src/pages/components/Overlays/Overview.js?5adf","webpack://ctic/./src/pages/components/Overlays/OverlayTriggerDemo.js?3017","webpack://ctic/./src/pages/components/Overlays/Customizing.js?4d1a","webpack://ctic/./src/pages/components/Overlays/Tooltips.js?6745","webpack://ctic/./src/pages/components/Overlays/Tooltips2.js?deec","webpack://ctic/./src/pages/components/Overlays/Popovers.js?529f","webpack://ctic/./src/pages/components/Overlays/Disabled.js?92e2","webpack://ctic/./src/pages/components/Overlays/Changing.js?75e1","webpack://ctic/./src/pages/components/Overlays/UpdatingPosition.js?7482","webpack://ctic/./src/@crema/core/AppRowContainer/index.module.scss?e727"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"AppCard_card__lJ6Uc\",\"heightFull\":\"AppCard_heightFull__T8kun\",\"cardBody\":\"AppCard_cardBody__Yq-vX\",\"cardHeader\":\"AppCard_cardHeader__Y+R+4\",\"cardTitle\":\"AppCard_cardTitle__HaekO\",\"action\":\"AppCard_action__sd-8L\",\"cardFooter\":\"AppCard_cardFooter__qAyRn\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport styles from './index.module.scss';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst AppCard = ({\r\n  title,\r\n  footer,\r\n  children,\r\n  className,\r\n  titleClass,\r\n  actionClass,\r\n  footerClass,\r\n  cardBodyClass,\r\n  cardHeaderClass,\r\n  action,\r\n  heightFull,\r\n  cardImg,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Card\r\n      className={clsx(\r\n        styles.card,\r\n        heightFull ? styles.heightFull : '',\r\n        className,\r\n      )}\r\n      title={title}\r\n      {...rest}>\r\n      {cardImg ? <Card.Img variant='top' src={cardImg} /> : null}\r\n      {title || action ? (\r\n        <Card.Header className={clsx(styles.cardHeader, cardHeaderClass)}>\r\n          {typeof title === 'object' ? (\r\n            title\r\n          ) : (\r\n            <Card.Title\r\n              className={clsx(\r\n                styles.cardTitle,\r\n                'mb-0 text-truncate',\r\n                titleClass,\r\n              )}>\r\n              {title}\r\n            </Card.Title>\r\n          )}\r\n          {typeof action === 'object' ? (\r\n            action\r\n          ) : (\r\n            <a\r\n              className={clsx(\r\n                styles.action,\r\n                'text-decoration-none ms-1',\r\n                actionClass,\r\n              )}\r\n              href='#'>\r\n              {action}\r\n            </a>\r\n          )}\r\n        </Card.Header>\r\n      ) : null}\r\n      <Card.Body className={clsx(styles.cardBody, cardBodyClass)}>\r\n        {children}\r\n      </Card.Body>\r\n      {footer ? (\r\n        <Card.Footer className={clsx(styles.cardFooter, footerClass)}>\r\n          {footer}\r\n        </Card.Footer>\r\n      ) : null}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppCard;\r\n\r\nAppCard.propTypes = {\r\n  action: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  footer: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  cardImg: PropTypes.string,\r\n  titleClass: PropTypes.string,\r\n  actionClass: PropTypes.string,\r\n  footerClass: PropTypes.string,\r\n  cardBodyClass: PropTypes.string,\r\n  cardHeaderClass: PropTypes.string,\r\n  heightFull: PropTypes.bool,\r\n};\r\n\r\nAppCard.defaultProps = {};\r\n","import {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nexport const highlightTheme = {\r\n  plain: {\r\n    color: '#F8F8F2',\r\n    fontFamily: 'Poppins',\r\n    fontWeight: Fonts.REGULAR,\r\n    backgroundColor: '#333333',\r\n  },\r\n  styles: [\r\n    {\r\n      types: ['prolog', 'constant', 'builtin'],\r\n      style: {\r\n        color: '#FFFFFF',\r\n      },\r\n    },\r\n    {\r\n      types: ['inserted', 'tag', 'function'],\r\n      style: {\r\n        color: '#E6DB74',\r\n      },\r\n    },\r\n    {\r\n      types: ['deleted'],\r\n      style: {\r\n        color: 'rgb(255, 85, 85)',\r\n      },\r\n    },\r\n    {\r\n      types: ['changed'],\r\n      style: {\r\n        color: 'rgb(255, 184, 108)',\r\n      },\r\n    },\r\n    {\r\n      types: ['punctuation', 'symbol'],\r\n      style: {\r\n        color: 'rgb(248, 248, 242)',\r\n      },\r\n    },\r\n    {\r\n      types: ['string', 'char', 'selector'],\r\n      style: {\r\n        color: '#98CD2F',\r\n      },\r\n    },\r\n    {\r\n      types: ['keyword', 'variable'],\r\n      style: {\r\n        color: '#65D4EA',\r\n        // fontStyle: \"italic\"\r\n      },\r\n    },\r\n    {\r\n      types: ['comment'],\r\n      style: {\r\n        color: 'rgb(98, 114, 164)',\r\n      },\r\n    },\r\n    {\r\n      types: ['attr-name'],\r\n      style: {\r\n        color: '#98CD2F',\r\n      },\r\n    },\r\n  ],\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"compCardTitleDescription\":\"AppComponentCard_compCardTitleDescription__SHL6w\",\"preTag\":\"AppComponentCard_preTag__0+EII\",\"componentRoot\":\"AppComponentCard_componentRoot__dgPU7\",\"codeIcon\":\"AppComponentCard_codeIcon__mUnRp\"};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// In firefox, setTimeout with duration 0 too short for browser notice the changes in dom\r\nconst initialTransitDuration = 20;\r\n\r\nconst PHASE = {\r\n  CLOSE: 'close',\r\n  CLOSING: 'closing',\r\n  CLOSED: 'closed',\r\n  OPEN: 'open',\r\n  OPENING: 'opening',\r\n  OPENED: 'opened',\r\n};\r\n\r\nconst GROUP = {\r\n  [PHASE.CLOSE]: PHASE.CLOSE,\r\n  [PHASE.CLOSED]: PHASE.CLOSE,\r\n  [PHASE.OPENING]: PHASE.CLOSE,\r\n\r\n  [PHASE.CLOSING]: PHASE.OPEN,\r\n  [PHASE.OPEN]: PHASE.OPEN,\r\n  [PHASE.OPENED]: PHASE.OPEN,\r\n};\r\n\r\nclass Expand extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: this.props.open ? PHASE.OPEN : PHASE.CLOSE,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps /* prevState */) {\r\n    if (prevProps.open !== this.props.open) {\r\n      this.toggle(this.props.open);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.clearDelay();\r\n  }\r\n\r\n  getClientHeight = () => this.refWrapper.scrollHeight;\r\n\r\n  getDefaultExpandStyle = () => {\r\n    const {status} = this.state;\r\n\r\n    switch (status) {\r\n      case PHASE.OPENING:\r\n      case PHASE.CLOSE:\r\n      case PHASE.CLOSED:\r\n        return {height: 0, opacity: 0, overflow: 'hidden'};\r\n      case PHASE.OPENED:\r\n      case PHASE.CLOSING:\r\n        return {height: this.getClientHeight(), opacity: 1, overflow: 'hidden'};\r\n      default:\r\n        return {height: 'auto', opacity: 1, overflow: 'unset'};\r\n    }\r\n  };\r\n\r\n  getExpandStyle = () => ({\r\n    ...this.getDefaultExpandStyle(),\r\n    ...this.props.styles[GROUP[this.state.status]],\r\n  });\r\n\r\n  getTransition = (attribute) =>\r\n    `${attribute} ${this.props.duration}ms ${this.props.easing}`;\r\n\r\n  getStyle() {\r\n    const transition = this.props.transitions.map(this.getTransition).join(',');\r\n\r\n    return {\r\n      ...this.getExpandStyle(),\r\n      transition,\r\n    };\r\n  }\r\n\r\n  updateStatus = (status) => this.setState({status});\r\n\r\n  delay = (fn, time) => {\r\n    this.timeout = setTimeout(fn, time);\r\n  };\r\n\r\n  clearDelay = () => {\r\n    if (this.timeout) {\r\n      clearTimeout(this.timeout);\r\n    }\r\n  };\r\n\r\n  transit = (entering, entered, enter) => {\r\n    const {duration} = this.props;\r\n\r\n    this.updateStatus(entering);\r\n\r\n    this.delay(() => {\r\n      this.updateStatus(entered);\r\n\r\n      this.delay(() => {\r\n        this.updateStatus(enter);\r\n      }, duration);\r\n    }, initialTransitDuration);\r\n  };\r\n\r\n  toggle = (open) => {\r\n    this.clearDelay();\r\n\r\n    if (open) {\r\n      this.transit(PHASE.OPENING, PHASE.OPENED, PHASE.OPEN);\r\n    } else {\r\n      this.transit(PHASE.CLOSING, PHASE.CLOSED, PHASE.CLOSE);\r\n    }\r\n  };\r\n\r\n  setRef = (ref) => {\r\n    this.refWrapper = ref;\r\n  };\r\n\r\n  render() {\r\n    const {className, children, tag: Tag} = this.props;\r\n\r\n    const childProps = {\r\n      className,\r\n      style: this.getStyle(),\r\n      ref: this.setRef,\r\n    };\r\n\r\n    return <Tag {...childProps}>{children}</Tag>;\r\n  }\r\n}\r\n\r\nExpand.propTypes = {\r\n  children: PropTypes.node,\r\n  open: PropTypes.bool,\r\n  duration: PropTypes.number,\r\n  easing: PropTypes.string,\r\n  className: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  transitions: PropTypes.arrayOf(PropTypes.string),\r\n  styles: PropTypes.shape({\r\n    [PHASE.OPEN]: PropTypes.object,\r\n    [PHASE.CLOSE]: PropTypes.object,\r\n  }),\r\n};\r\n\r\nExpand.defaultProps = {\r\n  open: false,\r\n  duration: 200,\r\n  easing: 'ease-in-out',\r\n  className: '',\r\n  tag: 'div',\r\n  transitions: ['height', 'opacity'],\r\n  styles: {},\r\n};\r\n\r\nexport default Expand;\r\n","import React, {useState} from 'react';\r\nimport Highlight, {defaultProps} from 'prism-react-renderer';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {highlightTheme} from './highlightTheme';\r\nimport AppScrollbar from '../AppScrollbar';\r\nimport styles from './index.module.scss';\r\nimport Expand from '../AppAnimate/Expand';\r\nimport AppCard from '../AppCard';\r\nimport {HiOutlineCode} from 'react-icons/hi';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst ComponentCardWithoutAnim = ({\r\n  title,\r\n  description,\r\n  className,\r\n  maxHeight,\r\n  component: Component,\r\n  source,\r\n}) => {\r\n  const [viewSource, setToggleViewSource] = useState(false);\r\n  return (\r\n    <AppCard\r\n      className={className}\r\n      title={\r\n        <div className='w-100'>\r\n          <div>{title}</div>\r\n          <div\r\n            className={clsx(styles.compCardTitleDescription, 'text-truncate')}>\r\n            {description}\r\n          </div>\r\n        </div>\r\n      }\r\n      extra={\r\n        source ? (\r\n          <Button\r\n            aria-label='view code'\r\n            shape='circle'\r\n            onClick={() => setToggleViewSource(!viewSource)}>\r\n            <HiOutlineCode className={styles.codeIcon} />\r\n          </Button>\r\n        ) : null\r\n      }>\r\n      <Expand open={viewSource}>\r\n        {source ? (\r\n          <AppScrollbar\r\n            style={{\r\n              borderRadius: 8,\r\n              background: '#333333',\r\n              height: 350,\r\n              maxHeight: 400,\r\n            }}>\r\n            <Highlight\r\n              {...defaultProps}\r\n              code={source}\r\n              language='jsx'\r\n              theme={highlightTheme}>\r\n              {({style, tokens, getLineProps, getTokenProps}) => (\r\n                <pre\r\n                  className={styles.preTag}\r\n                  style={{...style, maxHeight: 500}}>\r\n                  {tokens.map((line, i) => (\r\n                    <div key={i} {...getLineProps({line, key: i})}>\r\n                      {line.map((token, key) => (\r\n                        <span key={i} {...getTokenProps({token, key})} />\r\n                      ))}\r\n                    </div>\r\n                  ))}\r\n                </pre>\r\n              )}\r\n            </Highlight>\r\n          </AppScrollbar>\r\n        ) : null}\r\n      </Expand>\r\n      <AppScrollbar\r\n        style={{maxHeight: maxHeight}}\r\n        className='position-relative'>\r\n        <div\r\n          className={clsx(\r\n            styles.componentRoot,\r\n            'd-flex align-items-center justify-content-center w-100 p-3',\r\n          )}>\r\n          <Component />\r\n        </div>\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default ComponentCardWithoutAnim;\r\n\r\nComponentCardWithoutAnim.defaultProps = {\r\n  description: '',\r\n  maxHeight: 500,\r\n};\r\n\r\nComponentCardWithoutAnim.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n  source: PropTypes.node,\r\n  title: PropTypes.node.isRequired,\r\n  description: PropTypes.node,\r\n  maxHeight: PropTypes.number,\r\n  className: PropTypes.string,\r\n  size: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport ComponentCardWithoutAnim from './ComponentCardWithoutAnim';\r\n\r\nconst AppComponentCard = ({\r\n  title,\r\n  description,\r\n  className,\r\n  maxHeight,\r\n  component,\r\n  source,\r\n}) => {\r\n  return (\r\n    <AppAnimateGroup type='bottom' interval={100} duration={450}>\r\n      <ComponentCardWithoutAnim\r\n        title={title}\r\n        description={description}\r\n        className={className}\r\n        maxHeight={maxHeight}\r\n        component={component}\r\n        source={source}\r\n        key={'card'}\r\n      />\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppComponentCard;\r\n\r\nAppComponentCard.defaultProps = {\r\n  description: '',\r\n  maxHeight: 500,\r\n};\r\n\r\nAppComponentCard.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n  source: PropTypes.node,\r\n  title: PropTypes.node.isRequired,\r\n  description: PropTypes.node,\r\n  maxHeight: PropTypes.number,\r\n  className: PropTypes.string,\r\n  size: PropTypes.number,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"headerTitle\":\"AppComponentHeader_headerTitle__A9HGS\",\"titleH3\":\"AppComponentHeader_titleH3__owcvF\",\"textBase\":\"AppComponentHeader_textBase__Hw4ll\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst AppComponentHeader = ({title, description, refUrl}) => {\r\n  return (\r\n    <AppAnimateGroup type='top' height='auto' interval={100} duration={450}>\r\n      <div\r\n        className='d-flex flex-column pb-3 flex-sm-row justify-content-sm-between pt-xxl-3'\r\n        key={'header'}>\r\n        <div className={styles.headerTitle}>\r\n          <h3 className={styles.titleH3}>{title}</h3>\r\n          {description ? (\r\n            <h5 className={styles.textBase}>{description}</h5>\r\n          ) : null}\r\n        </div>\r\n        {refUrl ? (\r\n          <div style={{height: 30}}>\r\n            <Button variant='primary' href={refUrl} target='_blank'>\r\n              Reference\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppComponentHeader;\r\n\r\nAppComponentHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  refUrl: PropTypes.string,\r\n};\r\nAppComponentHeader.defaultProps = {};\r\n","import React from 'react';\r\nimport styles from './index.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport {Row} from 'react-bootstrap';\r\n\r\nconst AppRow = (props) => <Row className={styles.row} {...props} />;\r\n\r\nconst AppRowContainer = ({children, ...others}) => {\r\n  return (\r\n    <AppAnimateGroup\r\n      animateStyle={{flexDirection: 'row'}}\r\n      component={AppRow}\r\n      type='bottom'\r\n      ease='easeInOutQuart'\r\n      height='auto'\r\n      {...others}>\r\n      {children}\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppRowContainer;\r\nAppRowContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React, {useRef, useState} from 'react';\r\nimport {Button, Overlay} from 'react-bootstrap';\r\n\r\nfunction Example() {\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <Button variant='danger' ref={target} onClick={() => setShow(!show)}>\r\n        Click me to see\r\n      </Button>\r\n      <Overlay target={target.current} show={show} placement='right'>\r\n        {({placement, arrowProps, show: _show, popper, ...props}) => (\r\n          <div\r\n            {...props}\r\n            style={{\r\n              backgroundColor: 'rgba(255, 100, 100, 0.85)',\r\n              padding: '2px 10px',\r\n              color: 'white',\r\n              borderRadius: 3,\r\n              ...props.style,\r\n            }}>\r\n            Simple tooltip\r\n          </div>\r\n        )}\r\n      </Overlay>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Overview = () => {\r\n  return (\r\n    <div>\r\n      <Example />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport {Button, OverlayTrigger, Tooltip} from 'react-bootstrap';\r\nconst OverlayTriggerDemo = () => {\r\n  const renderTooltip = (props) => (\r\n    <Tooltip id='button-tooltip' {...props}>\r\n      Simple tooltip\r\n    </Tooltip>\r\n  );\r\n\r\n  return (\r\n    <OverlayTrigger\r\n      placement='right'\r\n      delay={{show: 250, hide: 400}}\r\n      overlay={renderTooltip}>\r\n      <Button variant='success'>Hover me to see</Button>\r\n    </OverlayTrigger>\r\n  );\r\n};\r\n\r\nexport default OverlayTriggerDemo;\r\n","import React from 'react';\r\nimport {Button, Image, OverlayTrigger, Tooltip} from 'react-bootstrap';\r\n\r\nconst Customizing = () => {\r\n  return (\r\n    <div>\r\n      <OverlayTrigger\r\n        placement='bottom'\r\n        overlay={\r\n          <Tooltip id='button-tooltip-2'>Check out this avatar</Tooltip>\r\n        }>\r\n        {({ref, ...triggerHandler}) => (\r\n          <Button\r\n            variant='light'\r\n            {...triggerHandler}\r\n            className='d-inline-flex align-items-center'>\r\n            <Image\r\n              ref={ref}\r\n              roundedCircle\r\n              src='holder.js/20x20?text=J&bg=28a745&fg=FFF'\r\n            />\r\n            <span className='ms-1'>Hover to see</span>\r\n          </Button>\r\n        )}\r\n      </OverlayTrigger>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customizing;\r\n","import React, {useRef, useState} from 'react';\r\nimport {Button, Overlay, Tooltip} from 'react-bootstrap';\r\n\r\nfunction Example() {\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <Button ref={target} onClick={() => setShow(!show)}>\r\n        Click me!\r\n      </Button>\r\n      <Overlay target={target.current} show={show} placement='right'>\r\n        {(props) => (\r\n          <Tooltip id='overlay-example' {...props}>\r\n            My Tooltip\r\n          </Tooltip>\r\n        )}\r\n      </Overlay>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Tooltips = () => {\r\n  return (\r\n    <div>\r\n      <Example />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tooltips;\r\n","import React from 'react';\r\nimport {Button, OverlayTrigger, Tooltip} from 'react-bootstrap';\r\n\r\nconst Tooltips2 = () => {\r\n  return (\r\n    <div>\r\n      <>\r\n        {['top', 'right', 'bottom', 'left'].map((placement) => (\r\n          <OverlayTrigger\r\n            key={placement}\r\n            placement={placement}\r\n            overlay={\r\n              <Tooltip id={`tooltip-${placement}`}>\r\n                Tooltip on <strong>{placement}</strong>.\r\n              </Tooltip>\r\n            }>\r\n            <Button variant='secondary'>Tooltip on {placement}</Button>\r\n          </OverlayTrigger>\r\n        ))}\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tooltips2;\r\n","import React from 'react';\r\nimport {Button, OverlayTrigger, Popover} from 'react-bootstrap';\r\n\r\nconst popover = (\r\n  <Popover id='popover-basic'>\r\n    <Popover.Header as='h3'>Popover right</Popover.Header>\r\n    <Popover.Body>\r\n      And here's some <strong>amazing</strong> content. It's very engaging.\r\n      right?\r\n    </Popover.Body>\r\n  </Popover>\r\n);\r\n\r\nconst Example = () => (\r\n  <OverlayTrigger trigger='click' placement='right' overlay={popover}>\r\n    <Button variant='success'>Click me to see</Button>\r\n  </OverlayTrigger>\r\n);\r\n\r\nconst Popovers = () => {\r\n  return (\r\n    <div>\r\n      <Example />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popovers;\r\n","import React from 'react';\r\nimport {Button, OverlayTrigger, Tooltip} from 'react-bootstrap';\r\n\r\nconst Disabled = () => {\r\n  return (\r\n    <div>\r\n      <OverlayTrigger\r\n        overlay={<Tooltip id='tooltip-disabled'>Tooltip!</Tooltip>}>\r\n        <span className='d-inline-block'>\r\n          <Button disabled style={{pointerEvents: 'none'}}>\r\n            Disabled button\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Disabled;\r\n","import React, {useRef, useState} from 'react';\r\nimport {Button, Overlay, Popover} from 'react-bootstrap';\r\n\r\nfunction Example() {\r\n  const [show, setShow] = useState(false);\r\n  const [target, setTarget] = useState(null);\r\n  const ref = useRef(null);\r\n\r\n  const handleClick = (event) => {\r\n    setShow(!show);\r\n    setTarget(event.target);\r\n  };\r\n\r\n  return (\r\n    <div ref={ref}>\r\n      <Button onClick={handleClick}>Holy guacamole!</Button>\r\n\r\n      <Overlay\r\n        show={show}\r\n        target={target}\r\n        placement='bottom'\r\n        container={ref}\r\n        containerPadding={20}>\r\n        <Popover id='popover-contained'>\r\n          <Popover.Header as='h3'>Popover bottom</Popover.Header>\r\n          <Popover.Body>\r\n            <strong>Holy guacamole!</strong> Check this info.\r\n          </Popover.Body>\r\n        </Popover>\r\n      </Overlay>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Changing = () => {\r\n  return (\r\n    <div>\r\n      <Example />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Changing;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, OverlayTrigger, Popover} from 'react-bootstrap';\r\n\r\nconst UpdatingPopover = React.forwardRef(\r\n  ({popper, children, show: _, ...props}, ref) => {\r\n    useEffect(() => {\r\n      console.log('updating!');\r\n      popper.scheduleUpdate();\r\n    }, [children, popper]);\r\n\r\n    return (\r\n      <Popover ref={ref} body {...props}>\r\n        {children}\r\n      </Popover>\r\n    );\r\n  },\r\n);\r\n\r\nconst longContent = `\r\n  Very long\r\n  Multiline content\r\n  that is engaging and what-not\r\n`;\r\nconst shortContent = 'Short and sweet!';\r\n\r\nfunction Example() {\r\n  const [content, setContent] = useState(shortContent);\r\n\r\n  useEffect(() => {\r\n    const timerId = setInterval(() => {\r\n      setContent(content === shortContent ? longContent : shortContent);\r\n    }, 3000);\r\n\r\n    return () => clearInterval(timerId);\r\n  });\r\n\r\n  return (\r\n    <OverlayTrigger\r\n      trigger='click'\r\n      overlay={\r\n        <UpdatingPopover id='popover-contained'>{content}</UpdatingPopover>\r\n      }>\r\n      <Button>Holy guacamole!</Button>\r\n    </OverlayTrigger>\r\n  );\r\n}\r\n\r\nconst UpdatingPosition = () => {\r\n  return (\r\n    <div>\r\n      <Example />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdatingPosition;\r\n","import React from 'react';\r\nimport AppComponentHeader from '@crema/core/AppComponentHeader';\r\nimport AppRowContainer from '@crema/core/AppRowContainer';\r\nimport {Col} from 'react-bootstrap';\r\nimport AppComponentCard from '@crema/core/AppComponentCard';\r\n\r\nimport Overview from './Overview';\r\nimport OverviewSource from '!raw-loader!./Overview';\r\nimport OverlayTriggerDemo from './OverlayTriggerDemo';\r\nimport OverlayTriggerDemoSource from '!raw-loader!./OverlayTriggerDemo';\r\nimport Customizing from './Customizing';\r\nimport CustomizingSource from '!raw-loader!./Customizing';\r\nimport Tooltips from './Tooltips';\r\nimport TooltipsSource from '!raw-loader!./Tooltips';\r\nimport Tooltips2 from './Tooltips2';\r\nimport Tooltips2Source from '!raw-loader!./Tooltips2';\r\nimport Popovers from './Popovers';\r\nimport PopoversSource from '!raw-loader!./Popovers';\r\nimport Disabled from './Disabled';\r\nimport DisabledSource from '!raw-loader!./Disabled';\r\nimport Changing from './Changing';\r\nimport ChangingSource from '!raw-loader!./Changing';\r\nimport UpdatingPosition from './UpdatingPosition';\r\nimport UpdatingPositionSource from '!raw-loader!./UpdatingPosition';\r\n\r\nconst Overlays = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Overlays'\r\n        description='A set of components for positioning beautiful overlays, tooltips, popovers, and anything else you need.'\r\n        refUrl='https://react-bootstrap.github.io/components/overlays/'\r\n      />\r\n\r\n      <AppRowContainer>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Overview'\r\n            component={Overview}\r\n            source={OverviewSource}\r\n            noScrollbar\r\n            description='Things to know about the React-Boostrap Overlay components.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Overlay Trigger'\r\n            component={OverlayTriggerDemo}\r\n            source={OverlayTriggerDemoSource}\r\n            noScrollbar\r\n            description='Since the above pattern is pretty common, but verbose, weve included <OverlayTrigger> component to help with common use-cases. It even has functionality to delayed show or hides, and a few different \"trigger\" events you can mix and match. '\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Customizing trigger behavior'\r\n            component={Customizing}\r\n            source={CustomizingSource}\r\n            noScrollbar\r\n            description='For more advanced behaviors <OverlayTrigger> accepts a function child that passes in the injected ref and event handlers that correspond to the configured trigger prop.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Tooltips'\r\n            component={Tooltips}\r\n            source={TooltipsSource}\r\n            noScrollbar\r\n            description='A tooltip component for a more stylish alternative to that anchor tag title attribute.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Tooltips 2'\r\n            component={Tooltips2}\r\n            source={Tooltips2Source}\r\n            noScrollbar\r\n            description='Or pass a Tooltip element to OverlayTrigger instead.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Popovers'\r\n            component={Popovers}\r\n            source={PopoversSource}\r\n            noScrollbar\r\n            description='A popover component, like those found in iOS.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Disabled'\r\n            component={Disabled}\r\n            source={DisabledSource}\r\n            noScrollbar\r\n            description='Elements with the disabled attribute aren’t interactive, meaning users cannot hover or click them to trigger a popover (or tooltip).'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Changing containers'\r\n            component={Changing}\r\n            source={ChangingSource}\r\n            noScrollbar\r\n            description='You can specify a container to control the DOM element the overlay is appended to. This is especially useful when styles conflict with your Overlays.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Updating position dynamically'\r\n            component={UpdatingPosition}\r\n            source={UpdatingPositionSource}\r\n            noScrollbar\r\n            description='Since we cant know every time your overlay changes size, to reposition it, you need to take manual action if you want to update the position of an Overlay in response to a change.'\r\n          />\r\n        </Col>\r\n      </AppRowContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","export default \"import React, {useRef, useState} from 'react';\\r\\nimport {Button, Overlay} from 'react-bootstrap';\\r\\n\\r\\nfunction Example() {\\r\\n  const [show, setShow] = useState(false);\\r\\n  const target = useRef(null);\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <Button variant='danger' ref={target} onClick={() => setShow(!show)}>\\r\\n        Click me to see\\r\\n      </Button>\\r\\n      <Overlay target={target.current} show={show} placement='right'>\\r\\n        {({placement, arrowProps, show: _show, popper, ...props}) => (\\r\\n          <div\\r\\n            {...props}\\r\\n            style={{\\r\\n              backgroundColor: 'rgba(255, 100, 100, 0.85)',\\r\\n              padding: '2px 10px',\\r\\n              color: 'white',\\r\\n              borderRadius: 3,\\r\\n              ...props.style,\\r\\n            }}>\\r\\n            Simple tooltip\\r\\n          </div>\\r\\n        )}\\r\\n      </Overlay>\\r\\n    </>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst Overview = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Example />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Overview;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, OverlayTrigger, Tooltip} from 'react-bootstrap';\\r\\nconst OverlayTriggerDemo = () => {\\r\\n  const renderTooltip = (props) => (\\r\\n    <Tooltip id='button-tooltip' {...props}>\\r\\n      Simple tooltip\\r\\n    </Tooltip>\\r\\n  );\\r\\n\\r\\n  return (\\r\\n    <OverlayTrigger\\r\\n      placement='right'\\r\\n      delay={{show: 250, hide: 400}}\\r\\n      overlay={renderTooltip}>\\r\\n      <Button variant='success'>Hover me to see</Button>\\r\\n    </OverlayTrigger>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default OverlayTriggerDemo;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, Image, OverlayTrigger, Tooltip} from 'react-bootstrap';\\r\\n\\r\\nconst Customizing = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <OverlayTrigger\\r\\n        placement='bottom'\\r\\n        overlay={\\r\\n          <Tooltip id='button-tooltip-2'>Check out this avatar</Tooltip>\\r\\n        }>\\r\\n        {({ref, ...triggerHandler}) => (\\r\\n          <Button\\r\\n            variant='light'\\r\\n            {...triggerHandler}\\r\\n            className='d-inline-flex align-items-center'>\\r\\n            <Image\\r\\n              ref={ref}\\r\\n              roundedCircle\\r\\n              src='holder.js/20x20?text=J&bg=28a745&fg=FFF'\\r\\n            />\\r\\n            <span className='ms-1'>Hover to see</span>\\r\\n          </Button>\\r\\n        )}\\r\\n      </OverlayTrigger>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Customizing;\\r\\n\";","export default \"import React, {useRef, useState} from 'react';\\r\\nimport {Button, Overlay, Tooltip} from 'react-bootstrap';\\r\\n\\r\\nfunction Example() {\\r\\n  const [show, setShow] = useState(false);\\r\\n  const target = useRef(null);\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <Button ref={target} onClick={() => setShow(!show)}>\\r\\n        Click me!\\r\\n      </Button>\\r\\n      <Overlay target={target.current} show={show} placement='right'>\\r\\n        {(props) => (\\r\\n          <Tooltip id='overlay-example' {...props}>\\r\\n            My Tooltip\\r\\n          </Tooltip>\\r\\n        )}\\r\\n      </Overlay>\\r\\n    </>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst Tooltips = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Example />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Tooltips;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, OverlayTrigger, Tooltip} from 'react-bootstrap';\\r\\n\\r\\nconst Tooltips2 = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <>\\r\\n        {['top', 'right', 'bottom', 'left'].map((placement) => (\\r\\n          <OverlayTrigger\\r\\n            key={placement}\\r\\n            placement={placement}\\r\\n            overlay={\\r\\n              <Tooltip id={`tooltip-${placement}`}>\\r\\n                Tooltip on <strong>{placement}</strong>.\\r\\n              </Tooltip>\\r\\n            }>\\r\\n            <Button variant='secondary'>Tooltip on {placement}</Button>\\r\\n          </OverlayTrigger>\\r\\n        ))}\\r\\n      </>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Tooltips2;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, OverlayTrigger, Popover} from 'react-bootstrap';\\r\\n\\r\\nconst popover = (\\r\\n  <Popover id='popover-basic'>\\r\\n    <Popover.Header as='h3'>Popover right</Popover.Header>\\r\\n    <Popover.Body>\\r\\n      And here's some <strong>amazing</strong> content. It's very engaging.\\r\\n      right?\\r\\n    </Popover.Body>\\r\\n  </Popover>\\r\\n);\\r\\n\\r\\nconst Example = () => (\\r\\n  <OverlayTrigger trigger='click' placement='right' overlay={popover}>\\r\\n    <Button variant='success'>Click me to see</Button>\\r\\n  </OverlayTrigger>\\r\\n);\\r\\n\\r\\nconst Popovers = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Example />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Popovers;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, OverlayTrigger, Tooltip} from 'react-bootstrap';\\r\\n\\r\\nconst Disabled = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <OverlayTrigger\\r\\n        overlay={<Tooltip id='tooltip-disabled'>Tooltip!</Tooltip>}>\\r\\n        <span className='d-inline-block'>\\r\\n          <Button disabled style={{pointerEvents: 'none'}}>\\r\\n            Disabled button\\r\\n          </Button>\\r\\n        </span>\\r\\n      </OverlayTrigger>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Disabled;\\r\\n\";","export default \"import React, {useRef, useState} from 'react';\\r\\nimport {Button, Overlay, Popover} from 'react-bootstrap';\\r\\n\\r\\nfunction Example() {\\r\\n  const [show, setShow] = useState(false);\\r\\n  const [target, setTarget] = useState(null);\\r\\n  const ref = useRef(null);\\r\\n\\r\\n  const handleClick = (event) => {\\r\\n    setShow(!show);\\r\\n    setTarget(event.target);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div ref={ref}>\\r\\n      <Button onClick={handleClick}>Holy guacamole!</Button>\\r\\n\\r\\n      <Overlay\\r\\n        show={show}\\r\\n        target={target}\\r\\n        placement='bottom'\\r\\n        container={ref}\\r\\n        containerPadding={20}>\\r\\n        <Popover id='popover-contained'>\\r\\n          <Popover.Header as='h3'>Popover bottom</Popover.Header>\\r\\n          <Popover.Body>\\r\\n            <strong>Holy guacamole!</strong> Check this info.\\r\\n          </Popover.Body>\\r\\n        </Popover>\\r\\n      </Overlay>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst Changing = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Example />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Changing;\\r\\n\";","export default \"import React, {useEffect, useState} from 'react';\\r\\nimport {Button, OverlayTrigger, Popover} from 'react-bootstrap';\\r\\n\\r\\nconst UpdatingPopover = React.forwardRef(\\r\\n  ({popper, children, show: _, ...props}, ref) => {\\r\\n    useEffect(() => {\\r\\n      console.log('updating!');\\r\\n      popper.scheduleUpdate();\\r\\n    }, [children, popper]);\\r\\n\\r\\n    return (\\r\\n      <Popover ref={ref} body {...props}>\\r\\n        {children}\\r\\n      </Popover>\\r\\n    );\\r\\n  },\\r\\n);\\r\\n\\r\\nconst longContent = `\\r\\n  Very long\\r\\n  Multiline content\\r\\n  that is engaging and what-not\\r\\n`;\\r\\nconst shortContent = 'Short and sweet!';\\r\\n\\r\\nfunction Example() {\\r\\n  const [content, setContent] = useState(shortContent);\\r\\n\\r\\n  useEffect(() => {\\r\\n    const timerId = setInterval(() => {\\r\\n      setContent(content === shortContent ? longContent : shortContent);\\r\\n    }, 3000);\\r\\n\\r\\n    return () => clearInterval(timerId);\\r\\n  });\\r\\n\\r\\n  return (\\r\\n    <OverlayTrigger\\r\\n      trigger='click'\\r\\n      overlay={\\r\\n        <UpdatingPopover id='popover-contained'>{content}</UpdatingPopover>\\r\\n      }>\\r\\n      <Button>Holy guacamole!</Button>\\r\\n    </OverlayTrigger>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst UpdatingPosition = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Example />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default UpdatingPosition;\\r\\n\";","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"AppRowContainer_row__lSYCd\"};"],"names":["AppCard","title","footer","children","className","titleClass","actionClass","footerClass","cardBodyClass","cardHeaderClass","action","heightFull","cardImg","rest","Card","clsx","styles","Img","variant","src","Header","Title","href","Body","Footer","defaultProps","highlightTheme","plain","color","fontFamily","fontWeight","Fonts","REGULAR","backgroundColor","types","style","PHASE","GROUP","Expand","props","getClientHeight","refWrapper","scrollHeight","getDefaultExpandStyle","state","status","height","opacity","overflow","getExpandStyle","getTransition","attribute","duration","easing","updateStatus","setState","delay","fn","time","timeout","setTimeout","clearDelay","clearTimeout","transit","entering","entered","enter","toggle","open","setRef","ref","prevProps","this","transition","transitions","map","join","Tag","tag","childProps","getStyle","Component","ComponentCardWithoutAnim","description","maxHeight","component","source","useState","viewSource","setToggleViewSource","extra","Button","shape","onClick","AppScrollbar","borderRadius","background","code","language","theme","tokens","getLineProps","getTokenProps","line","i","key","token","AppComponentCard","AppAnimateGroup","type","interval","AppComponentHeader","refUrl","target","AppRow","row","others","animateStyle","flexDirection","ease","Example","show","setShow","useRef","Overlay","current","placement","arrowProps","popper","padding","OverlayTrigger","hide","overlay","Tooltip","id","triggerHandler","Image","roundedCircle","popover","Popover","as","trigger","disabled","pointerEvents","setTarget","event","container","containerPadding","UpdatingPopover","React","useEffect","console","log","scheduleUpdate","body","shortContent","content","setContent","timerId","setInterval","clearInterval","AppRowContainer","Col","xs","md","Overview","noScrollbar","OverlayTriggerDemo","Customizing","Tooltips","Tooltips2","Popovers","Disabled","Changing","UpdatingPosition"],"sourceRoot":""}