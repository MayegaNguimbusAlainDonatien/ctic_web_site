{"version":3,"file":"static/js/6647.a818136b.chunk.js","mappings":"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","sources":["@crema/core/AppAnimate/index.js","webpack://ctic/./src/@crema/core/AppCard/index.module.scss?c1e2","@crema/core/AppCard/index.js","@crema/core/AppInfoView/index.js","@crema/core/AppList/ListView.js","@crema/core/AppList/ListFooter.js","@crema/core/AppList/index.js","@crema/core/AppRowContainer/index.js","webpack://ctic/./src/@crema/core/AppSelect/index.module.scss?248f","@crema/core/AppSelect/index.js","webpack://ctic/./src/@crema/core/AppTableContainer/index.module.scss?26c5","@crema/core/AppTableContainer/index.js","webpack://ctic/./src/@crema/core/AppTableContainer/TableHeader.module.scss?d83d","@crema/core/AppTableContainer/TableHeader.js","webpack://ctic/./src/@crema/core/AppTableContainer/TableRow.module.scss?f67d","@crema/core/AppTableContainer/TableRow.js","@crema/core/AppTableContainer/AppTable.js","webpack://ctic/./src/pages/dashboards/Crypto/TotalBalance/index.module.scss?f844","pages/dashboards/Crypto/TotalBalance/index.js","webpack://ctic/./src/pages/dashboards/Crypto/Coins/index.module.scss?5d03","pages/dashboards/Crypto/Coins/coinCard.js","pages/dashboards/Crypto/Coins/index.js","pages/dashboards/Crypto/BuySell/buySellForm.js","webpack://ctic/./src/pages/dashboards/Crypto/BuySell/index.module.scss?e2f1","pages/dashboards/Crypto/BuySell/index.js","pages/dashboards/Crypto/BTCVolumeByCurrency/BtcGraph.js","webpack://ctic/./src/pages/dashboards/Crypto/BTCVolumeByCurrency/index.module.scss?f24a","pages/dashboards/Crypto/BTCVolumeByCurrency/index.js","webpack://ctic/./src/pages/dashboards/Crypto/PopularCoins/PopularCoinsTable/index.module.scss?fa36","pages/dashboards/Crypto/PopularCoins/PopularCoinsTable/index.js","pages/dashboards/Crypto/PopularCoins/index.js","webpack://ctic/./src/pages/dashboards/Crypto/LatestNews/index.module.scss?b056","pages/dashboards/Crypto/LatestNews/newsList.js","pages/dashboards/Crypto/LatestNews/index.js","pages/dashboards/Crypto/CryptoMarketActivity/MarketGraph.js","webpack://ctic/./src/pages/dashboards/Crypto/CryptoMarketActivity/index.module.scss?33a5","pages/dashboards/Crypto/CryptoMarketActivity/index.js","pages/dashboards/Crypto/Bitcoin/BitcoinGraph.js","webpack://ctic/./src/pages/dashboards/Crypto/Bitcoin/index.module.scss?5056","pages/dashboards/Crypto/Bitcoin/index.js","pages/dashboards/Crypto/index.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/Table.js","webpack://ctic/./src/@crema/core/AppList/index.module.scss?d576","webpack://ctic/./src/@crema/core/AppRowContainer/index.module.scss?e727"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, {memo} from 'react';\r\nimport {VelocityComponent} from 'velocity-react';\r\nimport 'velocity-animate/velocity.ui';\r\n\r\nconst AppAnimate = (props) => {\r\n  const children = React.cloneElement(props.children, {\r\n    style: {\r\n      ...props.children.style,\r\n      visibility: 'hidden',\r\n    },\r\n  });\r\n  return <VelocityComponent {...props}>{children}</VelocityComponent>;\r\n};\r\n\r\nAppAnimate.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nAppAnimate.defaultProps = {\r\n  animation: 'transition.fadeIn',\r\n  runOnMount: true,\r\n  targetQuerySelector: null,\r\n  interruptBehavior: 'stop',\r\n  visibility: 'visible',\r\n  duration: 400,\r\n  delay: 100,\r\n  easing: [0.4, 0.0, 0.2, 1],\r\n  display: null,\r\n  setRef: undefined,\r\n};\r\n\r\nexport default memo(AppAnimate);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"AppCard_card__lJ6Uc\",\"heightFull\":\"AppCard_heightFull__T8kun\",\"cardBody\":\"AppCard_cardBody__Yq-vX\",\"cardHeader\":\"AppCard_cardHeader__Y+R+4\",\"cardTitle\":\"AppCard_cardTitle__HaekO\",\"action\":\"AppCard_action__sd-8L\",\"cardFooter\":\"AppCard_cardFooter__qAyRn\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport styles from './index.module.scss';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst AppCard = ({\r\n  title,\r\n  footer,\r\n  children,\r\n  className,\r\n  titleClass,\r\n  actionClass,\r\n  footerClass,\r\n  cardBodyClass,\r\n  cardHeaderClass,\r\n  action,\r\n  heightFull,\r\n  cardImg,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Card\r\n      className={clsx(\r\n        styles.card,\r\n        heightFull ? styles.heightFull : '',\r\n        className,\r\n      )}\r\n      title={title}\r\n      {...rest}>\r\n      {cardImg ? <Card.Img variant='top' src={cardImg} /> : null}\r\n      {title || action ? (\r\n        <Card.Header className={clsx(styles.cardHeader, cardHeaderClass)}>\r\n          {typeof title === 'object' ? (\r\n            title\r\n          ) : (\r\n            <Card.Title\r\n              className={clsx(\r\n                styles.cardTitle,\r\n                'mb-0 text-truncate',\r\n                titleClass,\r\n              )}>\r\n              {title}\r\n            </Card.Title>\r\n          )}\r\n          {typeof action === 'object' ? (\r\n            action\r\n          ) : (\r\n            <a\r\n              className={clsx(\r\n                styles.action,\r\n                'text-decoration-none ms-1',\r\n                actionClass,\r\n              )}\r\n              href='#'>\r\n              {action}\r\n            </a>\r\n          )}\r\n        </Card.Header>\r\n      ) : null}\r\n      <Card.Body className={clsx(styles.cardBody, cardBodyClass)}>\r\n        {children}\r\n      </Card.Body>\r\n      {footer ? (\r\n        <Card.Footer className={clsx(styles.cardFooter, footerClass)}>\r\n          {footer}\r\n        </Card.Footer>\r\n      ) : null}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppCard;\r\n\r\nAppCard.propTypes = {\r\n  action: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  footer: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  cardImg: PropTypes.string,\r\n  titleClass: PropTypes.string,\r\n  actionClass: PropTypes.string,\r\n  footerClass: PropTypes.string,\r\n  cardBodyClass: PropTypes.string,\r\n  cardHeaderClass: PropTypes.string,\r\n  heightFull: PropTypes.bool,\r\n};\r\n\r\nAppCard.defaultProps = {};\r\n","import React, {useEffect} from 'react';\r\n// import {message} from 'react-bootstrap';\r\nimport AppLoader from '@crema/core/AppLoader';\r\nimport {useSelector} from 'react-redux';\r\n// import {useDispatch} from 'react-redux';\r\n// import {hideMessage} from '../../../redux/actions';\r\n\r\nconst AppInfoView = () => {\r\n  const {loading, error, displayMessage} = useSelector(({common}) => common);\r\n  // const dispatch = useDispatch();\r\n  //\r\n  // useEffect(() => {\r\n  //   if (error) {\r\n  //     message.error(error);\r\n  //     dispatch(hideMessage());\r\n  //   }\r\n  // }, [error]);\r\n  //\r\n  // useEffect(() => {\r\n  //   if (displayMessage) {\r\n  //     message.success(displayMessage);\r\n  //     dispatch(hideMessage());\r\n  //   }\r\n  // }, [displayMessage]);\r\n\r\n  return <>{loading ? <AppLoader /> : null}</>;\r\n};\r\n\r\nexport default AppInfoView;\r\n","import React from 'react';\r\nimport {useBottomScrollListener} from 'react-bottom-scroll-listener';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\n\r\nconst getEmptyContainer = (ListEmptyComponent) => {\r\n  if (ListEmptyComponent)\r\n    return React.isValidElement(ListEmptyComponent) ? (\r\n      ListEmptyComponent\r\n    ) : (\r\n      <ListEmptyComponent />\r\n    );\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = (ListFooterComponent) => {\r\n  if (ListFooterComponent)\r\n    return React.isValidElement(ListFooterComponent) ? (\r\n      ListFooterComponent\r\n    ) : (\r\n      <ListFooterComponent />\r\n    );\r\n  return null;\r\n};\r\nconst ListView = ({\r\n  renderItem,\r\n  onEndReached,\r\n  data,\r\n  ListFooterComponent,\r\n  ListEmptyComponent,\r\n  interval,\r\n  type,\r\n  duration,\r\n  className,\r\n  delay,\r\n}) => {\r\n  if (!onEndReached) {\r\n    onEndReached = () => {};\r\n  }\r\n\r\n  useBottomScrollListener(onEndReached, 200);\r\n  return (\r\n    <AppAnimateGroup\r\n      className={className}\r\n      animateStyle={{flexDirection: 'column', flexWrap: 'no-wrap'}}\r\n      interval={interval}\r\n      type={type}\r\n      delay={delay}\r\n      duration={duration}>\r\n      {data.length > 0\r\n        ? data.map((item, index) => renderItem(item, index))\r\n        : getEmptyContainer(ListEmptyComponent)}\r\n\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\nListView.propTypes = {\r\n  border: PropTypes.bool,\r\n  type: PropTypes.any,\r\n  interval: PropTypes.any,\r\n  containerStyle: PropTypes.object,\r\n  ListEmptyComponent: PropTypes.node,\r\n  ListFooterComponent: PropTypes.node,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderItem: PropTypes.func,\r\n  delay: PropTypes.any,\r\n  duration: PropTypes.any,\r\n  className: PropTypes.string,\r\n};\r\nListView.defaultProps = {\r\n  border: false,\r\n  data: [],\r\n  onEndReached: () => {},\r\n  type: 'top',\r\n  interval: 50,\r\n  delay: 0,\r\n  duration: 300,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport {ProgressBar} from 'react-bootstrap';\r\nimport clsx from 'clsx';\r\n\r\nconst ListFooter = ({loading, footerText}) => {\r\n  return loading ? (\r\n    <div\r\n      className={clsx(\r\n        styles.loaderProgress,\r\n        'd-flex align-items-center w-100 p-2',\r\n      )}>\r\n      <ProgressBar percent={30} />\r\n      <span>Loading...</span>\r\n    </div>\r\n  ) : (\r\n    <div className={clsx(styles.listFooter, 'd-flex align-items-center')}>\r\n      <p>{footerText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListFooter;\r\n\r\nListFooter.propTypes = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nListFooter.defaultProps = {\r\n  loading: false,\r\n};\r\n","import React from 'react';\r\nimport ListView from './ListView';\r\nimport PropTypes from 'prop-types';\r\nimport ListFooter from './ListFooter';\r\n\r\nconst AppList = ({footerProps, ...props}) => {\r\n  return (\r\n    <ListView\r\n      {...props}\r\n      ListFooterComponent={\r\n        footerProps ? (\r\n          <ListFooter\r\n            loading={footerProps.loading}\r\n            footerText={footerProps.footerText}\r\n          />\r\n        ) : null\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppList;\r\nAppList.propTypes = {\r\n  border: PropTypes.bool,\r\n  ListEmptyComponent: PropTypes.node,\r\n  ListFooterComponent: PropTypes.node,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderItem: PropTypes.func,\r\n  footerProps: PropTypes.string,\r\n  type: PropTypes.any,\r\n  delay: PropTypes.any,\r\n  duration: PropTypes.any,\r\n  interval: PropTypes.any,\r\n  className: PropTypes.string,\r\n};\r\nAppList.defaultProps = {\r\n  border: false,\r\n};\r\n","import React from 'react';\r\nimport styles from './index.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport {Row} from 'react-bootstrap';\r\n\r\nconst AppRow = (props) => <Row className={styles.row} {...props} />;\r\n\r\nconst AppRowContainer = ({children, ...others}) => {\r\n  return (\r\n    <AppAnimateGroup\r\n      animateStyle={{flexDirection: 'row'}}\r\n      component={AppRow}\r\n      type='bottom'\r\n      ease='easeInOutQuart'\r\n      height='auto'\r\n      {...others}>\r\n      {children}\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppRowContainer;\r\nAppRowContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"selectBox\":\"AppSelect_selectBox__AdVgE\",\"selectOption\":\"AppSelect_selectOption__DynPy\"};","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport {Form} from 'react-bootstrap';\r\nimport clsx from \"clsx\";\r\n\r\nconst AppSelect = ({menus, onChange, defaultValue, selectionKey, selectBoxClass}) => {\r\n  const [selectionType, setSelectionType] = useState(defaultValue);\r\n\r\n  const handleSelectionType = (value) => {\r\n    setSelectionType(value);\r\n    onChange(value);\r\n  };\r\n\r\n  return (\r\n    <Form.Select\r\n      aria-label='Default select example'\r\n      defaultValue={defaultValue}\r\n      value={selectionType}\r\n      onChange={handleSelectionType}\r\n      className={clsx(styles.selectBox, selectBoxClass)}>\r\n      {menus.map((menu, index) => (\r\n        <option\r\n          key={index}\r\n          value={selectionKey ? menu[selectionKey] : menu}\r\n          className={styles.selectOption}>\r\n          {selectionKey ? menu[selectionKey] : menu}\r\n        </option>\r\n      ))}\r\n    </Form.Select>\r\n  );\r\n};\r\n\r\nexport default AppSelect;\r\nAppSelect.propTypes = {\r\n  menus: PropTypes.array,\r\n  onChange: PropTypes.func,\r\n  defaultValue: PropTypes.any,\r\n  selectionKey: PropTypes.any,\r\n  selectBoxClass: PropTypes.string,\r\n};\r\nAppSelect.defaultProps = {\r\n  menus: [],\r\n  defaultValue: '',\r\n  selectionKey: '',\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"AppTableContainer_table__iNwuu\"};","import React from 'react';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {Table} from 'react-bootstrap';\r\n\r\nconst AppTableContainer = (props) => {\r\n  const {className, children, ...rest} = props;\r\n\r\n  return (\r\n    <Table responsive className={clsx(styles.table, className)} {...rest}>\r\n      {children}\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default AppTableContainer;\r\n\r\nAppTableContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableHeading\":\"TableHeader_tableHeading__dkvhk\"};","import React from 'react';\r\nimport styles from './TableHeader.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableHeader = ({columns}) => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {columns.map((data, index) => (\r\n          <th\r\n            key={index}\r\n            className={styles.tableHeading}>\r\n            {data.title}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default TableHeader;\r\n\r\nTableHeader.propTypes = {\r\n  columns: PropTypes.array,\r\n  className: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableItem\":\"TableRow_tableItem__WhG4l\"};","import React from 'react';\r\nimport styles from './TableRow.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableRow = ({row, index, columns}) => {\r\n  console.log('columns: ', columns);\r\n  return (\r\n    <tr key={index}>\r\n      {columns.map((column) => (\r\n        <td\r\n          key={column.dataIndex + index}\r\n          className={styles.tableItem}\r\n          align={column.align ? column.align : 'left'}>\r\n          <>\r\n            {column.render\r\n              ? column.render(row[column.dataIndex], row)\r\n              : row[column.dataIndex]}\r\n          </>\r\n        </td>\r\n      ))}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\nTableRow.propTypes = {\r\n  row: PropTypes.object,\r\n  columns: PropTypes.array,\r\n  index: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppTableContainer from './index';\r\nimport TableHeader from './TableHeader';\r\nimport TableRow from './TableRow';\r\n\r\nconst AppTable = ({columns, data, ...rest}) => {\r\n  return (\r\n    <AppTableContainer {...rest}>\r\n      <TableHeader columns={columns} />\r\n      <tbody>\r\n        {data.map((row, index) => {\r\n          return (\r\n            <TableRow key={index} row={row} index={index} columns={columns} />\r\n          );\r\n        })}\r\n      </tbody>\r\n    </AppTableContainer>\r\n  );\r\n};\r\n\r\nexport default AppTable;\r\n\r\nAppTable.propTypes = {\r\n  columns: PropTypes.array,\r\n  data: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btnTotalBalance\":\"TotalBalance_btnTotalBalance__TBeo1\",\"totalBalanceHeader\":\"TotalBalance_totalBalanceHeader__2YyYw\",\"totalBalance\":\"TotalBalance_totalBalance__pdiFc\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport {Button} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst TotalBalance = ({totalBalanceData}) => {\r\n  console.log('totalBalanceData:', totalBalanceData);\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <h2 className='fs-6 fw-bold text-uppercase mb-3'>\r\n        {messages['dashboard.totalBalance']}\r\n      </h2>\r\n      <AppCard>\r\n        <div className={styles.totalBalance}>\r\n          <div\r\n            className={clsx(\r\n              styles.totalBalanceHeader,\r\n              'd-flex justify-content-between flex-wrap'\r\n            )}>\r\n            <div className='d-flex flex-column pd-0'>\r\n              <h3 className='fs-5 mb-0'>${totalBalanceData.balance}</h3>\r\n              <span className='text-muted'>\r\n                {messages['dashboard.avlBalance']}\r\n              </span>\r\n            </div>\r\n            <div className='d-flex flex-row bd-highlight'>\r\n              <Button\r\n                className={clsx(\r\n                  styles.btnTotalBalance,\r\n                  'fw-bold px-4 text-uppercase text-primary text-center me-1 ms-1',\r\n                )}\r\n                size='sm'\r\n                variant='light'>\r\n                Send\r\n              </Button>\r\n              <Button\r\n                className={clsx(\r\n                  'fw-bold text-uppercase',\r\n                  styles.btnTotalBalance,\r\n                )}\r\n                size='sm'\r\n                variant='primary'>\r\n                Receive\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <p className='text-muted fs-7 mb-3'>\r\n            {messages['dashboard.buyCurrency']}\r\n          </p>\r\n          <div className='d-flex justify-content-between pd-0'>\r\n            {totalBalanceData.coins.map((coin) => (\r\n              <div className='d-flex flex-column p-0' key={coin.id}>\r\n                <h3 className='text-primary fs-5  mb-0'>{coin.value}</h3>\r\n                <p className='fs-7 text-muted mb-1'>{coin.name}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </AppCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TotalBalance;\r\n\r\nTotalBalance.defaultProps = {\r\n  totalBalanceData: {\r\n    balance: '',\r\n    coins: [],\r\n  },\r\n};\r\n\r\nTotalBalance.propTypes = {\r\n  totalBalanceData: PropTypes.object,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"imgCoins\":\"Coins_imgCoins__Ybr6R\",\"coinsPrice\":\"Coins_coinsPrice__cscDs\",\"coinsIncrement\":\"Coins_coinsIncrement__WKvMI\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport {Image} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\nconst CoinCard = (props) => {\r\n  const {icon, bgColor, data, heading} = props;\r\n\r\n  return (\r\n    <AppCard>\r\n      <div className='d-flex align-center'>\r\n        <Image\r\n          src={icon}\r\n          style={{\r\n            background: bgColor,            \r\n          }}\r\n          roundedCircle\r\n          className={styles.imgCoins}\r\n        />\r\n        <div className='mb-0 flex-grow-1'>\r\n          <p className='text-muted fs-7 text mb-2 '>{heading}</p>\r\n          <div className='d-flex mb-0 fw-bold '>\r\n            <p className={clsx('fs-6 mb-0',styles.coinsPrice)}>${data.price}</p>\r\n            <span\r\n              className={clsx(\r\n                `fs-6 text mb-0   ${\r\n                  data.increment > 0 ? 'text-success' : 'text-danger  '\r\n                }`,\r\n                styles.coinsIncrement,\r\n              )}>\r\n              {data.increment}%\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default CoinCard;\r\n\r\nCoinCard.propTypes = {\r\n  icon: PropTypes.string,\r\n  bgColor: PropTypes.string,\r\n  data: PropTypes.object,\r\n  heading: PropTypes.any.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Col} from 'react-bootstrap';\r\nimport CoinCard from './coinCard';\r\nimport {useIntl} from 'react-intl';\r\nimport AppRowContainer from '@crema/core/AppRowContainer';\r\n\r\nconst Coins = ({coinsData}) => {\r\n  const {messages} = useIntl();\r\n\r\n  const heading = {\r\n    bitcoin: messages['dashboard.bitcoinPrice'],\r\n    litecoin: messages['dashboard.litecoinPrice'],\r\n    etherium: messages['dashboard.etheriumPrice'],\r\n    ripple: messages['dashboard.ripplePrice'],\r\n  };\r\n  return (\r\n    <>\r\n      <p className='fw-bold fs-6 text'>{messages['dashboard.coins']}</p>\r\n      <AppRowContainer>\r\n        <Col xs={12} sm={6}>\r\n          <CoinCard\r\n            icon={'/assets/images/bitcoin.svg'}\r\n            data={coinsData.bitcoin}\r\n            heading={heading.bitcoin}\r\n            bgColor='#9E49E6'\r\n          />\r\n        </Col>\r\n        <Col xs={12} sm={6}>\r\n          <CoinCard\r\n            icon={'/assets/images/etherium.svg'}\r\n            data={coinsData.etherium}\r\n            heading={heading.etherium}\r\n            bgColor='#0A8FDC'\r\n          />\r\n        </Col>\r\n        <Col xs={12} sm={6}>\r\n          <CoinCard\r\n            icon={'/assets/images/litcoin.svg'}\r\n            data={coinsData.liteCoin}\r\n            heading={heading.litecoin}\r\n            bgColor='#FFA940'\r\n          />\r\n        </Col>\r\n        <Col xs={12} sm={6}>\r\n          <CoinCard\r\n            icon={'/assets/images/ripple.svg'}\r\n            data={coinsData.ripple}\r\n            heading={heading.ripple}\r\n            bgColor='#F44D50'\r\n          />\r\n        </Col>\r\n      </AppRowContainer>\r\n    </>\r\n  );\r\n};\r\nexport default Coins;\r\nCoins.propTypes = {\r\n  coinsData: PropTypes.object,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport PropTypes from 'prop-types';\r\nimport {useIntl} from 'react-intl';\r\nconst BuySellForm = ({formData}) => {\r\n  const {messages} = useIntl();\r\n  const [form, setForm] = useState({\r\n    value: formData.value,\r\n    price: formData.price,\r\n    amount: formData.amount,\r\n  });\r\n  return (\r\n    <Form>\r\n      <p className='text-end text-muted mb-1 me-1'>\r\n        {messages['dashboard.btc']}\r\n      </p>\r\n      <Form.Group className='mb-3' controlId='formBasicEmail'>\r\n        <Form.Control\r\n          type='text'\r\n          placeholder='Volume'\r\n          onChange={(e) => {\r\n            setForm({...form, value: e.target.value});\r\n          }}\r\n          value={form.value}\r\n        />\r\n      </Form.Group>\r\n      <p className='text-end text-muted mb-1 me-1'>\r\n        {messages['dashboard.btc']}\r\n      </p>\r\n      <Form.Group className='mb-3' controlId='formBasicEmail'>\r\n        <Form.Control\r\n          type='text'\r\n          placeholder='Price'\r\n          onChange={(e) => {\r\n            setForm({...form, price: e.target.value});\r\n          }}\r\n          value={form.price}\r\n        />\r\n      </Form.Group>\r\n      <p className='text-end text-muted mb-1 me-1'>\r\n        {messages['dashboard.btc']}\r\n      </p>\r\n      <Form.Group className='mb-3' controlId='formBasicEmail'>\r\n        <Form.Control\r\n          type='text'\r\n          placeholder='Amount'\r\n          onChange={(e) => {\r\n            setForm({...form, amount: e.target.value});\r\n          }}\r\n          value={form.amount}\r\n        />\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default BuySellForm;\r\nBuySellForm.propTypes = {\r\n  formData: PropTypes.object,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buySellBuyNow\":\"BuySell_buySellBuyNow__BEVfU\",\"tab\":\"BuySell_tab__cknh4\"};","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport {useIntl} from 'react-intl';\r\nimport BuySellForm from './buySellForm';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst BuySell = ({buySell}) => {\r\n  const [key, setKey] = useState('Buy');\r\n  const {messages} = useIntl();\r\n  console.log(buySell);\r\n  return (\r\n    <>\r\n      <AppCard\r\n        heightFull\r\n        title={\r\n          <Tabs\r\n            id='buySell'\r\n            activeKey={key}\r\n            onSelect={(k) => setKey(k)}\r\n            className='mb-3 fw-bold'>\r\n            <Tab\r\n              tabClassName={clsx(styles.tab, 'border-0')}\r\n              eventKey='Buy'\r\n              title={messages['common.buy']}\r\n            />\r\n            <Tab\r\n              tabClassName={clsx(styles.tab, 'border-0')}\r\n              eventKey='Sell'\r\n              title={messages['common.sell']}\r\n            />\r\n          </Tabs>\r\n        }\r\n        footerClass={clsx(styles.buySellBuyNow, 'text-danger mb-0')}\r\n        footer={<p>{messages['dashboard.buyNow']}</p>}>\r\n        {key === 'Buy' ? (\r\n          <>\r\n            <BuySellForm formData={buySell.buyData} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <BuySellForm formData={buySell.sellData} />\r\n          </>\r\n        )}\r\n      </AppCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BuySell;\r\nBuySell.propTypes = {\r\n  buySell: PropTypes.object,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Cell, Pie, PieChart, ResponsiveContainer, Sector} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst renderActiveShape = (props) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    value,\r\n  } = props;\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor='middle' fill={fill}>\r\n        {payload.name}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius}\r\n        outerRadius={outerRadius + 4}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill='none'\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke='none' />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill='#333'>{`${value}`}</text>\r\n    </g>\r\n  );\r\n};\r\n\r\nconst BtcGraph = (props) => {\r\n  const {data} = props;\r\n\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  const onPieEnter = (data, index) => {\r\n    setActiveIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='w-100 postion-relative'\r\n      style={{\r\n        height: 270,\r\n        '& .btcGraph': {\r\n          width: '80% !important',\r\n          height: '260px !important',\r\n          alignSelf: 'center',\r\n\r\n          '& .recharts-surface': {\r\n            width: '80% !important',\r\n            height: '260px !important',\r\n          },\r\n        },\r\n      }}>\r\n      <ResponsiveContainer height='100%' width='100%'>\r\n        <PieChart className='btcGraph'>\r\n          <Pie\r\n            activeIndex={activeIndex}\r\n            activeShape={renderActiveShape}\r\n            data={data}\r\n            cx='50%'\r\n            cy='50%'\r\n            innerRadius={60}\r\n            outerRadius={75}\r\n            fill='#8884d8'\r\n            paddingAngle={5}\r\n            dataKey='value'\r\n            onMouseEnter={onPieEnter}>\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={entry.color} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BtcGraph;\r\n\r\nBtcGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nBtcGraph.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"BtcGraphValue\":\"BTCVolumeByCurrency_BtcGraphValue__F19w1\"};","import AppCard from '@crema/core/AppCard';\r\nimport React from 'react';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport BtcGraph from './BtcGraph';\r\nimport styles from './index.module.scss'\r\nimport clsx from 'clsx'\r\nconst BtcVolumeCurrency = ({data}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <>\r\n      <AppCard\r\n        title={messages['dashboard.btcVolumeByCurency']}\r\n        footer={\r\n          <div className='d-flex flex-row flex-wrap justify-content-between'>\r\n            {data.map((item) => {\r\n              return (\r\n                <>\r\n                  <div className='d-flex flex-column'>\r\n                    <h3\r\n                      className={clsx('mb-0 mx-3 fw-bold text-center',styles.BtcGraphValue)}\r\n                      style={{color: item.color}}>\r\n                      {item.value}\r\n                    </h3>\r\n                    <span className='fs-6 pb-3 text-muted text-center'>\r\n                      {item.name}\r\n                    </span>\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        }>\r\n        <BtcGraph data={data} />\r\n      </AppCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BtcVolumeCurrency;\r\nBtcVolumeCurrency.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nBtcVolumeCurrency.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"imageCoins\":\"PopularCoinsTable_imageCoins__Wuc6N\",\"popularCoinsName\":\"PopularCoinsTable_popularCoinsName__SihQQ\",\"popularCoinsInfoContent\":\"PopularCoinsTable_popularCoinsInfoContent__2+Y4R\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport {Image} from 'react-bootstrap';\r\nimport AppTable from '@crema/core/AppTableContainer/AppTable';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'No.',\r\n    dataIndex: 'id',\r\n    key: 'id',\r\n  },\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    render: (name, data) => (\r\n      <div className={styles.popularCoinsName}>\r\n        <Image\r\n         className={styles.imageCoins}\r\n          roundedCircle\r\n          src={data.image}\r\n          style={{backgroundColor: data.color}}\r\n        />\r\n        <div className={styles.popularCoinsInfoContent}>\r\n          <h3>{name}</h3>\r\n        </div>\r\n      </div>\r\n    ),\r\n  },\r\n\r\n  {\r\n    title: 'Market Cap',\r\n    dataIndex: 'marketCap',\r\n    key: 'marketCap',\r\n    align: 'center',\r\n  },\r\n  {\r\n    title: 'Volume 24h',\r\n    dataIndex: 'volume',\r\n    key: 'volume',\r\n    align: 'center',\r\n  },\r\n  {\r\n    title: '24h %',\r\n    dataIndex: 'h',\r\n    key: 'h',\r\n    align: 'center',\r\n  },\r\n];\r\n\r\nconst PopularCoinsTable = ({coinsData}) => {\r\n  console.log(coinsData, 'dara');\r\n  return <AppTable hoverColor data={coinsData} columns={columns} />;\r\n};\r\n\r\nexport default PopularCoinsTable;\r\n\r\nPopularCoinsTable.defaultProps = {\r\n  coinsData: [],\r\n};\r\n\r\nPopularCoinsTable.propTypes = {\r\n  coinsData: PropTypes.array,\r\n};\r\n","import AppCard from '@crema/core/AppCard';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useIntl} from 'react-intl';\r\nimport PopularCoinsTable from './PopularCoinsTable';\r\nconst PopularCoins = ({data}) => {\r\n  console.log(data, 'coinss');\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppCard heightFull cardBodyClass='px-0'\r\n      title={messages['dashboard.popularCoins']}\r\n      action={messages['common.viewAll']}>\r\n      <PopularCoinsTable coinsData={data} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default PopularCoins;\r\nPopularCoins.defaultProps = {\r\n  popularCoins: [],\r\n};\r\n\r\nPopularCoins.propTypes = {\r\n  popularCoins: PropTypes.array,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"newsImage\":\"LatestNews_newsImage__mUQro\",\"newsContainer\":\"LatestNews_newsContainer__qDHBg\",\"newsHeading\":\"LatestNews_newsHeading__iLv0f\"};","import AppScrollbar from '@crema/core/AppScrollbar';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppList from '@crema/core/AppList';\r\nimport {Image} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst NewsList = ({data}) => {\r\n  console.log(data, 'sa');\r\n  return (\r\n    <AppScrollbar>\r\n      <AppList\r\n        data={data}\r\n        renderItem={(news) => {\r\n          return (\r\n            <div\r\n              className={clsx(\r\n                styles.newsContainer,\r\n                'd-sm-flex justify-content-sm-between',\r\n              )}>\r\n              <div className='d-flex flex-column flex-grow-1 me-sm-1 mb-2'>\r\n                <div className='d-flex flex-row mb-1'>\r\n                  <p className='text-muted fs-7 mb-0'>{news.created}</p>\r\n                  <p\r\n                    className={clsx(\r\n                      styles.newsHeading,\r\n                      'text-primary fs-7 mb-0',\r\n                    )}>\r\n                    {news.by}\r\n                  </p>\r\n                </div>\r\n                <p className='fs-7 mb-0'>{news.news}</p>\r\n              </div>\r\n              <Image\r\n                className={clsx(styles.newsImage)}\r\n                src={news.image}\r\n                rounded\r\n              />\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n    </AppScrollbar>\r\n  );\r\n};\r\n\r\nexport default NewsList;\r\n\r\nNewsList.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import AppCard from '@crema/core/AppCard';\r\nimport React from 'react';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport NewsList from './newsList';\r\nconst LatestNews = ({data}) => {\r\n  const {messages} = useIntl();\r\n  console.log(data, '123');\r\n  return (\r\n    <AppCard\r\n      titleClass='pb-1'\r\n      title={messages['dashboard.latestNews']}\r\n      action={messages['common.viewAll']}\r\n      actionClass='text-danger'\r\n      heightFull\r\n      >\r\n      <NewsList data={data} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default LatestNews;\r\nLatestNews.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MarketGraph = ({marketGraphData}) => {\r\n  return (\r\n    <div className='position-relative'>\r\n      <ResponsiveContainer height={300} width='100%'>\r\n        <BarChart barSize={8} barGap={3} data={marketGraphData}>\r\n          <XAxis dataKey='month' axisLine={false} tickLine={false} />\r\n          <YAxis hide />\r\n          <CartesianGrid strokeDasharray='3 3' vertical={false} />\r\n          <Bar dataKey='low' stackId='a' fill='#319795' />\r\n          <Bar dataKey='medium' stackId='a' fill='#4C51BF' />\r\n          <Bar dataKey='high' stackId='a' fill='#E53E3E' />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketGraph;\r\n\r\nMarketGraph.defaultProps = {\r\n  marketGraphData: [],\r\n};\r\n\r\nMarketGraph.propTypes = {\r\n  marketGraphData: PropTypes.array,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dot\":\"CryptoMarketActivity_dot__YdcGI\",\"dotText\":\"CryptoMarketActivity_dotText__we4F1\"};","import AppCard from '@crema/core/AppCard';\r\nimport React from 'react';\r\nimport {useIntl} from 'react-intl';\r\nimport MarketGraph from './MarketGraph';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport styles from './index.module.scss';\r\nconst CryptoMarketActivity = ({marketGraphData}) => {\r\n  const {messages} = useIntl();\r\n  console.log(marketGraphData);\r\n  return (\r\n    <AppCard heightFull\r\n      title={messages['dashboard.cryptoMarketActivity']}\r\n      actionClass='text-danger'\r\n      action={messages['common.viewAll']}\r\n      footer={\r\n        <div className='d-flex flex-wrap flex-row justify-content-between align-items-end'>\r\n          <div className='d-flex flex-row align-items-center'>\r\n            <span\r\n              className={styles.dot}\r\n              style={{backgroundColor: 'rgb(56, 158, 13)'}}\r\n            />\r\n            <span className={clsx('fs-7', styles.dotText)}>\r\n              {messages['common.low']}\r\n            </span>\r\n            <span\r\n              className={styles.dot}\r\n              style={{backgroundColor: 'rgb(47, 84, 235)'}}\r\n            />\r\n            <span className={clsx('fs-7', styles.dotText)}>\r\n              {messages['common.medium']}\r\n            </span>\r\n            <span\r\n              className={styles.dot}\r\n              style={{backgroundColor: 'rgb(245, 34, 45)'}}\r\n            />\r\n            <span className={clsx('fs-7', styles.dotText)}>\r\n              {messages['common.high']}\r\n            </span>\r\n          </div>\r\n          <div className='d-flex flex-row'>\r\n            <div className={clsx('d-flex flex-column',styles.dotText)}>\r\n              <h3 className='mb-0'>1356</h3>\r\n              <span className='text-muted'>Open Deals</span>\r\n            </div>\r\n            <div className='d-flex flex-column '>\r\n              <h3 className='mb-0'>$5.9B</h3>\r\n              <span className='text-muted'>Deals Volume</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }>\r\n      <MarketGraph marketGraphData={marketGraphData} />\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default CryptoMarketActivity;\r\n\r\nCryptoMarketActivity.propTypes = {\r\n  marketGraphData: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst onGetDataKey = (value) => {\r\n  switch (value) {\r\n    case 'yearly':\r\n      return 'month';\r\n\r\n    case 'monthly':\r\n      return 'date';\r\n\r\n    case 'weekly':\r\n      return 'day';\r\n\r\n    case 'daily':\r\n      return 'time';\r\n\r\n    default:\r\n      return 'month';\r\n  }\r\n};\r\nconst BitcoinGraph = ({data, value}) => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={360}>\r\n      <AreaChart data={data} margin={{top: 50, right: 0, left: 0, bottom: 0}}>\r\n        <XAxis\r\n          dataKey={onGetDataKey(value)}\r\n          tickLine={false}\r\n          axisLine={false}\r\n          padding={{left: 20, right: 20}}\r\n        />\r\n        <Tooltip labelStyle={{color: 'black'}} />\r\n        <YAxis\r\n          tickLine={false}\r\n          axisLine={false}\r\n          ticks={[2000, 4000, 6000, 8000, 10000]}\r\n          type='number'\r\n        />\r\n        <CartesianGrid\r\n          strokeDasharray='2 10'\r\n          stroke='#E53E3E'\r\n          vertical={false}\r\n        />\r\n        <defs>\r\n          <linearGradient id='color15' x1='0' y1='0' x2='0' y2='1'>\r\n            <stop offset='5%' stopColor='#FED7E2' stopOpacity={0.8} />\r\n            <stop offset='95%' stopColor='#FFF5F7' stopOpacity={0.8} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey='amount'\r\n          strokeWidth={4}\r\n          stackId='2'\r\n          stroke='#E53E3E'\r\n          fill='url(#color15)'\r\n          fillOpacity={1}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default BitcoinGraph;\r\n\r\nBitcoinGraph.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nBitcoinGraph.propTypes = {\r\n  data: PropTypes.array,\r\n  value: PropTypes.number,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tab\":\"Bitcoin_tab__mRdRh\",\"selectBox\":\"Bitcoin_selectBox__Kd83w\"};","import React, {useCallback, useEffect, useState} from 'react';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport AppSelect from '@crema/core/AppSelect';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport {Tabs, Tab} from 'react-bootstrap';\r\nimport BitcoinGraph from './BitcoinGraph';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\nconst Bitcoin = ({graphData, data}) => {\r\n  const onGetCoinData = useCallback(\r\n    (coin) => {\r\n      switch (coin) {\r\n        case 'Bitcoin': {\r\n          return graphData.bitcoin;\r\n        }\r\n        case 'Litecoin': {\r\n          return graphData.litecoin;\r\n        }\r\n        case 'Ripple': {\r\n          return graphData.ripple;\r\n        }\r\n        default:\r\n          return graphData.bitcoin;\r\n      }\r\n    },\r\n    [graphData],\r\n  );\r\n\r\n  const {messages} = useIntl();\r\n  const [coinType, setCoinType] = useState('Bitcoin');\r\n  const [coinData, setCoinData] = useState(onGetCoinData(coinType));\r\n  const [graphType, setGraphType] = useState('yearly');\r\n\r\n  console.log(data, graphData, '123');\r\n\r\n  useEffect(() => {\r\n    setCoinData(onGetCoinData(coinType));\r\n  }, [coinType, onGetCoinData]);\r\n  const handleSelectionType = (data) => {\r\n    setCoinType(data.target.value);\r\n  };\r\n\r\n  console.log(coinType, data, graphType);\r\n  return (\r\n    <AppCard\r\n      title={\r\n        <div className='w-100 d-flex flex-row flex-wrap'>\r\n          <div className='d-flex flex-row align-items-center'>\r\n            <AppSelect\r\n              selectBoxClass={clsx(styles.selectBox, 'me-2')}\r\n              menus={[\r\n                messages['dashboard.bitcoin'],\r\n                messages['dashboard.litecoin'],\r\n                messages['dashboard.ripple'],\r\n              ]}\r\n              defaultValue={messages['dashboard.bitcoin']}\r\n              onChange={handleSelectionType}\r\n            />\r\n            <h3 className='mb-0 mx-2 text-primary fw-bold'>$7280.45</h3>\r\n            <span className='fs-7 text-success fw-bold'> 0.8%</span>\r\n          </div>\r\n\r\n          <Tabs\r\n            id='graphType'\r\n            activeKey={graphType}\r\n            onSelect={(k) => setGraphType(k)}\r\n            className='fs-7 ms-auto'>\r\n            <Tab\r\n              tabClassName={clsx(styles.tab, 'border-0 pt-2 text-center')}\r\n              eventKey='yearly'\r\n              title={messages['common.yearly']}\r\n            />\r\n            <Tab\r\n              tabClassName={clsx(styles.tab, 'border-0 pt-2 text-center')}\r\n              eventKey='monthly'\r\n              title={messages['common.monthly']}\r\n            />\r\n            <Tab\r\n              tabClassName={clsx(styles.tab, 'border-0 pt-2 text-center')}\r\n              eventKey='weekly'\r\n              title={messages['common.weekly']}\r\n            />\r\n            <Tab\r\n              tabClassName={clsx(styles.tab, 'border-0 pt-2 text-center')}\r\n              eventKey='daily'\r\n              title={messages['common.today']}\r\n            />\r\n          </Tabs>\r\n        </div>\r\n      }>\r\n      <div>\r\n        {graphType === 'yearly' && (\r\n          <BitcoinGraph data={coinData.yearlyData} value={graphType} />\r\n        )}\r\n        {graphType === 'monthly' && (\r\n          <BitcoinGraph data={coinData.monthlyData} value={graphType} />\r\n        )}\r\n        {graphType === 'weekly' && (\r\n          <BitcoinGraph data={coinData.weeklyData} value={graphType} />\r\n        )}\r\n        {graphType === 'daily' && (\r\n          <BitcoinGraph data={coinData.dailyData} value={graphType} />\r\n        )}\r\n      </div>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default Bitcoin;\r\nBitcoin.propTypes = {\r\n  data: PropTypes.object,\r\n  graphData: PropTypes.object,\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onGetCryptoData} from '../../../redux/actions';\r\nimport AppAnimate from '@crema/core/AppAnimate';\r\nimport AppRowContainer from '@crema/core/AppRowContainer';\r\nimport {Col} from 'react-bootstrap';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport TotalBalance from './TotalBalance';\r\nimport Coins from './Coins';\r\nimport BuySell from './BuySell';\r\nimport BtcVolumeCurrency from './BTCVolumeByCurrency';\r\nimport PopularCoins from './PopularCoins';\r\nimport LatestNews from './LatestNews';\r\nimport CryptoMarketactivity from './CryptoMarketActivity';\r\nimport Bitcoin from './Bitcoin';\r\nconst Crypto = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetCryptoData());\r\n  }, [dispatch]);\r\n\r\n  const cryptoData = useSelector(({dashboard}) => dashboard.cryptoData);\r\n  console.log(cryptoData, 'asd');\r\n  return (\r\n    <>\r\n      {cryptoData ? (\r\n        <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n          <AppRowContainer>\r\n            <Col xs={12} lg={5}>\r\n              <TotalBalance totalBalanceData={cryptoData.totalBalanceData} />\r\n            </Col>\r\n\r\n            <Col xs={12} lg={7}>\r\n              <Coins coinsData={cryptoData.coinsData} />\r\n            </Col>\r\n\r\n            <Col xs={12} lg={8}>\r\n              <Bitcoin\r\n                graphData={cryptoData.coinGraphData}\r\n                data={cryptoData.coinsData}\r\n              />\r\n            </Col>\r\n\r\n            <Col xs={12} lg={4}>\r\n              <BuySell buySell={cryptoData.buySell} />\r\n            </Col>\r\n\r\n            <Col xs={12} lg={4}>\r\n              <BtcVolumeCurrency data={cryptoData.btcChartData} />\r\n            </Col>\r\n\r\n            <Col xs={12} lg={8}>\r\n              <PopularCoins data={cryptoData.popularCoins} />\r\n            </Col>\r\n\r\n            <Col xs={12} lg={6}>\r\n              <LatestNews data={cryptoData.newsData} />\r\n            </Col>\r\n\r\n            <Col xs={12} lg={6}>\r\n              <CryptoMarketactivity\r\n                marketGraphData={cryptoData.marketGraphData}\r\n              />\r\n            </Col>\r\n          </AppRowContainer>\r\n        </AppAnimate>\r\n      ) : null}\r\n\r\n      <AppInfoView />\r\n    </>\r\n  );\r\n};\r\nexport default Crypto;\r\n","import * as React from 'react';\nimport Tabs from '@restart/ui/Tabs';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst TabContainer = ({\n  transition,\n  ...props\n}) => /*#__PURE__*/_jsx(Tabs, { ...props,\n  transition: getTabTransitionComponent(transition)\n});\n\nTabContainer.displayName = 'TabContainer';\nexport default TabContainer;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/* eslint-disable react/no-unused-prop-types */\nconst propTypes = {\n  eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Content for the tab title.\n   */\n  title: PropTypes.node.isRequired,\n\n  /**\n   * The disabled state of the tab.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Class to pass to the underlying nav link.\n   */\n  tabClassName: PropTypes.string\n};\n\nconst Tab = () => {\n  throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly'); // Needed otherwise docs error out.\n\n  return /*#__PURE__*/_jsx(_Fragment, {});\n};\n\nTab.propTypes = propTypes;\nexport default Object.assign(Tab, {\n  Container: TabContainer,\n  Content: TabContent,\n  Pane: TabPane\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","// extracted by mini-css-extract-plugin\nexport default {\"listFooter\":\"AppList_listFooter__Sh7ys\",\"loaderProgress\":\"AppList_loaderProgress__rZEBy\",\"emptyListContainer\":\"AppList_emptyListContainer__PsPAD\"};","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"AppRowContainer_row__lSYCd\"};"],"names":["AppAnimate","props","children","React","style","visibility","VelocityComponent","defaultProps","animation","runOnMount","targetQuerySelector","interruptBehavior","duration","delay","easing","display","setRef","undefined","memo","AppCard","title","footer","className","titleClass","actionClass","footerClass","cardBodyClass","cardHeaderClass","action","heightFull","cardImg","rest","Card","clsx","styles","Img","variant","src","Header","Title","href","Body","Footer","useSelector","common","loading","error","displayMessage","getEmptyContainer","ListEmptyComponent","getFooterContainer","ListFooterComponent","ListView","renderItem","onEndReached","data","interval","type","useBottomScrollListener","AppAnimateGroup","animateStyle","flexDirection","flexWrap","length","map","item","index","border","ListFooter","footerText","loaderProgress","ProgressBar","percent","listFooter","AppList","footerProps","AppRow","row","others","component","ease","height","AppSelect","menus","onChange","defaultValue","selectionKey","selectBoxClass","useState","selectionType","setSelectionType","Form","Select","value","menu","Table","responsive","columns","console","log","column","align","render","dataIndex","TotalBalance","totalBalanceData","messages","useIntl","balance","Button","size","coins","coin","name","id","icon","bgColor","heading","Image","background","roundedCircle","price","increment","coinsData","bitcoin","litecoin","etherium","ripple","AppRowContainer","Col","xs","sm","liteCoin","formData","amount","form","setForm","Group","controlId","Control","placeholder","e","target","buySell","key","setKey","Tabs","activeKey","onSelect","k","Tab","tabClassName","eventKey","buyData","sellData","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","stroke","r","BtcGraph","activeIndex","setActiveIndex","width","alignSelf","ResponsiveContainer","PieChart","Pie","activeShape","paddingAngle","dataKey","onMouseEnter","entry","Cell","color","BtcVolumeCurrency","image","backgroundColor","PopularCoinsTable","AppTable","hoverColor","PopularCoins","popularCoins","AppScrollbar","news","created","by","rounded","MarketGraph","marketGraphData","BarChart","barSize","barGap","XAxis","axisLine","tickLine","YAxis","hide","CartesianGrid","strokeDasharray","vertical","Bar","stackId","onGetDataKey","BitcoinGraph","AreaChart","margin","top","right","left","bottom","padding","Tooltip","labelStyle","ticks","x1","y1","x2","y2","offset","stopColor","stopOpacity","Area","strokeWidth","fillOpacity","graphData","onGetCoinData","useCallback","coinType","setCoinType","coinData","setCoinData","graphType","setGraphType","useEffect","yearlyData","monthlyData","weeklyData","dailyData","dispatch","useDispatch","onGetCryptoData","cryptoData","dashboard","lg","coinGraphData","btcChartData","newsData","AppInfoView","TabContainer","transition","_jsx","getTabTransitionComponent","displayName","propTypes","PropTypes","isRequired","disabled","Error","Object","assign","Container","Content","TabContent","Pane","TabPane","ref","bsPrefix","striped","bordered","borderless","hover","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass"],"sourceRoot":""}