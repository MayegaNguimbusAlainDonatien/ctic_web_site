{"version":3,"file":"static/js/2960.09be5d7e.chunk.js","mappings":"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","sources":["webpack://ctic/./src/@crema/core/AppCard/index.module.scss?c1e2","@crema/core/AppCard/index.js","@crema/core/AppComponentCard/highlightTheme.js","webpack://ctic/./src/@crema/core/AppComponentCard/index.module.scss?0c6d","@crema/core/AppAnimate/Expand.js","@crema/core/AppComponentCard/ComponentCardWithoutAnim.js","@crema/core/AppComponentCard/index.js","webpack://ctic/./src/@crema/core/AppComponentHeader/index.module.scss?ae62","@crema/core/AppComponentHeader/index.js","@crema/core/AppRowContainer/index.js","pages/components/Dropdowns/Drop.js","pages/components/Dropdowns/Examples.js","pages/components/Dropdowns/Split.js","pages/components/Dropdowns/Dark.js","pages/components/Dropdowns/Sizing.js","pages/components/Dropdowns/UsingDemo.js","pages/components/Dropdowns/Items.js","pages/components/Dropdowns/MenuAlignment.js","pages/components/Dropdowns/Responsive.js","pages/components/Dropdowns/MenuHeaders.js","pages/components/Dropdowns/MenuDividers.js","pages/components/Dropdowns/AutoClose.js","pages/components/Dropdowns/CustomizationDemo.js","pages/components/Dropdowns/index.js","webpack://ctic/./src/pages/components/Dropdowns/Examples.js?7829","webpack://ctic/./src/pages/components/Dropdowns/Split.js?46f1","webpack://ctic/./src/pages/components/Dropdowns/Sizing.js?c236","webpack://ctic/./src/pages/components/Dropdowns/Dark.js?e331","webpack://ctic/./src/pages/components/Dropdowns/UsingDemo.js?9513","webpack://ctic/./src/pages/components/Dropdowns/Drop.js?424e","webpack://ctic/./src/pages/components/Dropdowns/Items.js?4685","webpack://ctic/./src/pages/components/Dropdowns/MenuAlignment.js?2931","webpack://ctic/./src/pages/components/Dropdowns/Responsive.js?45c7","webpack://ctic/./src/pages/components/Dropdowns/AutoClose.js?3afa","webpack://ctic/./src/pages/components/Dropdowns/MenuHeaders.js?0e82","webpack://ctic/./src/pages/components/Dropdowns/MenuDividers.js?a911","webpack://ctic/./src/pages/components/Dropdowns/CustomizationDemo.js?1969","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/DropdownButton.js","../node_modules/react-bootstrap/esm/SplitButton.js","../node_modules/react-bootstrap/esm/types.js","webpack://ctic/./src/@crema/core/AppRowContainer/index.module.scss?e727","webpack://ctic/./src/pages/components/Dropdowns/index.module.scss?54ea"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"AppCard_card__lJ6Uc\",\"heightFull\":\"AppCard_heightFull__T8kun\",\"cardBody\":\"AppCard_cardBody__Yq-vX\",\"cardHeader\":\"AppCard_cardHeader__Y+R+4\",\"cardTitle\":\"AppCard_cardTitle__HaekO\",\"action\":\"AppCard_action__sd-8L\",\"cardFooter\":\"AppCard_cardFooter__qAyRn\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport styles from './index.module.scss';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst AppCard = ({\r\n  title,\r\n  footer,\r\n  children,\r\n  className,\r\n  titleClass,\r\n  actionClass,\r\n  footerClass,\r\n  cardBodyClass,\r\n  cardHeaderClass,\r\n  action,\r\n  heightFull,\r\n  cardImg,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Card\r\n      className={clsx(\r\n        styles.card,\r\n        heightFull ? styles.heightFull : '',\r\n        className,\r\n      )}\r\n      title={title}\r\n      {...rest}>\r\n      {cardImg ? <Card.Img variant='top' src={cardImg} /> : null}\r\n      {title || action ? (\r\n        <Card.Header className={clsx(styles.cardHeader, cardHeaderClass)}>\r\n          {typeof title === 'object' ? (\r\n            title\r\n          ) : (\r\n            <Card.Title\r\n              className={clsx(\r\n                styles.cardTitle,\r\n                'mb-0 text-truncate',\r\n                titleClass,\r\n              )}>\r\n              {title}\r\n            </Card.Title>\r\n          )}\r\n          {typeof action === 'object' ? (\r\n            action\r\n          ) : (\r\n            <a\r\n              className={clsx(\r\n                styles.action,\r\n                'text-decoration-none ms-1',\r\n                actionClass,\r\n              )}\r\n              href='#'>\r\n              {action}\r\n            </a>\r\n          )}\r\n        </Card.Header>\r\n      ) : null}\r\n      <Card.Body className={clsx(styles.cardBody, cardBodyClass)}>\r\n        {children}\r\n      </Card.Body>\r\n      {footer ? (\r\n        <Card.Footer className={clsx(styles.cardFooter, footerClass)}>\r\n          {footer}\r\n        </Card.Footer>\r\n      ) : null}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppCard;\r\n\r\nAppCard.propTypes = {\r\n  action: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  footer: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  cardImg: PropTypes.string,\r\n  titleClass: PropTypes.string,\r\n  actionClass: PropTypes.string,\r\n  footerClass: PropTypes.string,\r\n  cardBodyClass: PropTypes.string,\r\n  cardHeaderClass: PropTypes.string,\r\n  heightFull: PropTypes.bool,\r\n};\r\n\r\nAppCard.defaultProps = {};\r\n","import {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nexport const highlightTheme = {\r\n  plain: {\r\n    color: '#F8F8F2',\r\n    fontFamily: 'Poppins',\r\n    fontWeight: Fonts.REGULAR,\r\n    backgroundColor: '#333333',\r\n  },\r\n  styles: [\r\n    {\r\n      types: ['prolog', 'constant', 'builtin'],\r\n      style: {\r\n        color: '#FFFFFF',\r\n      },\r\n    },\r\n    {\r\n      types: ['inserted', 'tag', 'function'],\r\n      style: {\r\n        color: '#E6DB74',\r\n      },\r\n    },\r\n    {\r\n      types: ['deleted'],\r\n      style: {\r\n        color: 'rgb(255, 85, 85)',\r\n      },\r\n    },\r\n    {\r\n      types: ['changed'],\r\n      style: {\r\n        color: 'rgb(255, 184, 108)',\r\n      },\r\n    },\r\n    {\r\n      types: ['punctuation', 'symbol'],\r\n      style: {\r\n        color: 'rgb(248, 248, 242)',\r\n      },\r\n    },\r\n    {\r\n      types: ['string', 'char', 'selector'],\r\n      style: {\r\n        color: '#98CD2F',\r\n      },\r\n    },\r\n    {\r\n      types: ['keyword', 'variable'],\r\n      style: {\r\n        color: '#65D4EA',\r\n        // fontStyle: \"italic\"\r\n      },\r\n    },\r\n    {\r\n      types: ['comment'],\r\n      style: {\r\n        color: 'rgb(98, 114, 164)',\r\n      },\r\n    },\r\n    {\r\n      types: ['attr-name'],\r\n      style: {\r\n        color: '#98CD2F',\r\n      },\r\n    },\r\n  ],\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"compCardTitleDescription\":\"AppComponentCard_compCardTitleDescription__SHL6w\",\"preTag\":\"AppComponentCard_preTag__0+EII\",\"componentRoot\":\"AppComponentCard_componentRoot__dgPU7\",\"codeIcon\":\"AppComponentCard_codeIcon__mUnRp\"};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// In firefox, setTimeout with duration 0 too short for browser notice the changes in dom\r\nconst initialTransitDuration = 20;\r\n\r\nconst PHASE = {\r\n  CLOSE: 'close',\r\n  CLOSING: 'closing',\r\n  CLOSED: 'closed',\r\n  OPEN: 'open',\r\n  OPENING: 'opening',\r\n  OPENED: 'opened',\r\n};\r\n\r\nconst GROUP = {\r\n  [PHASE.CLOSE]: PHASE.CLOSE,\r\n  [PHASE.CLOSED]: PHASE.CLOSE,\r\n  [PHASE.OPENING]: PHASE.CLOSE,\r\n\r\n  [PHASE.CLOSING]: PHASE.OPEN,\r\n  [PHASE.OPEN]: PHASE.OPEN,\r\n  [PHASE.OPENED]: PHASE.OPEN,\r\n};\r\n\r\nclass Expand extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: this.props.open ? PHASE.OPEN : PHASE.CLOSE,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps /* prevState */) {\r\n    if (prevProps.open !== this.props.open) {\r\n      this.toggle(this.props.open);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.clearDelay();\r\n  }\r\n\r\n  getClientHeight = () => this.refWrapper.scrollHeight;\r\n\r\n  getDefaultExpandStyle = () => {\r\n    const {status} = this.state;\r\n\r\n    switch (status) {\r\n      case PHASE.OPENING:\r\n      case PHASE.CLOSE:\r\n      case PHASE.CLOSED:\r\n        return {height: 0, opacity: 0, overflow: 'hidden'};\r\n      case PHASE.OPENED:\r\n      case PHASE.CLOSING:\r\n        return {height: this.getClientHeight(), opacity: 1, overflow: 'hidden'};\r\n      default:\r\n        return {height: 'auto', opacity: 1, overflow: 'unset'};\r\n    }\r\n  };\r\n\r\n  getExpandStyle = () => ({\r\n    ...this.getDefaultExpandStyle(),\r\n    ...this.props.styles[GROUP[this.state.status]],\r\n  });\r\n\r\n  getTransition = (attribute) =>\r\n    `${attribute} ${this.props.duration}ms ${this.props.easing}`;\r\n\r\n  getStyle() {\r\n    const transition = this.props.transitions.map(this.getTransition).join(',');\r\n\r\n    return {\r\n      ...this.getExpandStyle(),\r\n      transition,\r\n    };\r\n  }\r\n\r\n  updateStatus = (status) => this.setState({status});\r\n\r\n  delay = (fn, time) => {\r\n    this.timeout = setTimeout(fn, time);\r\n  };\r\n\r\n  clearDelay = () => {\r\n    if (this.timeout) {\r\n      clearTimeout(this.timeout);\r\n    }\r\n  };\r\n\r\n  transit = (entering, entered, enter) => {\r\n    const {duration} = this.props;\r\n\r\n    this.updateStatus(entering);\r\n\r\n    this.delay(() => {\r\n      this.updateStatus(entered);\r\n\r\n      this.delay(() => {\r\n        this.updateStatus(enter);\r\n      }, duration);\r\n    }, initialTransitDuration);\r\n  };\r\n\r\n  toggle = (open) => {\r\n    this.clearDelay();\r\n\r\n    if (open) {\r\n      this.transit(PHASE.OPENING, PHASE.OPENED, PHASE.OPEN);\r\n    } else {\r\n      this.transit(PHASE.CLOSING, PHASE.CLOSED, PHASE.CLOSE);\r\n    }\r\n  };\r\n\r\n  setRef = (ref) => {\r\n    this.refWrapper = ref;\r\n  };\r\n\r\n  render() {\r\n    const {className, children, tag: Tag} = this.props;\r\n\r\n    const childProps = {\r\n      className,\r\n      style: this.getStyle(),\r\n      ref: this.setRef,\r\n    };\r\n\r\n    return <Tag {...childProps}>{children}</Tag>;\r\n  }\r\n}\r\n\r\nExpand.propTypes = {\r\n  children: PropTypes.node,\r\n  open: PropTypes.bool,\r\n  duration: PropTypes.number,\r\n  easing: PropTypes.string,\r\n  className: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  transitions: PropTypes.arrayOf(PropTypes.string),\r\n  styles: PropTypes.shape({\r\n    [PHASE.OPEN]: PropTypes.object,\r\n    [PHASE.CLOSE]: PropTypes.object,\r\n  }),\r\n};\r\n\r\nExpand.defaultProps = {\r\n  open: false,\r\n  duration: 200,\r\n  easing: 'ease-in-out',\r\n  className: '',\r\n  tag: 'div',\r\n  transitions: ['height', 'opacity'],\r\n  styles: {},\r\n};\r\n\r\nexport default Expand;\r\n","import React, {useState} from 'react';\r\nimport Highlight, {defaultProps} from 'prism-react-renderer';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {highlightTheme} from './highlightTheme';\r\nimport AppScrollbar from '../AppScrollbar';\r\nimport styles from './index.module.scss';\r\nimport Expand from '../AppAnimate/Expand';\r\nimport AppCard from '../AppCard';\r\nimport {HiOutlineCode} from 'react-icons/hi';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst ComponentCardWithoutAnim = ({\r\n  title,\r\n  description,\r\n  className,\r\n  maxHeight,\r\n  component: Component,\r\n  source,\r\n}) => {\r\n  const [viewSource, setToggleViewSource] = useState(false);\r\n  return (\r\n    <AppCard\r\n      className={className}\r\n      title={\r\n        <div className='w-100'>\r\n          <div>{title}</div>\r\n          <div\r\n            className={clsx(styles.compCardTitleDescription, 'text-truncate')}>\r\n            {description}\r\n          </div>\r\n        </div>\r\n      }\r\n      extra={\r\n        source ? (\r\n          <Button\r\n            aria-label='view code'\r\n            shape='circle'\r\n            onClick={() => setToggleViewSource(!viewSource)}>\r\n            <HiOutlineCode className={styles.codeIcon} />\r\n          </Button>\r\n        ) : null\r\n      }>\r\n      <Expand open={viewSource}>\r\n        {source ? (\r\n          <AppScrollbar\r\n            style={{\r\n              borderRadius: 8,\r\n              background: '#333333',\r\n              height: 350,\r\n              maxHeight: 400,\r\n            }}>\r\n            <Highlight\r\n              {...defaultProps}\r\n              code={source}\r\n              language='jsx'\r\n              theme={highlightTheme}>\r\n              {({style, tokens, getLineProps, getTokenProps}) => (\r\n                <pre\r\n                  className={styles.preTag}\r\n                  style={{...style, maxHeight: 500}}>\r\n                  {tokens.map((line, i) => (\r\n                    <div key={i} {...getLineProps({line, key: i})}>\r\n                      {line.map((token, key) => (\r\n                        <span key={i} {...getTokenProps({token, key})} />\r\n                      ))}\r\n                    </div>\r\n                  ))}\r\n                </pre>\r\n              )}\r\n            </Highlight>\r\n          </AppScrollbar>\r\n        ) : null}\r\n      </Expand>\r\n      <AppScrollbar\r\n        style={{maxHeight: maxHeight}}\r\n        className='position-relative'>\r\n        <div\r\n          className={clsx(\r\n            styles.componentRoot,\r\n            'd-flex align-items-center justify-content-center w-100 p-3',\r\n          )}>\r\n          <Component />\r\n        </div>\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default ComponentCardWithoutAnim;\r\n\r\nComponentCardWithoutAnim.defaultProps = {\r\n  description: '',\r\n  maxHeight: 500,\r\n};\r\n\r\nComponentCardWithoutAnim.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n  source: PropTypes.node,\r\n  title: PropTypes.node.isRequired,\r\n  description: PropTypes.node,\r\n  maxHeight: PropTypes.number,\r\n  className: PropTypes.string,\r\n  size: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport ComponentCardWithoutAnim from './ComponentCardWithoutAnim';\r\n\r\nconst AppComponentCard = ({\r\n  title,\r\n  description,\r\n  className,\r\n  maxHeight,\r\n  component,\r\n  source,\r\n}) => {\r\n  return (\r\n    <AppAnimateGroup type='bottom' interval={100} duration={450}>\r\n      <ComponentCardWithoutAnim\r\n        title={title}\r\n        description={description}\r\n        className={className}\r\n        maxHeight={maxHeight}\r\n        component={component}\r\n        source={source}\r\n        key={'card'}\r\n      />\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppComponentCard;\r\n\r\nAppComponentCard.defaultProps = {\r\n  description: '',\r\n  maxHeight: 500,\r\n};\r\n\r\nAppComponentCard.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n  source: PropTypes.node,\r\n  title: PropTypes.node.isRequired,\r\n  description: PropTypes.node,\r\n  maxHeight: PropTypes.number,\r\n  className: PropTypes.string,\r\n  size: PropTypes.number,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"headerTitle\":\"AppComponentHeader_headerTitle__A9HGS\",\"titleH3\":\"AppComponentHeader_titleH3__owcvF\",\"textBase\":\"AppComponentHeader_textBase__Hw4ll\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst AppComponentHeader = ({title, description, refUrl}) => {\r\n  return (\r\n    <AppAnimateGroup type='top' height='auto' interval={100} duration={450}>\r\n      <div\r\n        className='d-flex flex-column pb-3 flex-sm-row justify-content-sm-between pt-xxl-3'\r\n        key={'header'}>\r\n        <div className={styles.headerTitle}>\r\n          <h3 className={styles.titleH3}>{title}</h3>\r\n          {description ? (\r\n            <h5 className={styles.textBase}>{description}</h5>\r\n          ) : null}\r\n        </div>\r\n        {refUrl ? (\r\n          <div style={{height: 30}}>\r\n            <Button variant='primary' href={refUrl} target='_blank'>\r\n              Reference\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppComponentHeader;\r\n\r\nAppComponentHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  refUrl: PropTypes.string,\r\n};\r\nAppComponentHeader.defaultProps = {};\r\n","import React from 'react';\r\nimport styles from './index.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport {Row} from 'react-bootstrap';\r\n\r\nconst AppRow = (props) => <Row className={styles.row} {...props} />;\r\n\r\nconst AppRowContainer = ({children, ...others}) => {\r\n  return (\r\n    <AppAnimateGroup\r\n      animateStyle={{flexDirection: 'row'}}\r\n      component={AppRow}\r\n      type='bottom'\r\n      ease='easeInOutQuart'\r\n      height='auto'\r\n      {...others}>\r\n      {children}\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppRowContainer;\r\nAppRowContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport {\r\n  ButtonGroup,\r\n  Dropdown,\r\n  DropdownButton,\r\n  SplitButton,\r\n} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nconst Drop = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <>\r\n        <div className='mb-2'>\r\n          {['up', 'down', 'start', 'end'].map((direction) => (\r\n            <DropdownButton\r\n              as={ButtonGroup}\r\n              key={direction}\r\n              id={`dropdown-button-drop-${direction}`}\r\n              drop={direction}\r\n              variant='secondary'\r\n              title={` Drop ${direction} `}>\r\n              <Dropdown.Item eventKey='1'>Action</Dropdown.Item>\r\n              <Dropdown.Item eventKey='2'>Another action</Dropdown.Item>\r\n              <Dropdown.Item eventKey='3'>Something else here</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <Dropdown.Item eventKey='4'>Separated link</Dropdown.Item>\r\n            </DropdownButton>\r\n          ))}\r\n        </div>\r\n\r\n        <div className={styles.dropDownDemoWrapper2}>\r\n          {['up', 'down', 'start', 'end'].map((direction) => (\r\n            <SplitButton\r\n              key={direction}\r\n              id={`dropdown-button-drop-${direction}`}\r\n              drop={direction}\r\n              variant='secondary'\r\n              title={`Drop ${direction}`}>\r\n              <Dropdown.Item eventKey='1'>Action</Dropdown.Item>\r\n              <Dropdown.Item eventKey='2'>Another action</Dropdown.Item>\r\n              <Dropdown.Item eventKey='3'>Something else here</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <Dropdown.Item eventKey='4'>Separated link</Dropdown.Item>\r\n            </SplitButton>\r\n          ))}\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Drop;\r\n","import React from 'react';\r\nimport {Dropdown} from 'react-bootstrap';\r\n\r\nconst Examples = () => {\r\n  return (\r\n    <div>\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant='success' id='dropdown-basic'>\r\n          Dropdown Button\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href='#/action-1'>Action</Dropdown.Item>\r\n          <Dropdown.Item href='#/action-2'>Another action</Dropdown.Item>\r\n          <Dropdown.Item href='#/action-3'>Something else</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Examples;\r\n","import React from 'react';\r\nimport {Button, ButtonGroup, Dropdown} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nconst Split = () => {\r\n  return (\r\n    <div>\r\n      <Dropdown as={ButtonGroup}>\r\n        <Button variant='success' className={styles.inputGroupBtnRight}>\r\n          Split Button\r\n        </Button>\r\n\r\n        <Dropdown.Toggle\r\n          split\r\n          variant='success'\r\n          id='dropdown-split-basic'\r\n          className={styles.inputGroupBtnLeft}\r\n        />\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href='#/action-1'>Action</Dropdown.Item>\r\n          <Dropdown.Item href='#/action-2'>Another action</Dropdown.Item>\r\n          <Dropdown.Item href='#/action-3'>Something else</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Split;\r\n","import React from 'react';\r\nimport {Dropdown, DropdownButton} from 'react-bootstrap';\r\n\r\nconst Dark = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <Dropdown>\r\n        <Dropdown.Toggle id='dropdown-button-dark-example1' variant='secondary'>\r\n          Dropdown Button\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu variant='dark'>\r\n          <Dropdown.Item href='#/action-1' active>\r\n            Action\r\n          </Dropdown.Item>\r\n          <Dropdown.Item href='#/action-2'>Another action</Dropdown.Item>\r\n          <Dropdown.Item href='#/action-3'>Something else</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href='#/action-4'>Separated link</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n\r\n      <DropdownButton\r\n        id='dropdown-button-dark-example2'\r\n        variant='secondary'\r\n        menuVariant='dark'\r\n        title='Dropdown button'\r\n        className='mt-2'>\r\n        <Dropdown.Item href='#/action-1' active>\r\n          Action\r\n        </Dropdown.Item>\r\n        <Dropdown.Item href='#/action-2'>Another action</Dropdown.Item>\r\n        <Dropdown.Item href='#/action-3'>Something else</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item href='#/action-4'>Separated link</Dropdown.Item>\r\n      </DropdownButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dark;\r\n","import React from 'react';\r\nimport DropdownItem from 'react-bootstrap/DropdownItem';\r\nimport {\r\n  ButtonGroup,\r\n  Dropdown,\r\n  DropdownButton,\r\n  SplitButton,\r\n} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst Sizing = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <div className={clsx(styles.dropDownDemoWrapper, 'mb-2')}>\r\n        {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n          <DropdownType\r\n            as={ButtonGroup}\r\n            key={idx}\r\n            id={`dropdown-button-drop-${idx}`}\r\n            size='lg'\r\n            title='Drop large'>\r\n            <DropdownItem eventKey='1'>Action</DropdownItem>\r\n            <DropdownItem eventKey='2'>Another action</DropdownItem>\r\n            <DropdownItem eventKey='3'>Something else here</DropdownItem>\r\n            <Dropdown.Divider />\r\n            <DropdownItem eventKey='4'>Separated link</DropdownItem>\r\n          </DropdownType>\r\n        ))}\r\n      </div>\r\n      <div className={styles.dropDownDemoWrapper}>\r\n        {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n          <DropdownType\r\n            as={ButtonGroup}\r\n            key={idx}\r\n            id={`dropdown-button-drop-${idx}`}\r\n            size='sm'\r\n            variant='secondary'\r\n            title='Drop small'>\r\n            <DropdownItem eventKey='1'>Action</DropdownItem>\r\n            <DropdownItem eventKey='2'>Another action</DropdownItem>\r\n            <DropdownItem eventKey='3'>Something else here</DropdownItem>\r\n            <Dropdown.Divider />\r\n            <DropdownItem eventKey='4'>Separated link</DropdownItem>\r\n          </DropdownType>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sizing;\r\n","import React from 'react';\r\nimport {Container, Nav, Navbar, NavDropdown} from 'react-bootstrap';\r\n\r\nconst UsingDemo = () => {\r\n  return (\r\n    <div>\r\n      <Navbar variant='dark' bg='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand href='#home'>React-Bootstrap</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbar-dark-example' />\r\n          <Navbar.Collapse id='navbar-dark-example'>\r\n            <Nav>\r\n              <NavDropdown\r\n                id='nav-dropdown-dark-example'\r\n                title='Dropdown'\r\n                menuVariant='dark'>\r\n                <NavDropdown.Item href='#action/3.1'>Action</NavDropdown.Item>\r\n                <NavDropdown.Item href='#action/3.2'>\r\n                  Another action\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href='#action/3.3'>\r\n                  Something\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href='#action/3.4'>\r\n                  Separated link\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsingDemo;\r\n","import React from 'react';\r\nimport {DropdownButton, Dropdown} from 'react-bootstrap';\r\n\r\nconst Items = () => {\r\n  return (\r\n    <div>\r\n      <DropdownButton id='dropdown-item-button' title='Dropdown button'>\r\n        <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText>\r\n        <Dropdown.Item as='button'>Action</Dropdown.Item>\r\n        <Dropdown.Item as='button'>Another action</Dropdown.Item>\r\n        <Dropdown.Item as='button'>Something else</Dropdown.Item>\r\n      </DropdownButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Items;\r\n","import React from 'react';\r\nimport {DropdownButton, Dropdown} from 'react-bootstrap';\r\n\r\nconst MenuAlignment = () => {\r\n  return (\r\n    <div>\r\n      <DropdownButton\r\n        align='end'\r\n        title='Dropdown end'\r\n        id='dropdown-menu-align-end'>\r\n        <Dropdown.Item eventKey='1'>Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey='2'>Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey='3'>Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey='4'>Separated link</Dropdown.Item>\r\n      </DropdownButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuAlignment;\r\n","import React from 'react';\r\nimport {\r\n  ButtonGroup,\r\n  Dropdown,\r\n  DropdownButton,\r\n  SplitButton,\r\n} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst Responsive = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <div>\r\n        <DropdownButton\r\n          as={ButtonGroup}\r\n          align={{lg: 'end'}}\r\n          title='Left-aligned but right aligned when large screen'\r\n          id='dropdown-menu-align-responsive-1'>\r\n          <Dropdown.Item eventKey='1'>Action 1</Dropdown.Item>\r\n          <Dropdown.Item eventKey='2'>Action 2</Dropdown.Item>\r\n        </DropdownButton>\r\n      </div>\r\n      <div className={clsx(styles.dropDownDemoWrapper2, 'mb-2')}>\r\n        <SplitButton\r\n          align={{lg: 'start'}}\r\n          title='Right-aligned but left aligned when large screen'\r\n          id='dropdown-menu-align-responsive-2'>\r\n          <Dropdown.Item eventKey='1'>Action 1</Dropdown.Item>\r\n          <Dropdown.Item eventKey='2'>Action 2</Dropdown.Item>\r\n        </SplitButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Responsive;\r\n","import React from 'react';\r\nimport {Dropdown} from 'react-bootstrap';\r\n\r\nconst MenuHeaders = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <Dropdown.Menu show>\r\n        <Dropdown.Header>Dropdown header</Dropdown.Header>\r\n        <Dropdown.Item eventKey='2'>Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey='3'>Something else here</Dropdown.Item>\r\n      </Dropdown.Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuHeaders;\r\n","import React from 'react';\r\nimport {Dropdown} from 'react-bootstrap';\r\n\r\nconst MenuDividers = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <Dropdown.Menu show>\r\n        <Dropdown.Item eventKey='1'>Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey='2'>Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey='3'>Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey='4'>Separated link</Dropdown.Item>\r\n      </Dropdown.Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuDividers;\r\n","import React from 'react';\r\nimport {Dropdown} from 'react-bootstrap';\r\n\r\nconst AutoClose = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <>\r\n        <Dropdown className='d-inline mx-2'>\r\n          <Dropdown.Toggle id='dropdown-autoclose-true'>\r\n            Default Dropdown\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\r\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\r\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n\r\n        <Dropdown className='d-inline mx-2' autoClose='inside'>\r\n          <Dropdown.Toggle id='dropdown-autoclose-inside'>\r\n            Clickable Outside\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\r\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\r\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n\r\n        <Dropdown className='d-inline mx-2' autoClose='outside'>\r\n          <Dropdown.Toggle id='dropdown-autoclose-outside'>\r\n            Clickable Inside\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\r\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\r\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n\r\n        <Dropdown className='d-inline mx-2' autoClose={false}>\r\n          <Dropdown.Toggle id='dropdown-autoclose-false'>\r\n            Manual Close\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\r\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\r\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoClose;\r\n","import React from 'react';\r\nimport {Button, ButtonGroup, Dropdown} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nconst CustomizationDemo = () => {\r\n  return (\r\n    <div>\r\n      <>\r\n        <Dropdown as={ButtonGroup}>\r\n          <Dropdown.Toggle id='dropdown-custom-1'>Pow! Zoom!</Dropdown.Toggle>\r\n          <Dropdown.Menu className='super-colors'>\r\n            <Dropdown.Item eventKey='1'>Action</Dropdown.Item>\r\n            <Dropdown.Item eventKey='2'>Another action</Dropdown.Item>\r\n            <Dropdown.Item eventKey='3' active>\r\n              Active Item\r\n            </Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item eventKey='4'>Separated link</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>{' '}\r\n        <Dropdown as={ButtonGroup}>\r\n          <Button variant='info' className={styles.inputGroupBtnRight}>\r\n            mix it up style-wise\r\n          </Button>\r\n          <Dropdown.Toggle\r\n            split\r\n            variant='success'\r\n            id='dropdown-custom-2'\r\n            className={styles.inputGroupBtnLeft}\r\n          />\r\n          <Dropdown.Menu className='super-colors'>\r\n            <Dropdown.Item eventKey='1'>Action</Dropdown.Item>\r\n            <Dropdown.Item eventKey='2'>Another action</Dropdown.Item>\r\n            <Dropdown.Item eventKey='3' active>\r\n              Active Item\r\n            </Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item eventKey='4'>Separated link</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizationDemo;\r\n","import React from 'react';\r\nimport AppComponentHeader from '@crema/core/AppComponentHeader';\r\nimport AppRowContainer from '@crema/core/AppRowContainer';\r\nimport {Col} from 'react-bootstrap';\r\nimport AppComponentCard from '@crema/core/AppComponentCard';\r\n\r\nimport Examples from './Examples';\r\nimport ExamplesSource from '!raw-loader!./Examples';\r\nimport Split from './Split';\r\nimport SplitSource from '!raw-loader!./Split';\r\nimport Dark from './Dark';\r\nimport DarkSource from '!raw-loader!./Dark';\r\nimport Sizing from './Sizing';\r\nimport SizingSource from '!raw-loader!./Sizing';\r\nimport UsingDemo from './UsingDemo';\r\nimport UsingDemoSource from '!raw-loader!./UsingDemo';\r\nimport Drop from './Drop';\r\nimport DropSource from '!raw-loader!./Drop';\r\nimport Items from './Items';\r\nimport ItemsSource from '!raw-loader!./Items';\r\nimport MenuAlignment from './MenuAlignment';\r\nimport MenuAlignmentSource from '!raw-loader!./MenuAlignment';\r\nimport Responsive from './Responsive';\r\nimport ResponsiveSource from '!raw-loader!./Responsive';\r\nimport MenuHeaders from './MenuHeaders';\r\nimport MenuHeadersSource from '!raw-loader!./MenuHeaders';\r\nimport MenuDividers from './MenuDividers';\r\nimport MenuDividersSource from '!raw-loader!./MenuDividers';\r\nimport AutoClose from './AutoClose';\r\nimport AutoCloseSource from '!raw-loader!./AutoClose';\r\nimport CustomizationDemo from './CustomizationDemo';\r\nimport CustomizationDemoSource from '!raw-loader!./CustomizationDemo';\r\n\r\nconst Dropdowns = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Dropdowns'\r\n        description='Toggle contextual overlays for displaying lists of links and more with the Bootstrap dropdown plugin'\r\n        refUrl='https://react-bootstrap.github.io/components/dropdowns/'\r\n      />\r\n\r\n      <AppRowContainer>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Single button dropdowns'\r\n            component={Examples}\r\n            source={ExamplesSource}\r\n            noScrollbar\r\n            description='The basic Dropdown is composed of a wrapping Dropdown and inner <DropdownMenu>, and <DropdownToggle>. By default the <DropdownToggle> will render a Button component and accepts all the same props.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Split Button'\r\n            component={Split}\r\n            source={SplitSource}\r\n            noScrollbar\r\n            description='As with DropdownButton, SplitButton is provided as convenience component.'\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Sizing'\r\n            component={Sizing}\r\n            source={SizingSource}\r\n            noScrollbar\r\n            description='Dropdowns work with buttons of all sizes.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Dark dropdowns'\r\n            component={Dark}\r\n            source={DarkSource}\r\n            noScrollbar\r\n            description='Opt into darker dropdowns to match a dark navbar or custom style by adding variant=\"dark\" onto an existing DropdownMenu. Alternatively, use menuVariant=\"dark\" when using the DropdownButton component.'\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Dark dropdowns 2'\r\n            component={UsingDemo}\r\n            source={UsingDemoSource}\r\n            noScrollbar\r\n            description='Using menuVariant=\"dark\" in a NavDropdown:'\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Drop directions'\r\n            component={Drop}\r\n            source={DropSource}\r\n            noScrollbar\r\n            description='Trigger dropdown menus above, below, left, or to the right of their toggle elements, with the drop prop.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Dropdown items'\r\n            component={Items}\r\n            source={ItemsSource}\r\n            noScrollbar\r\n            description='Historically dropdown menu contents had to be links, but that’s no longer the case with v4. Now you can optionally use <button> elements in your dropdowns instead of just <a>s.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Menu Alignment'\r\n            component={MenuAlignment}\r\n            source={MenuAlignmentSource}\r\n            noScrollbar\r\n            description='By default, a dropdown menu is aligned to the left, but you can switch it by passing align=\"end\" to a <Dropdown>, <DropdownButton>, or <SplitButton>.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Responsive'\r\n            component={Responsive}\r\n            source={ResponsiveSource}\r\n            noScrollbar\r\n            description='If you want to use responsive menu alignment, pass an object containing a breakpoint to the align prop on the <DropdownMenu>, <DropdownButton>, or <SplitButton>. You can specify start or end for the various breakpoints.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='AutoClose'\r\n            component={AutoClose}\r\n            source={AutoCloseSource}\r\n            noScrollbar\r\n            description='By default, the dropdown menu is closed when selecting a menu item or clicking outside of the dropdown menu. This behaviour can be changed by using the autoClose property.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Menu Headers'\r\n            component={MenuHeaders}\r\n            source={MenuHeadersSource}\r\n            noScrollbar\r\n            description='Add a header to label sections of actions.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Menu Dividers'\r\n            component={MenuDividers}\r\n            source={MenuDividersSource}\r\n            noScrollbar\r\n            description='Separate groups of related menu items with a divider.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Customization'\r\n            component={CustomizationDemo}\r\n            source={CustomizationDemoSource}\r\n            noScrollbar\r\n            description='If the default handling of the dropdown menu and toggle components arent to your liking you can customize them by using the more basic <Dropdown> Component to explicitly specify the Toggle and Menu components '\r\n          />\r\n        </Col>\r\n      </AppRowContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dropdowns;\r\n","export default \"import React from 'react';\\r\\nimport {Dropdown} from 'react-bootstrap';\\r\\n\\r\\nconst Examples = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Dropdown>\\r\\n        <Dropdown.Toggle variant='success' id='dropdown-basic'>\\r\\n          Dropdown Button\\r\\n        </Dropdown.Toggle>\\r\\n\\r\\n        <Dropdown.Menu>\\r\\n          <Dropdown.Item href='#/action-1'>Action</Dropdown.Item>\\r\\n          <Dropdown.Item href='#/action-2'>Another action</Dropdown.Item>\\r\\n          <Dropdown.Item href='#/action-3'>Something else</Dropdown.Item>\\r\\n        </Dropdown.Menu>\\r\\n      </Dropdown>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Examples;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, ButtonGroup, Dropdown} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nconst Split = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Dropdown as={ButtonGroup}>\\r\\n        <Button variant='success' className={styles.inputGroupBtnRight}>\\r\\n          Split Button\\r\\n        </Button>\\r\\n\\r\\n        <Dropdown.Toggle\\r\\n          split\\r\\n          variant='success'\\r\\n          id='dropdown-split-basic'\\r\\n          className={styles.inputGroupBtnLeft}\\r\\n        />\\r\\n\\r\\n        <Dropdown.Menu>\\r\\n          <Dropdown.Item href='#/action-1'>Action</Dropdown.Item>\\r\\n          <Dropdown.Item href='#/action-2'>Another action</Dropdown.Item>\\r\\n          <Dropdown.Item href='#/action-3'>Something else</Dropdown.Item>\\r\\n        </Dropdown.Menu>\\r\\n      </Dropdown>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Split;\\r\\n\";","export default \"import React from 'react';\\r\\nimport DropdownItem from 'react-bootstrap/DropdownItem';\\r\\nimport {\\r\\n  ButtonGroup,\\r\\n  Dropdown,\\r\\n  DropdownButton,\\r\\n  SplitButton,\\r\\n} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\nimport clsx from 'clsx';\\r\\n\\r\\nconst Sizing = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <div className={clsx(styles.dropDownDemoWrapper, 'mb-2')}>\\r\\n        {[DropdownButton, SplitButton].map((DropdownType, idx) => (\\r\\n          <DropdownType\\r\\n            as={ButtonGroup}\\r\\n            key={idx}\\r\\n            id={`dropdown-button-drop-${idx}`}\\r\\n            size='lg'\\r\\n            title='Drop large'>\\r\\n            <DropdownItem eventKey='1'>Action</DropdownItem>\\r\\n            <DropdownItem eventKey='2'>Another action</DropdownItem>\\r\\n            <DropdownItem eventKey='3'>Something else here</DropdownItem>\\r\\n            <Dropdown.Divider />\\r\\n            <DropdownItem eventKey='4'>Separated link</DropdownItem>\\r\\n          </DropdownType>\\r\\n        ))}\\r\\n      </div>\\r\\n      <div className={styles.dropDownDemoWrapper}>\\r\\n        {[DropdownButton, SplitButton].map((DropdownType, idx) => (\\r\\n          <DropdownType\\r\\n            as={ButtonGroup}\\r\\n            key={idx}\\r\\n            id={`dropdown-button-drop-${idx}`}\\r\\n            size='sm'\\r\\n            variant='secondary'\\r\\n            title='Drop small'>\\r\\n            <DropdownItem eventKey='1'>Action</DropdownItem>\\r\\n            <DropdownItem eventKey='2'>Another action</DropdownItem>\\r\\n            <DropdownItem eventKey='3'>Something else here</DropdownItem>\\r\\n            <Dropdown.Divider />\\r\\n            <DropdownItem eventKey='4'>Separated link</DropdownItem>\\r\\n          </DropdownType>\\r\\n        ))}\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Sizing;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Dropdown, DropdownButton} from 'react-bootstrap';\\r\\n\\r\\nconst Dark = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <Dropdown>\\r\\n        <Dropdown.Toggle id='dropdown-button-dark-example1' variant='secondary'>\\r\\n          Dropdown Button\\r\\n        </Dropdown.Toggle>\\r\\n\\r\\n        <Dropdown.Menu variant='dark'>\\r\\n          <Dropdown.Item href='#/action-1' active>\\r\\n            Action\\r\\n          </Dropdown.Item>\\r\\n          <Dropdown.Item href='#/action-2'>Another action</Dropdown.Item>\\r\\n          <Dropdown.Item href='#/action-3'>Something else</Dropdown.Item>\\r\\n          <Dropdown.Divider />\\r\\n          <Dropdown.Item href='#/action-4'>Separated link</Dropdown.Item>\\r\\n        </Dropdown.Menu>\\r\\n      </Dropdown>\\r\\n\\r\\n      <DropdownButton\\r\\n        id='dropdown-button-dark-example2'\\r\\n        variant='secondary'\\r\\n        menuVariant='dark'\\r\\n        title='Dropdown button'\\r\\n        className='mt-2'>\\r\\n        <Dropdown.Item href='#/action-1' active>\\r\\n          Action\\r\\n        </Dropdown.Item>\\r\\n        <Dropdown.Item href='#/action-2'>Another action</Dropdown.Item>\\r\\n        <Dropdown.Item href='#/action-3'>Something else</Dropdown.Item>\\r\\n        <Dropdown.Divider />\\r\\n        <Dropdown.Item href='#/action-4'>Separated link</Dropdown.Item>\\r\\n      </DropdownButton>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Dark;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Container, Nav, Navbar, NavDropdown} from 'react-bootstrap';\\r\\n\\r\\nconst UsingDemo = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Navbar variant='dark' bg='dark' expand='lg'>\\r\\n        <Container fluid>\\r\\n          <Navbar.Brand href='#home'>React-Bootstrap</Navbar.Brand>\\r\\n          <Navbar.Toggle aria-controls='navbar-dark-example' />\\r\\n          <Navbar.Collapse id='navbar-dark-example'>\\r\\n            <Nav>\\r\\n              <NavDropdown\\r\\n                id='nav-dropdown-dark-example'\\r\\n                title='Dropdown'\\r\\n                menuVariant='dark'>\\r\\n                <NavDropdown.Item href='#action/3.1'>Action</NavDropdown.Item>\\r\\n                <NavDropdown.Item href='#action/3.2'>\\r\\n                  Another action\\r\\n                </NavDropdown.Item>\\r\\n                <NavDropdown.Item href='#action/3.3'>\\r\\n                  Something\\r\\n                </NavDropdown.Item>\\r\\n                <NavDropdown.Divider />\\r\\n                <NavDropdown.Item href='#action/3.4'>\\r\\n                  Separated link\\r\\n                </NavDropdown.Item>\\r\\n              </NavDropdown>\\r\\n            </Nav>\\r\\n          </Navbar.Collapse>\\r\\n        </Container>\\r\\n      </Navbar>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default UsingDemo;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  ButtonGroup,\\r\\n  Dropdown,\\r\\n  DropdownButton,\\r\\n  SplitButton,\\r\\n} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nconst Drop = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <>\\r\\n        <div className='mb-2'>\\r\\n          {['up', 'down', 'start', 'end'].map((direction) => (\\r\\n            <DropdownButton\\r\\n              as={ButtonGroup}\\r\\n              key={direction}\\r\\n              id={`dropdown-button-drop-${direction}`}\\r\\n              drop={direction}\\r\\n              variant='secondary'\\r\\n              title={` Drop ${direction} `}>\\r\\n              <Dropdown.Item eventKey='1'>Action</Dropdown.Item>\\r\\n              <Dropdown.Item eventKey='2'>Another action</Dropdown.Item>\\r\\n              <Dropdown.Item eventKey='3'>Something else here</Dropdown.Item>\\r\\n              <Dropdown.Divider />\\r\\n              <Dropdown.Item eventKey='4'>Separated link</Dropdown.Item>\\r\\n            </DropdownButton>\\r\\n          ))}\\r\\n        </div>\\r\\n\\r\\n        <div className={styles.dropDownDemoWrapper2}>\\r\\n          {['up', 'down', 'start', 'end'].map((direction) => (\\r\\n            <SplitButton\\r\\n              key={direction}\\r\\n              id={`dropdown-button-drop-${direction}`}\\r\\n              drop={direction}\\r\\n              variant='secondary'\\r\\n              title={`Drop ${direction}`}>\\r\\n              <Dropdown.Item eventKey='1'>Action</Dropdown.Item>\\r\\n              <Dropdown.Item eventKey='2'>Another action</Dropdown.Item>\\r\\n              <Dropdown.Item eventKey='3'>Something else here</Dropdown.Item>\\r\\n              <Dropdown.Divider />\\r\\n              <Dropdown.Item eventKey='4'>Separated link</Dropdown.Item>\\r\\n            </SplitButton>\\r\\n          ))}\\r\\n        </div>\\r\\n      </>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Drop;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {DropdownButton, Dropdown} from 'react-bootstrap';\\r\\n\\r\\nconst Items = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <DropdownButton id='dropdown-item-button' title='Dropdown button'>\\r\\n        <Dropdown.ItemText>Dropdown item text</Dropdown.ItemText>\\r\\n        <Dropdown.Item as='button'>Action</Dropdown.Item>\\r\\n        <Dropdown.Item as='button'>Another action</Dropdown.Item>\\r\\n        <Dropdown.Item as='button'>Something else</Dropdown.Item>\\r\\n      </DropdownButton>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Items;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {DropdownButton, Dropdown} from 'react-bootstrap';\\r\\n\\r\\nconst MenuAlignment = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <DropdownButton\\r\\n        align='end'\\r\\n        title='Dropdown end'\\r\\n        id='dropdown-menu-align-end'>\\r\\n        <Dropdown.Item eventKey='1'>Action</Dropdown.Item>\\r\\n        <Dropdown.Item eventKey='2'>Another action</Dropdown.Item>\\r\\n        <Dropdown.Item eventKey='3'>Something else here</Dropdown.Item>\\r\\n        <Dropdown.Divider />\\r\\n        <Dropdown.Item eventKey='4'>Separated link</Dropdown.Item>\\r\\n      </DropdownButton>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default MenuAlignment;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  ButtonGroup,\\r\\n  Dropdown,\\r\\n  DropdownButton,\\r\\n  SplitButton,\\r\\n} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\nimport clsx from 'clsx';\\r\\n\\r\\nconst Responsive = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <div>\\r\\n        <DropdownButton\\r\\n          as={ButtonGroup}\\r\\n          align={{lg: 'end'}}\\r\\n          title='Left-aligned but right aligned when large screen'\\r\\n          id='dropdown-menu-align-responsive-1'>\\r\\n          <Dropdown.Item eventKey='1'>Action 1</Dropdown.Item>\\r\\n          <Dropdown.Item eventKey='2'>Action 2</Dropdown.Item>\\r\\n        </DropdownButton>\\r\\n      </div>\\r\\n      <div className={clsx(styles.dropDownDemoWrapper2, 'mb-2')}>\\r\\n        <SplitButton\\r\\n          align={{lg: 'start'}}\\r\\n          title='Right-aligned but left aligned when large screen'\\r\\n          id='dropdown-menu-align-responsive-2'>\\r\\n          <Dropdown.Item eventKey='1'>Action 1</Dropdown.Item>\\r\\n          <Dropdown.Item eventKey='2'>Action 2</Dropdown.Item>\\r\\n        </SplitButton>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Responsive;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Dropdown} from 'react-bootstrap';\\r\\n\\r\\nconst AutoClose = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <>\\r\\n        <Dropdown className='d-inline mx-2'>\\r\\n          <Dropdown.Toggle id='dropdown-autoclose-true'>\\r\\n            Default Dropdown\\r\\n          </Dropdown.Toggle>\\r\\n\\r\\n          <Dropdown.Menu>\\r\\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\\r\\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\\r\\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\\r\\n          </Dropdown.Menu>\\r\\n        </Dropdown>\\r\\n\\r\\n        <Dropdown className='d-inline mx-2' autoClose='inside'>\\r\\n          <Dropdown.Toggle id='dropdown-autoclose-inside'>\\r\\n            Clickable Outside\\r\\n          </Dropdown.Toggle>\\r\\n\\r\\n          <Dropdown.Menu>\\r\\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\\r\\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\\r\\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\\r\\n          </Dropdown.Menu>\\r\\n        </Dropdown>\\r\\n\\r\\n        <Dropdown className='d-inline mx-2' autoClose='outside'>\\r\\n          <Dropdown.Toggle id='dropdown-autoclose-outside'>\\r\\n            Clickable Inside\\r\\n          </Dropdown.Toggle>\\r\\n\\r\\n          <Dropdown.Menu>\\r\\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\\r\\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\\r\\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\\r\\n          </Dropdown.Menu>\\r\\n        </Dropdown>\\r\\n\\r\\n        <Dropdown className='d-inline mx-2' autoClose={false}>\\r\\n          <Dropdown.Toggle id='dropdown-autoclose-false'>\\r\\n            Manual Close\\r\\n          </Dropdown.Toggle>\\r\\n\\r\\n          <Dropdown.Menu>\\r\\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\\r\\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\\r\\n            <Dropdown.Item href='#'>Menu Item</Dropdown.Item>\\r\\n          </Dropdown.Menu>\\r\\n        </Dropdown>\\r\\n      </>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default AutoClose;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Dropdown} from 'react-bootstrap';\\r\\n\\r\\nconst MenuHeaders = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <Dropdown.Menu show>\\r\\n        <Dropdown.Header>Dropdown header</Dropdown.Header>\\r\\n        <Dropdown.Item eventKey='2'>Another action</Dropdown.Item>\\r\\n        <Dropdown.Item eventKey='3'>Something else here</Dropdown.Item>\\r\\n      </Dropdown.Menu>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default MenuHeaders;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Dropdown} from 'react-bootstrap';\\r\\n\\r\\nconst MenuDividers = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <Dropdown.Menu show>\\r\\n        <Dropdown.Item eventKey='1'>Action</Dropdown.Item>\\r\\n        <Dropdown.Item eventKey='2'>Another action</Dropdown.Item>\\r\\n        <Dropdown.Item eventKey='3'>Something else here</Dropdown.Item>\\r\\n        <Dropdown.Divider />\\r\\n        <Dropdown.Item eventKey='4'>Separated link</Dropdown.Item>\\r\\n      </Dropdown.Menu>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default MenuDividers;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, ButtonGroup, Dropdown} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nconst CustomizationDemo = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <>\\r\\n        <Dropdown as={ButtonGroup}>\\r\\n          <Dropdown.Toggle id='dropdown-custom-1'>Pow! Zoom!</Dropdown.Toggle>\\r\\n          <Dropdown.Menu className='super-colors'>\\r\\n            <Dropdown.Item eventKey='1'>Action</Dropdown.Item>\\r\\n            <Dropdown.Item eventKey='2'>Another action</Dropdown.Item>\\r\\n            <Dropdown.Item eventKey='3' active>\\r\\n              Active Item\\r\\n            </Dropdown.Item>\\r\\n            <Dropdown.Divider />\\r\\n            <Dropdown.Item eventKey='4'>Separated link</Dropdown.Item>\\r\\n          </Dropdown.Menu>\\r\\n        </Dropdown>{' '}\\r\\n        <Dropdown as={ButtonGroup}>\\r\\n          <Button variant='info' className={styles.inputGroupBtnRight}>\\r\\n            mix it up style-wise\\r\\n          </Button>\\r\\n          <Dropdown.Toggle\\r\\n            split\\r\\n            variant='success'\\r\\n            id='dropdown-custom-2'\\r\\n            className={styles.inputGroupBtnLeft}\\r\\n          />\\r\\n          <Dropdown.Menu className='super-colors'>\\r\\n            <Dropdown.Item eventKey='1'>Action</Dropdown.Item>\\r\\n            <Dropdown.Item eventKey='2'>Another action</Dropdown.Item>\\r\\n            <Dropdown.Item eventKey='3' active>\\r\\n              Active Item\\r\\n            </Dropdown.Item>\\r\\n            <Dropdown.Divider />\\r\\n            <Dropdown.Item eventKey='4'>Separated link</Dropdown.Item>\\r\\n          </Dropdown.Menu>\\r\\n        </Dropdown>\\r\\n      </>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default CustomizationDemo;\\r\\n\";","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport ButtonGroup from './ButtonGroup';\nimport Dropdown from './Dropdown';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   * @required\n   */\n  id: PropTypes.string,\n\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: PropTypes.string,\n\n  /** An `href` passed to the non-toggle Button */\n  href: PropTypes.string,\n\n  /** An anchor `target` passed to the non-toggle Button */\n  target: PropTypes.string,\n\n  /** An `onClick` handler passed to the non-toggle Button */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** A `type` passed to the non-toggle Button */\n  type: PropTypes.string,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\nconst defaultProps = {\n  toggleLabel: 'Toggle dropdown',\n  type: 'button'\n};\n/**\n * A convenience component for simple or general use split button dropdowns. Renders a\n * `ButtonGroup` containing a `Button` and a `Button` toggle for the `Dropdown`. All `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of [`Dropdown`'s\n * props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._\n * The Button `variant`, `size` and `bsPrefix` props are passed to the button and toggle,\n * and menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst SplitButton = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  size,\n  variant,\n  title,\n  type,\n  toggleLabel,\n  children,\n  onClick,\n  href,\n  target,\n  menuRole,\n  renderMenuOnMount,\n  rootCloseEvent,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  as: ButtonGroup,\n  children: [/*#__PURE__*/_jsx(Button, {\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    bsPrefix: bsPrefix,\n    href: href,\n    target: target,\n    onClick: onClick,\n    type: type,\n    children: title\n  }), /*#__PURE__*/_jsx(Dropdown.Toggle, {\n    split: true,\n    id: id,\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    childBsPrefix: bsPrefix,\n    children: /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: toggleLabel\n    })\n  }), /*#__PURE__*/_jsx(Dropdown.Menu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    children: children\n  })]\n}));\nSplitButton.propTypes = propTypes;\nSplitButton.defaultProps = defaultProps;\nSplitButton.displayName = 'SplitButton';\nexport default SplitButton;","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n})]);","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"AppRowContainer_row__lSYCd\"};","// extracted by mini-css-extract-plugin\nexport default {\"inputGroupBtnRight\":\"Dropdowns_inputGroupBtnRight__xodHA\",\"inputGroupBtnLeft\":\"Dropdowns_inputGroupBtnLeft__k-yfw\",\"dropDownDemoWrapper\":\"Dropdowns_dropDownDemoWrapper__A2203\",\"dropDownDemoWrapper2\":\"Dropdowns_dropDownDemoWrapper2__GpIit\"};"],"names":["AppCard","title","footer","children","className","titleClass","actionClass","footerClass","cardBodyClass","cardHeaderClass","action","heightFull","cardImg","rest","Card","clsx","styles","Img","variant","src","Header","Title","href","Body","Footer","defaultProps","highlightTheme","plain","color","fontFamily","fontWeight","Fonts","REGULAR","backgroundColor","types","style","PHASE","GROUP","Expand","props","getClientHeight","refWrapper","scrollHeight","getDefaultExpandStyle","state","status","height","opacity","overflow","getExpandStyle","getTransition","attribute","duration","easing","updateStatus","setState","delay","fn","time","timeout","setTimeout","clearDelay","clearTimeout","transit","entering","entered","enter","toggle","open","setRef","ref","prevProps","this","transition","transitions","map","join","Tag","tag","childProps","getStyle","Component","ComponentCardWithoutAnim","description","maxHeight","component","source","useState","viewSource","setToggleViewSource","extra","Button","shape","onClick","AppScrollbar","borderRadius","background","code","language","theme","tokens","getLineProps","getTokenProps","line","i","key","token","AppComponentCard","AppAnimateGroup","type","interval","AppComponentHeader","refUrl","target","AppRow","row","others","animateStyle","flexDirection","ease","width","direction","as","ButtonGroup","id","drop","Item","eventKey","Divider","dropDownDemoWrapper2","Dropdown","Toggle","Menu","inputGroupBtnRight","split","inputGroupBtnLeft","active","DropdownButton","menuVariant","dropDownDemoWrapper","SplitButton","DropdownType","idx","size","DropdownItem","Navbar","bg","expand","Container","fluid","Brand","Collapse","Nav","NavDropdown","ItemText","align","lg","show","autoClose","AppRowContainer","Col","xs","md","Examples","noScrollbar","Split","Sizing","Dark","UsingDemo","Drop","Items","MenuAlignment","Responsive","AutoClose","MenuHeaders","MenuDividers","CustomizationDemo","React","bsPrefix","vertical","prefix","useBootstrapPrefix","baseClass","_jsx","classNames","displayName","role","propTypes","PropTypes","isRequired","disabled","alignPropType","menuRole","renderMenuOnMount","rootCloseEvent","_jsxs","DropdownToggle","childBsPrefix","DropdownMenu","renderOnMount","toggleLabel","alignDirection","sm","xl","xxl"],"sourceRoot":""}