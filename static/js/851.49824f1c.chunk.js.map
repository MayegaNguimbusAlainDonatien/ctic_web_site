{"version":3,"file":"static/js/851.49824f1c.chunk.js","mappings":"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","sources":["@crema/core/AppConfirmationModal/index.js","@crema/core/AppInfoView/index.js","@crema/core/AppList/ListEmptyResult.js","@crema/core/AppList/ListView.js","@crema/core/AppList/ListFooter.js","@crema/core/AppList/index.js","webpack://ctic/./src/@crema/core/AppMedialViewer/index.module.scss?413a","@crema/core/AppMedialViewer/index.js","@crema/core/AppsContainer/AppsFooter.js","@crema/core/AppsContainer/AppsHeader.js","@crema/core/AppsContainer/AppSidebar.js","@crema/core/AppsContainer/index.js","webpack://ctic/./src/@crema/core/AppsStarredIcon/index.module.scss?1915","@crema/core/AppsStarredIcon/index.js","webpack://ctic/./src/pages/apps/Chat/ChatSideBar/UserInfo.module.scss?c06e","pages/apps/Chat/ChatSideBar/UserInfo.js","webpack://ctic/./src/pages/apps/Chat/ChatSideBar/index.module.scss?4a8b","pages/apps/Chat/ChatSideBar/UserTabs/ConnectionList/ConnectionItem.js","@crema/core/AppSkeleton/ChatListSkeleton.js","pages/apps/Chat/ChatSideBar/UserTabs/ConnectionList/index.js","pages/apps/Chat/ChatSideBar/UserTabs/ChatList/ChatItem.js","pages/apps/Chat/ChatSideBar/UserTabs/ChatList/index.js","pages/apps/Chat/ChatSideBar/UserTabs/index.js","pages/apps/Chat/ChatSideBar/index.js","webpack://ctic/./src/pages/apps/Chat/ChatContent/NoUserScreen/index.module.scss?1fa8","pages/apps/Chat/ChatContent/NoUserScreen/index.js","webpack://ctic/./src/pages/apps/Chat/ChatContent/index.module.scss?7ae3","pages/apps/Chat/ChatContent/MessagesScreen/AddNewMessage.js","webpack://ctic/./src/pages/apps/Chat/ChatContent/MessagesScreen/MessageItem.module.scss?d5b2","pages/apps/Chat/ChatContent/MessagesScreen/SenderMessageItem.js","pages/apps/Chat/ChatContent/MessagesScreen/ReceiverMessageItem.js","pages/apps/Chat/ChatContent/MessagesScreen/MessagesList.js","pages/apps/Chat/ChatContent/MessagesScreen/Header.js","pages/apps/Chat/ChatContent/MessagesScreen/index.js","pages/apps/Chat/ChatContent/index.js","pages/apps/Chat/index.js","../node_modules/react-bootstrap-icons/dist/icons/search.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useUpdatedRef.js","webpack://ctic/./src/@crema/core/AppList/index.module.scss?d576","webpack://ctic/./src/@crema/core/AppsContainer/index.module.scss?3797"],"sourcesContent":["import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Modal, Button} from 'react-bootstrap';\r\n\r\nconst AppConfirmationModal = ({open, onDeny, onConfirm, modalTitle, paragraph, title}) => {\r\n  return (\r\n    <Modal show={open} onHide={() => onDeny(false)} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{modalTitle}</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <p>{paragraph}</p>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button variant='outline-primary' onClick={() => onDeny(false)}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant='primary' onClick={onConfirm}>\r\n          Ok\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nAppConfirmationModal.propTypes = {\r\n  modalTitle: PropTypes.any.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onDeny: PropTypes.func.isRequired,\r\n  paragraph: PropTypes.any,\r\n  onConfirm: PropTypes.func.isRequired,\r\n};\r\n\r\nAppConfirmationModal.defaultProps = {\r\n  paragraph: 'Are you sure you want to delete?',\r\n};\r\nexport default AppConfirmationModal;\r\n","import React, {useEffect} from 'react';\r\n// import {message} from 'react-bootstrap';\r\nimport AppLoader from '@crema/core/AppLoader';\r\nimport {useSelector} from 'react-redux';\r\n// import {useDispatch} from 'react-redux';\r\n// import {hideMessage} from '../../../redux/actions';\r\n\r\nconst AppInfoView = () => {\r\n  const {loading, error, displayMessage} = useSelector(({common}) => common);\r\n  // const dispatch = useDispatch();\r\n  //\r\n  // useEffect(() => {\r\n  //   if (error) {\r\n  //     message.error(error);\r\n  //     dispatch(hideMessage());\r\n  //   }\r\n  // }, [error]);\r\n  //\r\n  // useEffect(() => {\r\n  //   if (displayMessage) {\r\n  //     message.success(displayMessage);\r\n  //     dispatch(hideMessage());\r\n  //   }\r\n  // }, [displayMessage]);\r\n\r\n  return <>{loading ? <AppLoader /> : null}</>;\r\n};\r\n\r\nexport default AppInfoView;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport IntlMessages from '../../utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, ProgressBar} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nconst ListEmptyResult = ({\r\n  loader,\r\n  placeholder,\r\n  loading,\r\n  title,\r\n  actionTitle,\r\n  content,\r\n  onClick,\r\n}) => {\r\n  if (loading || loader) {\r\n    return (\r\n      <React.Fragment>\r\n        {placeholder ? (\r\n          placeholder\r\n        ) : (\r\n          <div\r\n            className={clsx(\r\n              styles.emptyListContainer,\r\n              'd-flex align-items-center justify-content-center text-center flex-grow-1 h-100',\r\n            )}>\r\n            <ProgressBar percent={30} />\r\n            <span>Loading...</span>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        className={clsx(\r\n          styles.emptyListContainer,\r\n          'd-flex align-items-center justify-content-center flex-column text-center flex-grow-1 h-100',\r\n        )}>\r\n        {title ? <h4>{title}</h4> : null}\r\n        <p>{content}</p>\r\n\r\n        {actionTitle ? (\r\n          <Button\r\n            type='primary'\r\n            style={{marginTop: 30, minWidth: 150}}\r\n            onClick={onClick}>\r\n            {actionTitle}\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ListEmptyResult;\r\n\r\nListEmptyResult.defaultProps = {\r\n  title: <IntlMessages id='common.noRecordFound' />,\r\n  description: '',\r\n};\r\n\r\nListEmptyResult.prototype = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  actionTitle: PropTypes.string,\r\n  action: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport {useBottomScrollListener} from 'react-bottom-scroll-listener';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\n\r\nconst getEmptyContainer = (ListEmptyComponent) => {\r\n  if (ListEmptyComponent)\r\n    return React.isValidElement(ListEmptyComponent) ? (\r\n      ListEmptyComponent\r\n    ) : (\r\n      <ListEmptyComponent />\r\n    );\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = (ListFooterComponent) => {\r\n  if (ListFooterComponent)\r\n    return React.isValidElement(ListFooterComponent) ? (\r\n      ListFooterComponent\r\n    ) : (\r\n      <ListFooterComponent />\r\n    );\r\n  return null;\r\n};\r\nconst ListView = ({\r\n  renderItem,\r\n  onEndReached,\r\n  data,\r\n  ListFooterComponent,\r\n  ListEmptyComponent,\r\n  interval,\r\n  type,\r\n  duration,\r\n  className,\r\n  delay,\r\n}) => {\r\n  if (!onEndReached) {\r\n    onEndReached = () => {};\r\n  }\r\n\r\n  useBottomScrollListener(onEndReached, 200);\r\n  return (\r\n    <AppAnimateGroup\r\n      className={className}\r\n      animateStyle={{flexDirection: 'column', flexWrap: 'no-wrap'}}\r\n      interval={interval}\r\n      type={type}\r\n      delay={delay}\r\n      duration={duration}>\r\n      {data.length > 0\r\n        ? data.map((item, index) => renderItem(item, index))\r\n        : getEmptyContainer(ListEmptyComponent)}\r\n\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\nListView.propTypes = {\r\n  border: PropTypes.bool,\r\n  type: PropTypes.any,\r\n  interval: PropTypes.any,\r\n  containerStyle: PropTypes.object,\r\n  ListEmptyComponent: PropTypes.node,\r\n  ListFooterComponent: PropTypes.node,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderItem: PropTypes.func,\r\n  delay: PropTypes.any,\r\n  duration: PropTypes.any,\r\n  className: PropTypes.string,\r\n};\r\nListView.defaultProps = {\r\n  border: false,\r\n  data: [],\r\n  onEndReached: () => {},\r\n  type: 'top',\r\n  interval: 50,\r\n  delay: 0,\r\n  duration: 300,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport {ProgressBar} from 'react-bootstrap';\r\nimport clsx from 'clsx';\r\n\r\nconst ListFooter = ({loading, footerText}) => {\r\n  return loading ? (\r\n    <div\r\n      className={clsx(\r\n        styles.loaderProgress,\r\n        'd-flex align-items-center w-100 p-2',\r\n      )}>\r\n      <ProgressBar percent={30} />\r\n      <span>Loading...</span>\r\n    </div>\r\n  ) : (\r\n    <div className={clsx(styles.listFooter, 'd-flex align-items-center')}>\r\n      <p>{footerText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListFooter;\r\n\r\nListFooter.propTypes = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nListFooter.defaultProps = {\r\n  loading: false,\r\n};\r\n","import React from 'react';\r\nimport ListView from './ListView';\r\nimport PropTypes from 'prop-types';\r\nimport ListFooter from './ListFooter';\r\n\r\nconst AppList = ({footerProps, ...props}) => {\r\n  return (\r\n    <ListView\r\n      {...props}\r\n      ListFooterComponent={\r\n        footerProps ? (\r\n          <ListFooter\r\n            loading={footerProps.loading}\r\n            footerText={footerProps.footerText}\r\n          />\r\n        ) : null\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppList;\r\nAppList.propTypes = {\r\n  border: PropTypes.bool,\r\n  ListEmptyComponent: PropTypes.node,\r\n  ListFooterComponent: PropTypes.node,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderItem: PropTypes.func,\r\n  footerProps: PropTypes.string,\r\n  type: PropTypes.any,\r\n  delay: PropTypes.any,\r\n  duration: PropTypes.any,\r\n  interval: PropTypes.any,\r\n  className: PropTypes.string,\r\n};\r\nAppList.defaultProps = {\r\n  border: false,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"appMediaModal\":\"AppMedialViewer_appMediaModal__GjACk\",\"mediaViewer\":\"AppMedialViewer_mediaViewer__zWQX+\",\"medialCarousel\":\"AppMedialViewer_medialCarousel__HP5mK\",\"slick-track\":\"AppMedialViewer_slick-track__RZ7Qe\",\"slick-slide\":\"AppMedialViewer_slick-slide__nWtH1\",\"slick-dots\":\"AppMedialViewer_slick-dots__Gi7yT\",\"slick-active\":\"AppMedialViewer_slick-active__4xTjv\",\"slick-next\":\"AppMedialViewer_slick-next__YOr+I\",\"slick-prev\":\"AppMedialViewer_slick-prev__xzuCW\"};","import React, {useEffect, useState} from 'react';\r\n\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport styles from './index.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport {Modal} from 'react-bootstrap';\r\nimport clsx from 'clsx';\r\n\r\nconst settings = {\r\n  dots: false,\r\n  arrows: true,\r\n  infinite: false,\r\n  speed: 300,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n  adaptiveHeight: true,\r\n};\r\n\r\nconst renderItem = (data, index) => {\r\n  if (data.mime_type.startsWith('image')) {\r\n    return (\r\n      <img\r\n        key={index}\r\n        src={data.url}\r\n        alt={data.name ? data.name : 'detail view'}\r\n      />\r\n    );\r\n  } else if (data.mime_type.startsWith('docs')) {\r\n    return (\r\n      <div className='ratio ratio-21x9'>\r\n        <iframe\r\n          key={index}\r\n          src={data.url}\r\n          title={data.name ? data.name : 'detail view'}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className='ratio ratio-21x9'>\r\n        <iframe\r\n          key={index}\r\n          src={data.url}\r\n          title={data.name ? data.name : 'detail view'}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst AppMediaViewer = ({index, modalTitle, medias, onClose}) => {\r\n  const [isOpen, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (index > -1) setOpen(true);\r\n    else {\r\n      setOpen(false);\r\n    }\r\n  }, [index]);\r\n\r\n  return (\r\n    <Modal\r\n      title={modalTitle}\r\n      visible={isOpen}\r\n      footer={null}\r\n      onCancel={onClose}\r\n      className={clsx(styles.appMediaModal, 'd-flex flex-column')}>\r\n      <div\r\n        className={clsx(styles.mediaViewer, 'flex-grow-1 d-flex flex-column')}>\r\n        {index >= 0 ? (\r\n          <div\r\n            className={clsx(\r\n              styles.medialCarousel,\r\n              'flex-grow-1 d-flex flex-column justify-content-center',\r\n            )}>\r\n            <Slider\r\n              settings={{...settings, initialSlide: index}}\r\n              slickGoTo={index}>\r\n              {medias.map((data, index) => renderItem(data, index))}\r\n            </Slider>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AppMediaViewer;\r\n\r\nAppMediaViewer.propTypes = {\r\n  index: PropTypes.number,\r\n  modalTitle: PropTypes.string,\r\n  medias: PropTypes.array,\r\n  onClose: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst AppsFooter = (props) => {\r\n  const {children, className, ...rest} = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(styles.appsFooter, 'apps-footer', className)}\r\n      {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsFooter;\r\n\r\nAppsFooter.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst AppsHeader = ({children}) => {\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.appsHeader,\r\n        'apps-header d-flex align-items-center',\r\n      )}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsHeader;\r\nAppsHeader.defaultProps = {};\r\n\r\nAppsHeader.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport {Card, Offcanvas} from 'react-bootstrap';\r\nimport clsx from 'clsx';\r\n\r\nconst AppSidebar = (props) => {\r\n  const {isAppDrawerOpen, setAppDrawerOpen, sidebarContent} = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.appsSidebar,\r\n        'd-flex flex-column',\r\n      )}>\r\n      <Offcanvas\r\n        className={styles.appsOffcanvas}\r\n        closeIcon={null}\r\n        show={isAppDrawerOpen}\r\n        onHide={() => setAppDrawerOpen(!isAppDrawerOpen)}>\r\n        <Offcanvas.Body className='p-0'>\r\n        {sidebarContent}\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n      <Card className={clsx(styles.card, 'd-none h-100 flex-lg-grow-1 d-lg-flex flex-lg-column')}>\r\n        {sidebarContent}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppSidebar;\r\nAppSidebar.propTypes = {\r\n  footer: PropTypes.node,\r\n  setAppDrawerOpen: PropTypes.func,\r\n  sidebarContent: PropTypes.node,\r\n  isAppDrawerOpen: PropTypes.bool,\r\n  fullView: PropTypes.bool,\r\n};\r\n","import React, {useState} from 'react';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport PropTypes from 'prop-types';\r\nimport AppSidebar from './AppSidebar';\r\nimport clsx from 'clsx';\r\nimport styles from './index.module.scss';\r\nimport QueueAnim from 'rc-queue-anim';\r\nimport {useLayoutContext} from '../../utility/AppContextProvider/LayoutContextProvider';\r\nimport {Button, Card} from 'react-bootstrap';\r\nimport {AiOutlineMenu} from 'react-icons/ai';\r\n\r\nconst AppsContainer = (props) => {\r\n  const [isAppDrawerOpen, setAppDrawerOpen] = useState(false);\r\n  const {footer, navStyle} = useLayoutContext();\r\n  const {title, noContentAnimation, sidebarContent, fullView, children} = props;\r\n  return (\r\n    <div className={clsx(styles.appsWrap, 'd-flex flex-column')}>\r\n      <div\r\n        className={clsx(styles.appsWrapHeader, 'd-flex align-items-center', {\r\n          appsWrapHeaderFull: fullView,\r\n        })}>\r\n        {fullView ? null : (\r\n          <Button\r\n            className={styles.menuBtn}\r\n            onClick={() => setAppDrawerOpen(!isAppDrawerOpen)}>\r\n            <AiOutlineMenu />\r\n          </Button>\r\n        )}\r\n        <QueueAnim style={{zIndex: 3, overflow: 'hidden'}} type='scale'>\r\n          <h2 className='text-truncate' key='title'>\r\n            {title}\r\n          </h2>\r\n        </QueueAnim>\r\n      </div>\r\n\r\n      <div className={clsx(styles.appsContainer, 'd-flex apps-container')}>\r\n        {sidebarContent ? (\r\n          <QueueAnim\r\n            style={{zIndex: 3}}\r\n            type={props.type ? props.type : 'left'}>\r\n            <AppSidebar\r\n              isAppDrawerOpen={isAppDrawerOpen}\r\n              setAppDrawerOpen={setAppDrawerOpen}\r\n              footer={footer}\r\n              fullView={fullView}\r\n              navStyle={navStyle}\r\n              sidebarContent={sidebarContent}\r\n              key='sidebar'\r\n            />\r\n          </QueueAnim>\r\n        ) : null}\r\n        <div\r\n          className={clsx(\r\n            styles.appsMainContent,\r\n            fullView ? styles.appsMainContentFull : '',\r\n            'd-flex flex-column',\r\n          )}>\r\n          {noContentAnimation ? (\r\n            <Card\r\n              key='content'\r\n              className={clsx(\r\n                styles.card,\r\n                'flex-grow-1 d-flex flex-column h-100 overflow-hidden',\r\n              )}\r\n              style={{\r\n                ...props.cardStyle,\r\n              }}>\r\n              {children}\r\n            </Card>\r\n          ) : (\r\n            <QueueAnim\r\n              type={props.type ? props.type : 'right'}\r\n              style={{minHeight: '100%'}}>\r\n              <Card\r\n                key='content'\r\n                className={clsx(\r\n                  styles.card,\r\n                  'flex-grow-1 d-flex flex-column h-100 overflow-hidden',\r\n                )}\r\n                style={{\r\n                  ...props.cardStyle,\r\n                }}>\r\n                {children}\r\n              </Card>\r\n            </QueueAnim>\r\n          )}\r\n\r\n          <AppInfoView />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsContainer;\r\n\r\nAppsContainer.defaultProps = {\r\n  title: '',\r\n  noContentAnimation: false,\r\n};\r\n\r\nAppsContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  cardStyle: PropTypes.object,\r\n  noContentAnimation: PropTypes.bool,\r\n  sidebarContent: PropTypes.node,\r\n  fullView: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  type: PropTypes.any,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"starIcon\":\"AppsStarredIcon_starIcon__wPdGq\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport AppIconBtn from '../AppIconBtn';\r\nimport {AiOutlineStar, AiFillStar} from 'react-icons/ai';\r\n\r\nconst AppsStarredIcon = ({item, title, smallBtn, onChange}) => {\r\n  return (\r\n    <AppIconBtn\r\n      smallBtn={smallBtn}\r\n      title={title}\r\n      onClick={(e) => onChange(!item.isStarred, item, e)}\r\n    >\r\n      {\r\n        <span className={styles.starIcon}>\r\n          {item.isStarred ? (\r\n            <AiFillStar />\r\n          ) : (\r\n            <AiOutlineStar />\r\n          )}\r\n        </span>\r\n      }\r\n    </AppIconBtn>\r\n  );\r\n};\r\n\r\nexport default AppsStarredIcon;\r\n\r\nAppsStarredIcon.propTypes = {\r\n  item: PropTypes.object,\r\n  onChange: PropTypes.func,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  smallBtn: PropTypes.bool,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"chatUserAvatar\":\"UserInfo_chatUserAvatar__3IWs2\",\"chatUserStatus\":\"UserInfo_chatUserStatus__Rart-\",\"chatUserStatusDot\":\"UserInfo_chatUserStatusDot__XRkb1\",\"chatUserStatusDotOnly\":\"UserInfo_chatUserStatusDotOnly__YX7Iu\",\"chatUserInfoContent\":\"UserInfo_chatUserInfoContent__2WUdC\",\"chatUserName\":\"UserInfo_chatUserName__NFrAs\",\"chatUserStatusText\":\"UserInfo_chatUserStatusText__mH4+O\",\"userDropdownMenu\":\"UserInfo_userDropdownMenu__uqd80\",\"icon\":\"UserInfo_icon__q0+CH\",\"dropDownLink\":\"UserInfo_dropDownLink__syLZ1\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Dropdown} from 'react-bootstrap';\r\nimport {AiOutlineDown} from 'react-icons/ai';\r\nimport {BiCheck} from 'react-icons/bi';\r\nimport styles from './UserInfo.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst UserInfo = ({user, showStatus, showStatusActive}) => {\r\n  const getUserAvatar = () => {\r\n    const name = user.displayName || user.name;\r\n    if (name) {\r\n      return name.charAt(0).toUpperCase();\r\n    }\r\n    if (user.email) {\r\n      return user.email.charAt(0).toUpperCase();\r\n    }\r\n  };\r\n\r\n  if (!user) {\r\n    return null;\r\n  }\r\n\r\n  const statusActiveMenu = (\r\n    <Dropdown.Menu className='position-relative'>\r\n      <Dropdown.Item key='0' className='active'>\r\n        <BiCheck className={styles.icon} /> Active\r\n      </Dropdown.Item>\r\n      <Dropdown.Item key='1'>\r\n        <BiCheck className={styles.icon} /> Away\r\n      </Dropdown.Item>\r\n      <Dropdown.Item key='2'>\r\n        <BiCheck className={styles.icon} /> Do not distrub\r\n      </Dropdown.Item>\r\n      <Dropdown.Item key='3'>\r\n        <BiCheck className={styles.icon} /> Invisible\r\n      </Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  );\r\n\r\n  return (\r\n    <div className='d-flex align-items-center'>\r\n      <div className='position-relative'>\r\n        {user.photoURL || user.image ? (\r\n          <img\r\n            width='45'\r\n            height='45'\r\n            className={clsx(\r\n              styles.chatUserAvatar,\r\n              'd-flex align-items-center justify-content-center',\r\n            )}\r\n            alt='avatar'\r\n            src={user.photoURL || user.image}\r\n          />\r\n        ) : (\r\n          <div\r\n            className={clsx(\r\n              styles.chatUserAvatar,\r\n              'd-flex align-items-center justify-content-center',\r\n            )}>\r\n            {getUserAvatar()}\r\n          </div>\r\n        )}\r\n        {showStatus && (\r\n          <span\r\n            className={clsx(\r\n              styles.chatUserStatusDot,\r\n              styles.chatUserStatusDotOnly,\r\n              'position-absolute',\r\n            )}\r\n            style={{\r\n              backgroundColor: user.status === 'online' ? '#389e0d' : '#cf1322',\r\n            }}\r\n          />\r\n        )}\r\n        {showStatusActive && (\r\n          <span\r\n            className={clsx(\r\n              styles.chatUserStatusDot,\r\n              styles.chatUserStatusDotOnly,\r\n              'position-absolute',\r\n            )}>\r\n            <span\r\n              className={styles.chatUserStatusDot}\r\n              style={{\r\n                backgroundColor:\r\n                  user.status === 'online' ? '#389e0d' : '#cf1322',\r\n              }}\r\n            />\r\n            <Dropdown className='position-relative'>\r\n              <Dropdown.Toggle className={styles.dropDownLink}>\r\n                <AiOutlineDown />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu className={styles.userDropdownMenu}>\r\n                <Dropdown.Item key='0' className='active p-1'>\r\n                  <BiCheck className={styles.icon} /> Active\r\n                </Dropdown.Item>\r\n                <Dropdown.Item key='1' className='p-1'>\r\n                  <BiCheck className={styles.icon} /> Away\r\n                </Dropdown.Item>\r\n                <Dropdown.Item key='2' className='p-1'>\r\n                  <BiCheck className={styles.icon} /> Do not distrub\r\n                </Dropdown.Item>\r\n                <Dropdown.Item key='3' className='p-1'>\r\n                  <BiCheck className={styles.icon} /> Invisible\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div className={styles.chatUserInfoContent}>\r\n        <h3 className={clsx(styles.chatUserName, 'text-truncate')}>\r\n          {user.displayName || user.name\r\n            ? user.displayName || user.name\r\n            : user.email}\r\n        </h3>\r\n        <span className={clsx(styles.chatUserStatusText, 'text-truncate')}>\r\n          {user.status ? user.status : 'Online'}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n\r\nUserInfo.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  showStatus: PropTypes.bool,\r\n  showStatusActive: PropTypes.bool,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"chatSidebarUserView\":\"ChatSideBar_chatSidebarUserView__STKaC\",\"chatSidebarSearchView\":\"ChatSideBar_chatSidebarSearchView__iJ8Rk\",\"chatListItem\":\"ChatSideBar_chatListItem__4o76k\",\"chatAvatar\":\"ChatSideBar_chatAvatar__UBU+B\",\"chatListItemContent\":\"ChatSideBar_chatListItemContent__6s3V4\",\"chatSidebarUserTabs\":\"ChatSideBar_chatSidebarUserTabs__kNeW6\",\"chatSidebarTabs\":\"ChatSideBar_chatSidebarTabs__Z9sIi\",\"tab\":\"ChatSideBar_tab__fzIY-\",\"chat-sidebar-scrollbar\":\"ChatSideBar_chat-sidebar-scrollbar__7vsf2\",\"chatSidebarTitle\":\"ChatSideBar_chatSidebarTitle__P-+lE\",\"chatSidebarScrollbar\":\"ChatSideBar_chatSidebarScrollbar__PF+dK\",\"searchInput\":\"ChatSideBar_searchInput__X0GAv\",\"searchBtn\":\"ChatSideBar_searchBtn__f-Zoz\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useDispatch} from 'react-redux';\r\nimport {onSelectUser} from '../../../../../../redux/actions';\r\nimport clsx from 'clsx';\r\nimport styles from '../../index.module.scss';\r\nimport styles2 from '../../UserInfo.module.scss';\r\n\r\nconst ConnectionItem = (props) => {\r\n  const {item, selectedUser} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.chatListItem,\r\n        'd-flex item-hover',\r\n        (selectedUser && selectedUser.id === item.id) ? 'active' : ''\r\n      )}\r\n      onClick={() => dispatch(onSelectUser(item))}>\r\n      <div className='position-relative'>\r\n        <img className={styles.chatAvatar} src={item.image} />\r\n        <span\r\n          className={clsx(\r\n            styles2.chatUserStatusDot,\r\n            styles2.chatUserStatusDotOnly,\r\n            'position-absolute',\r\n          )}\r\n          style={{\r\n            backgroundColor: item.status === 'online' ? '#389e0d' : '#cf1322',\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={styles.chatListItemContent}>\r\n        <h3>{item.name}</h3>\r\n        <p className='text-truncate mb-0'>@{item.username}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionItem;\r\n\r\nConnectionItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  selectedUser: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nexport const ChatItemItem = (props) => (\r\n  <ContentLoader viewBox='0 0 200 40' {...props}>\r\n    <circle cx='20' cy='20' r='15' />\r\n    <rect x='45' y='10' rx='1' ry='1' width='140' height='10' />\r\n    <rect x='45' y='22' rx='1' ry='1' width='100' height='7' />\r\n  </ContentLoader>\r\n);\r\nconst ChatListSkeleton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <ChatItemItem />\r\n      <ChatItemItem />\r\n      <ChatItemItem />\r\n      <ChatItemItem />\r\n      <ChatItemItem />\r\n      <ChatItemItem />\r\n      <ChatItemItem />\r\n      <ChatItemItem />\r\n      <ChatItemItem />\r\n      <ChatItemItem />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChatListSkeleton;\r\n","import React from 'react';\r\nimport ConnectionItem from './ConnectionItem';\r\nimport PropTypes from 'prop-types';\r\nimport AppList from '@crema/core/AppList';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport ChatListSkeleton from '@crema/core/AppSkeleton/ChatListSkeleton';\r\nimport {useIntl} from 'react-intl';\r\nimport {useSelector} from 'react-redux';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport styles from '../../index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst ConnectionList = ({connectionListData, loading}) => {\r\n  const {messages} = useIntl();\r\n  const {selectedUser} = useSelector(({chatApp}) => chatApp);\r\n  return (\r\n    <AppScrollbar className={styles.chatSidebarScrollbar}>\r\n      <h3 className={styles.chatSidebarTitle}>Contacts</h3>\r\n      <AppList\r\n        data={connectionListData}\r\n        ListEmptyComponent={\r\n          <ListEmptyResult\r\n            content={messages['chatApp.noUserFound']}\r\n            loading={loading}\r\n            placeholder={<ChatListSkeleton />}\r\n          />\r\n        }\r\n        renderItem={(item) => (\r\n          <ConnectionItem\r\n            key={item.id}\r\n            item={item}\r\n            selectedUser={selectedUser}\r\n          />\r\n        )}\r\n      />\r\n    </AppScrollbar>\r\n  );\r\n};\r\n\r\nexport default ConnectionList;\r\n\r\nConnectionList.propTypes = {\r\n  connectionListData: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useDispatch} from 'react-redux';\r\nimport {onSelectUser} from '../../../../../../redux/actions';\r\nimport clsx from 'clsx';\r\nimport styles from '../../index.module.scss';\r\nimport styles2 from '../../UserInfo.module.scss';\r\n\r\nconst ChatItem = (props) => {\r\n  const {item, selectedUser} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.chatListItem,\r\n        'd-flex item-hover',\r\n        (selectedUser && selectedUser.id === item.id) ? 'active' : ''\r\n      )}\r\n      onClick={() => dispatch(onSelectUser(item))}>\r\n      <div className='position-relative'>\r\n        <img className={styles.chatAvatar} src={item.image} />\r\n        <span\r\n          className={clsx(\r\n            styles2.chatUserStatusDot,\r\n            styles2.chatUserStatusDotOnly,\r\n            'position-absolute',\r\n          )}\r\n          style={{\r\n            backgroundColor: item.status === 'online' ? '#389e0d' : '#cf1322',\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={styles.chatListItemContent}>\r\n        <h3>{item.name}</h3>\r\n        <p className='text-truncate mb-0'>{item.lastMessage.message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatItem;\r\n\r\nChatItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  selectedUser: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport ChatItem from './ChatItem';\r\nimport PropTypes from 'prop-types';\r\nimport AppList from '@crema/core/AppList';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport {useIntl} from 'react-intl';\r\nimport ChatListSkeleton from '@crema/core/AppSkeleton/ChatListSkeleton';\r\nimport {useSelector} from 'react-redux';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport styles from '../../index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst ChatList = ({chatListData, loading}) => {\r\n  const {messages} = useIntl();\r\n  const {selectedUser} = useSelector(({chatApp}) => chatApp);\r\n  return (\r\n    <AppScrollbar className={styles.chatSidebarScrollbar}>\r\n      <h3 className={styles.chatSidebarTitle}>Connections</h3>\r\n      <AppList\r\n        data={chatListData}\r\n        ListEmptyComponent={\r\n          <ListEmptyResult\r\n            content={messages['chatApp.noUserFound']}\r\n            loading={loading}\r\n            placeholder={<ChatListSkeleton />}\r\n          />\r\n        }\r\n        renderItem={(item) => (\r\n          <ChatItem key={item.id} item={item} selectedUser={selectedUser} />\r\n        )}\r\n      />\r\n    </AppScrollbar>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n\r\nChatList.propTypes = {\r\n  chatListData: PropTypes.array,\r\n  loading: PropTypes.bool,\r\n};\r\n","import React, {useState} from 'react';\r\nimport ConnectionList from './ConnectionList';\r\nimport ChatList from './ChatList';\r\nimport PropTypes from 'prop-types';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {Tabs, Tab} from 'react-bootstrap';\r\nimport {BsChatSquareText} from 'react-icons/bs';\r\nimport {BiUserPin} from 'react-icons/bi';\r\nimport styles from '../index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst tabs = [\r\n  {id: 333, name: <IntlMessages id='dashboard.messages' />},\r\n  {id: 323, name: <IntlMessages id='chatApp.contacts' />},\r\n];\r\n\r\nconst UserTabs = ({connectionListData, chatListData, loading}) => {\r\n  const [listType, setListType] = useState('chatList');\r\n\r\n  const handleChange = (value) => {\r\n    setListType(value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.chatSidebarUserTabs}>\r\n      <Tabs\r\n        className={styles.chatSidebarTabs}\r\n        activeKey={listType}\r\n        onSelect={(e) => handleChange(e)}>\r\n        <Tab\r\n          tabClassName={clsx(\r\n            styles.tab,\r\n            'd-flex flex-column align-items-center w-100 h-100',\r\n          )}\r\n          eventKey='chatList'\r\n          title={\r\n            <>\r\n              <BsChatSquareText size={16} />\r\n              {tabs[0].name}\r\n            </>\r\n          }>\r\n          <ChatList chatListData={chatListData} loading={loading} />\r\n        </Tab>\r\n        <Tab\r\n          tabClassName={clsx(\r\n            styles.tab,\r\n            'd-flex flex-column align-items-center w-100 h-100',\r\n          )}\r\n          eventKey='connectionList'\r\n          title={\r\n            <>\r\n              <BiUserPin size={16} />\r\n              {tabs[1].name}\r\n            </>\r\n          }>\r\n          <ConnectionList\r\n            connectionListData={connectionListData}\r\n            loading={loading}\r\n          />\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTabs;\r\n\r\nUserTabs.defaultProps = {\r\n  connectionListData: [],\r\n  chatListData: [],\r\n};\r\n\r\nUserTabs.propTypes = {\r\n  connectionListData: PropTypes.array,\r\n  chatListData: PropTypes.array,\r\n  loading: PropTypes.bool,\r\n};\r\n","import React, {useState} from 'react';\r\nimport UserInfo from './UserInfo';\r\nimport UserTabs from './UserTabs';\r\nimport {useSelector} from 'react-redux';\r\nimport moment from 'moment';\r\nimport {useIntl} from 'react-intl';\r\nimport {InputGroup, FormControl} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\nimport {Search} from 'react-bootstrap-icons';\r\nimport {useAuthUser} from '@crema/utility/AuthHooks';\r\n\r\nconst ChatSideBar = () => {\r\n  const [keywords, setKeywords] = useState('');\r\n  const {user} = useAuthUser();\r\n\r\n  const {connectionList} = useSelector(({chatApp}) => chatApp);\r\n  const {loading} = useSelector(({common}) => common);\r\n\r\n  const getConnectionList = () => {\r\n    if (keywords !== '') {\r\n      return connectionList.filter((item) =>\r\n        item.name.toUpperCase().includes(keywords.toUpperCase()),\r\n      );\r\n    }\r\n    return connectionList;\r\n  };\r\n\r\n  const getChatList = () => {\r\n    let chatsList = connectionList.filter((item) => item.lastMessage);\r\n    if (keywords !== '') {\r\n      chatsList = chatsList.filter((item) =>\r\n        item.name.toUpperCase().includes(keywords.toUpperCase()),\r\n      );\r\n    }\r\n    chatsList.sort((a, b) => {\r\n      let momentA = moment(a.lastMessage.time).format('X');\r\n      let momentB = moment(b.lastMessage.time).format('X');\r\n      return momentB - momentA;\r\n    });\r\n    return chatsList;\r\n  };\r\n\r\n  const connectionListData = getConnectionList();\r\n\r\n  const chatListData = getChatList();\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <div className='d-flex flex-column h-100'>\r\n      <div className={styles.chatSidebarUserView}>\r\n        <UserInfo user={user} showStatusActive={true} />\r\n      </div>\r\n\r\n      <div className={styles.chatSidebarSearchView}>\r\n        <InputGroup className='position-relative'>\r\n          <FormControl\r\n            placeholder={messages['common.searchHere']}\r\n            aria-describedby='basic-addon2'\r\n            value={keywords}\r\n            className={styles.searchInput}\r\n            onChange={(e) => setKeywords(e.target.value)}\r\n          />\r\n          <InputGroup.Text id='basic-addon2' className={styles.searchBtn}>\r\n            <Search />\r\n          </InputGroup.Text>\r\n        </InputGroup>\r\n      </div>\r\n\r\n      <UserTabs\r\n        connectionListData={connectionListData}\r\n        chatListData={chatListData}\r\n        loading={loading}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatSideBar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"messageIcon\":\"NoUserScreen_messageIcon__yNNqa\"};","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport styles from './index.module.scss';\r\nimport {BiMessageRoundedDots} from 'react-icons/bi';\r\n\r\nconst NoUserScreen = () => {\r\n  return (\r\n    <div className='position-relative'>\r\n      <BiMessageRoundedDots className={styles.messageIcon} />\r\n      <p className='mb-0'>\r\n        <IntlMessages id='chatApp.noUser' />\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoUserScreen;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"chatNoUserScreen\":\"ChatContent_chatNoUserScreen__8imYB\",\"messageScreenScrollbar\":\"ChatContent_messageScreenScrollbar__4ufNA\",\"noMessage\":\"ChatContent_noMessage__FQ+ru\",\"addNewMessageAction\":\"ChatContent_addNewMessageAction__CiRvU\",\"messageBtn\":\"ChatContent_messageBtn__raCWC\",\"anticon-send\":\"ChatContent_anticon-send__MLptM\",\"addNewMessageActionFirst\":\"ChatContent_addNewMessageActionFirst__lsMQa\",\"chatHeaderAction\":\"ChatContent_chatHeaderAction__LpXQx\"};","import React, {useEffect, useState} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport {AiOutlinePaperClip, AiOutlineSend} from 'react-icons/ai';\r\nimport PropTypes from 'prop-types';\r\nimport {useIntl} from 'react-intl';\r\nimport {MessageType} from '@crema/services/db/apps/chat/connectionList';\r\nimport {Button, Form} from 'react-bootstrap';\r\nimport {generateUniqueID} from '@crema/utility/Utils';\r\nimport clsx from 'clsx';\r\nimport styles from '../index.module.scss';\r\n\r\nconst AddNewMessage = ({\r\n  sendFileMessage,\r\n  onSendMessage,\r\n  currentMessage = '',\r\n}) => {\r\n  const [message, setMessage] = useState(currentMessage);\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    multiple: true,\r\n    onDrop: (acceptedFiles) => {\r\n      sendFileMessage({\r\n        message: '',\r\n        message_type: MessageType.MEDIA,\r\n        media: acceptedFiles.map((file) => {\r\n          return {\r\n            id: generateUniqueID(),\r\n            url: URL.createObjectURL(file),\r\n            mime_type: file.type,\r\n            file_name: file.name,\r\n            file_size: file.size,\r\n          };\r\n        }),\r\n      });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setMessage(currentMessage);\r\n  }, [currentMessage]);\r\n\r\n  const onKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      onClickSendMessage();\r\n    }\r\n  };\r\n\r\n  const onClickSendMessage = () => {\r\n    if (message) {\r\n      onSendMessage(message);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <div className='d-flex'>\r\n      <div\r\n        className={clsx(\r\n          styles.addNewMessageAction,\r\n          styles.addNewMessageActionFirst,\r\n          'd-flex flex-row align-items-center',\r\n        )}>\r\n        {message === '' ? (\r\n          <Button\r\n            {...getRootProps({\r\n              className: styles.messageBtn,\r\n            })}>\r\n            <input {...getInputProps()} />\r\n            <AiOutlinePaperClip className='d-block' />\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n      <Form.Control\r\n        placeholder={messages['chatApp.sendMessagePlaceholder']}\r\n        value={message}\r\n        onChange={(event) => {\r\n          if (event.target.value !== '\\n') setMessage(event.target.value);\r\n        }}\r\n        onKeyPress={onKeyPress}\r\n      />\r\n\r\n      <div\r\n        className={clsx(\r\n          styles.addNewMessageAction,\r\n          'd-flex flex-row align-items-center',\r\n        )}>\r\n        <Button className={styles.messageBtn} onClick={onClickSendMessage}>\r\n          <AiOutlineSend className='d-block ms-1' />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewMessage;\r\n\r\nAddNewMessage.defaultProps = {\r\n  message: '',\r\n};\r\n\r\nAddNewMessage.propTypes = {\r\n  sendFileMessage: PropTypes.func,\r\n  onSendMessage: PropTypes.func,\r\n  currentMessage: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mediaImg\":\"MessageItem_mediaImg__r5sM5\",\"mediaVideo\":\"MessageItem_mediaVideo__FvSYE\",\"mediaVideoIcon\":\"MessageItem_mediaVideoIcon__4p1fe\",\"mediaAttach\":\"MessageItem_mediaAttach__-EpXg\",\"mediaCounter\":\"MessageItem_mediaCounter__c7EBO\",\"chatMessageListItem\":\"MessageItem_chatMessageListItem__XcSBa\",\"right\":\"MessageItem_right__RyEc7\",\"messageChatItem\":\"MessageItem_messageChatItem__L2PDD\",\"messageChatAvatar\":\"MessageItem_messageChatAvatar__JTxJL\",\"messageMoreDropdownLink\":\"MessageItem_messageMoreDropdownLink__xo2g6\",\"messageChatView\":\"MessageItem_messageChatView__G7dJ8\",\"messageTime\":\"MessageItem_messageTime__lvMQ0\",\"messageChat\":\"MessageItem_messageChat__EAcwP\",\"lastChatMessage\":\"MessageItem_lastChatMessage__GdnmR\",\"messageInfoEdit\":\"MessageItem_messageInfoEdit__kPgGN\",\"messageChatSender\":\"MessageItem_messageChatSender__j3tux\",\"hideUserInfo\":\"MessageItem_hideUserInfo__lS3vS\",\"message-chat-sender\":\"MessageItem_message-chat-sender__esGHH\"};","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {MessageType} from '@crema/services/db/apps/chat/connectionList';\r\nimport {getFileSize} from '@crema/utility/Utils';\r\nimport {Dropdown} from 'react-bootstrap';\r\nimport styles from './MessageItem.module.scss';\r\nimport AppMediaViewer from '@crema/core/AppMedialViewer';\r\nimport clsx from 'clsx';\r\nimport {MdOutlineModeEditOutline} from 'react-icons/md';\r\nimport {AiOutlineFileText, AiOutlineMore} from 'react-icons/ai';\r\nimport {FiPlayCircle} from 'react-icons/fi';\r\nimport {Image} from 'react-bootstrap';\r\n\r\nconst showMediaItems = 2;\r\n\r\nconst getMediaMessage = (item) => {\r\n  if (item.mime_type.startsWith('image')) {\r\n    return (\r\n      <div className={styles.mediaImg}>\r\n        <img alt='' src={item.url} />\r\n      </div>\r\n    );\r\n  } else if (item.mime_type.startsWith('video')) {\r\n    return (\r\n      <div\r\n        className={clsx(\r\n          styles.mediaVideo,\r\n          'position-relative overflow-hidden',\r\n        )}>\r\n        <video src={item.url} />\r\n        <FiPlayCircle\r\n          className={clsx(styles.mediaVideoIcon, 'position-absolute')}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={clsx(styles.mediaAttach, 'd-flex flex-nowrap')}>\r\n        <AiOutlineFileText />\r\n        <p>\r\n          <span>{item.file_name}</span>\r\n          <span>{getFileSize(item.file_size)}</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst getMessage = (item, setIndex) => {\r\n  if (item.message_type === MessageType.TEXT) {\r\n    return <p className='mb-0 d-inline-block'>{item.message}</p>;\r\n  } else {\r\n    return (\r\n      //.chat-media-wrapper {\r\n      //  padding: 4px;\r\n      //  cursor: pointer;\r\n      //}\r\n      //\r\n      <div className='d-inline-block overflow-hidden position-relative align-middle'>\r\n        <div className='d-flex flex-wrap m-n1'>\r\n          {item.media.slice(0, showMediaItems).map((data, index) => (\r\n            <div\r\n              key={'media-' + data.id}\r\n              className='p-1 pointer'\r\n              onClick={() => setIndex(index)}>\r\n              {getMediaMessage(data)}\r\n            </div>\r\n          ))}\r\n          {item.media.length > showMediaItems ? (\r\n            <div\r\n              className='p-1 pointer'\r\n              onClick={() => setIndex(showMediaItems)}>\r\n              <div\r\n                className={clsx(\r\n                  styles.mediaCounter,\r\n                  'd-flex flex-column align-items-center justify-content-center',\r\n                )}>\r\n                +{item.media.length - showMediaItems}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst SenderMessageItem = ({\r\n  authUser,\r\n  item,\r\n  onClickEditMessage,\r\n  isPreviousSender = false,\r\n  deleteMessage,\r\n  isLast,\r\n}) => {\r\n  const [index, setIndex] = useState(-1);\r\n  const getUserAvatar = () => {\r\n    const name = authUser.displayName;\r\n    if (name) {\r\n      return name.charAt(0).toUpperCase();\r\n    }\r\n    if (authUser.email) {\r\n      return authUser.email.charAt(0).toUpperCase();\r\n    }\r\n  };\r\n\r\n  const onClose = () => {\r\n    setIndex(-1);\r\n  };\r\n  const menuSend = (\r\n    <Dropdown.Menu>\r\n      {item.message_type === MessageType.TEXT ? (\r\n        <Dropdown.Item\r\n          onClick={() => {\r\n            onClickEditMessage(item);\r\n          }}>\r\n          <IntlMessages id='common.edit' />\r\n        </Dropdown.Item>\r\n      ) : null}\r\n      <Dropdown.Item\r\n        onClick={() => {\r\n          deleteMessage(item.id);\r\n        }}>\r\n        <IntlMessages id='common.delete' />\r\n      </Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.chatMessageListItem,\r\n        styles.right,\r\n        'd-flex justify-content-end',\r\n        isPreviousSender ? styles.hideUserInfo : 'first-chat-message',\r\n        isLast ? styles.lastChatMessage : '',\r\n      )}>\r\n      <div className={styles.messageChatView}>\r\n        <div className={styles.messageChatItem}>\r\n          <span className={styles.messageTime}>{item.time}</span>\r\n          <div className={styles.messageChat}>\r\n            {getMessage(item, setIndex)}\r\n\r\n            {item.edited && (\r\n              <span className={styles.messageInfoEdit}>\r\n                <MdOutlineModeEditOutline />\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={clsx(\r\n            styles.messageChatSender,\r\n            'd-flex align-items-start',\r\n          )}>\r\n          {authUser.photoURL ? (\r\n            <Image\r\n              roundedCircle\r\n              size={34}\r\n              className={styles.messageChatAvatar}\r\n              src={authUser.photoURL}\r\n            />\r\n          ) : (\r\n            <div className={styles.messageChatAvatar}>\r\n              {getUserAvatar()}\r\n            </div>\r\n          )}\r\n          <Dropdown overlay={menuSend} trigger={['click']}>\r\n            <a className={styles.messageMoreDropdownLink}>\r\n              <AiOutlineMore />\r\n            </a>\r\n          </Dropdown>\r\n        </div>\r\n      </div>\r\n\r\n      <AppMediaViewer index={index} medias={item.media} onClose={onClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SenderMessageItem;\r\n\r\nSenderMessageItem.defaultProps = {};\r\n\r\nSenderMessageItem.propTypes = {\r\n  authUser: PropTypes.object.isRequired,\r\n  item: PropTypes.object.isRequired,\r\n  isPreviousSender: PropTypes.bool,\r\n  isLast: PropTypes.bool,\r\n  onClickEditMessage: PropTypes.func,\r\n  deleteMessage: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {MessageType} from '@crema/services/db/apps/chat/connectionList';\r\nimport {getFileSize} from '@crema/utility/Utils';\r\nimport styles from './MessageItem.module.scss';\r\nimport AppMediaViewer from '@crema/core/AppMedialViewer';\r\nimport clsx from 'clsx';\r\nimport {FiPlayCircle} from 'react-icons/fi';\r\nimport {AiOutlineFileText, AiOutlineEdit} from 'react-icons/ai';\r\nimport {Image} from 'react-bootstrap-icons';\r\n\r\nconst showMediaItems = 2;\r\nconst getMediaMessage = (item) => {\r\n  if (item.mime_type.startsWith('image')) {\r\n    return (\r\n      <div className={styles.mediaImg}>\r\n        <img alt='' src={item.url} />\r\n      </div>\r\n    );\r\n  } else if (item.mime_type.startsWith('video')) {\r\n    return (\r\n      <div\r\n        className={clsx(\r\n          styles.mediaVideo,\r\n          'position-relative overflow-hidden',\r\n        )}>\r\n        <video src={item.url} />\r\n        <FiPlayCircle\r\n          className={clsx(styles.mediaVideoIcon, 'position-absolute')}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={clsx(styles.mediaAttach, 'd-flex flex-nowrap')}>\r\n        <AiOutlineFileText />\r\n        <p>\r\n          <span>{item.file_name}</span>\r\n          <span>{getFileSize(item.file_size)}</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst getMessage = (item, setIndex) => {\r\n  if (item.message_type === MessageType.TEXT) {\r\n    return <p className='m-0'>{item.message}</p>;\r\n  } else {\r\n    return (\r\n      <div className='d-inline-block overflow-hidden position-relative align-middle'>\r\n        <div className='d-flex flex-wrap m-n1'>\r\n          {item.media.slice(0, showMediaItems).map((data, index) => (\r\n            <div\r\n              key={'media-' + data.id}\r\n              className='p-1 pointer'\r\n              onClick={() => setIndex(index)}>\r\n              {getMediaMessage(data)}\r\n            </div>\r\n          ))}\r\n          {item.media.length > showMediaItems ? (\r\n            <div\r\n              className='p-1 pointer'\r\n              onClick={() => setIndex(showMediaItems)}>\r\n              <div\r\n                className={clsx(\r\n                  styles.mediaCounter,\r\n                  'd-flex flex-column align-items-center justify-content-center',\r\n                )}>\r\n                +{item.media.length - showMediaItems}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst ReceiverMessageItem = ({\r\n  selectedUser,\r\n  isPreviousSender = false,\r\n  isLast,\r\n  item,\r\n}) => {\r\n  const [index, setIndex] = useState(-1);\r\n\r\n  const onClose = () => {\r\n    setIndex(-1);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.chatMessageListItem,\r\n        styles.left,\r\n        'd-flex',\r\n        isPreviousSender ? styles.hideUserInfo : 'first-chat-message',\r\n        isLast ? styles.lastChatMessage : '',\r\n      )}>\r\n      <div className={styles.messageChatView}>\r\n        {isPreviousSender ? null : selectedUser.image ? (\r\n          <img className={styles.messageChatAvatar} src={selectedUser.image} />\r\n        ) : (\r\n          <div className={styles.messageChatAvatar}>\r\n            {selectedUser.name.charAt(0).toUpperCase()}\r\n          </div>\r\n        )}\r\n\r\n        <div className={styles.messageChatItem}>\r\n          <span className={styles.messageTime}>{item.time}</span>\r\n          <div className={styles.messageChat}>\r\n            {getMessage(item, setIndex)}\r\n\r\n            {item.edited && (\r\n              <span className={styles.messageInfoEdit}>\r\n                <AiOutlineEdit />\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <AppMediaViewer index={index} medias={item.media} onClose={onClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReceiverMessageItem;\r\n\r\nReceiverMessageItem.defaultProps = {};\r\n\r\nReceiverMessageItem.propTypes = {\r\n  selectedUser: PropTypes.object.isRequired,\r\n  item: PropTypes.object.isRequired,\r\n  isPreviousSender: PropTypes.bool,\r\n  isLast: PropTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SenderMessageItem from './SenderMessageItem';\r\nimport ReceiverMessageItem from './ReceiverMessageItem';\r\nimport AppList from '@crema/core/AppList';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport {AppAnimates} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst MessagesList = ({\r\n  userMessages,\r\n  authUser,\r\n  selectedUser,\r\n  onClickEditMessage,\r\n  deleteMessage,\r\n}) => {\r\n  return (\r\n    <div className='position-relative p-3'>\r\n      <AppList\r\n        animation={AppAnimates.SLIDEUPIN}\r\n        data={userMessages.messageData}\r\n        ListEmptyComponent={<ListEmptyResult title='test' />}\r\n        renderItem={(item, index) => {\r\n          if (item.sender === authUser.id) {\r\n            return (\r\n              <SenderMessageItem\r\n                authUser={authUser}\r\n                item={item}\r\n                isPreviousSender={\r\n                  index > 0 &&\r\n                  item.sender === userMessages.messageData[index - 1].sender\r\n                }\r\n                isLast={\r\n                  (index + 1 < userMessages.messageData.length &&\r\n                    item.sender !==\r\n                      userMessages.messageData[index + 1].sender) ||\r\n                  index + 1 === userMessages.messageData.length\r\n                }\r\n                key={item.id}\r\n                onClickEditMessage={onClickEditMessage}\r\n                deleteMessage={deleteMessage}\r\n              />\r\n            );\r\n          } else {\r\n            return (\r\n              <ReceiverMessageItem\r\n                isPreviousSender={\r\n                  index > 0 &&\r\n                  item.sender === userMessages.messageData[index - 1].sender\r\n                }\r\n                isLast={\r\n                  (index + 1 < userMessages.messageData.length &&\r\n                    item.sender !==\r\n                      userMessages.messageData[index + 1].sender) ||\r\n                  index + 1 === userMessages.messageData.length\r\n                }\r\n                selectedUser={selectedUser}\r\n                item={item}\r\n                key={item.id}\r\n              />\r\n            );\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesList;\r\n\r\nMessagesList.defaultProps = {};\r\n\r\nMessagesList.propTypes = {\r\n  userMessages: PropTypes.object.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n  selectedUser: PropTypes.object.isRequired,\r\n  onClickEditMessage: PropTypes.func,\r\n  deleteMessage: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport ConfirmationModal from '@crema/core/AppConfirmationModal';\r\nimport {AiOutlineMore} from 'react-icons/ai';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport {Dropdown} from 'react-bootstrap';\r\nimport UserInfo from '../../ChatSideBar/UserInfo';\r\nimport AppIconButton from '@crema/core/AppIconBtn';\r\nimport {MdOutlinePhone} from 'react-icons/md';\r\nimport {BiVideo} from 'react-icons/bi';\r\nimport clsx from 'clsx';\r\nimport styles from '../index.module.scss';\r\n\r\nconst Header = (props) => {\r\n  const {\r\n    deleteConversation,\r\n    selectedUser,\r\n    onChangeStarred,\r\n    clearChatHistory,\r\n    isChecked,\r\n  } = props;\r\n  const [isDeleteModalOpen, setDeleteModalOpen] = useState(false);\r\n\r\n  const toggleDeleteModal = () => {\r\n    setDeleteModalOpen(!isDeleteModalOpen);\r\n  };\r\n\r\n  const onDeleteConversation = () => {\r\n    deleteConversation();\r\n    toggleDeleteModal();\r\n  };\r\n\r\n  const menuLabel = (\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item onClick={toggleDeleteModal}>\r\n        <IntlMessages id='chatApp.deleteConversation'/>\r\n      </Dropdown.Item>\r\n      <Dropdown.Item onClick={clearChatHistory}>\r\n        <IntlMessages id='chatApp.clearChat'/>\r\n      </Dropdown.Item>\r\n      <Dropdown.Item>\r\n        <IntlMessages id='chatApp.hide'/>\r\n      </Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  );\r\n\r\n  return (\r\n    <div className='w-100 d-flex align-items-center'>\r\n      <UserInfo user={selectedUser} showStatus={true}/>\r\n      <div\r\n        className={clsx(styles.chatHeaderAction, 'd-flex align-items-center')}>\r\n        <AppIconButton\r\n          smallBtn\r\n          title={<IntlMessages id='common.call'/>}\r\n        >\r\n          <MdOutlinePhone/>\r\n        </AppIconButton>\r\n\r\n        <AppIconButton\r\n          smallBtn\r\n          title={<IntlMessages id='common.videoCall'/>}\r\n        >\r\n          <BiVideo/>\r\n        </AppIconButton>\r\n\r\n        <AppsStarredIcon\r\n          smallBtn\r\n          item={{isStarred: isChecked}}\r\n          onChange={onChangeStarred}\r\n        />\r\n\r\n        <Dropdown overlay={menuLabel} trigger={['click']}>\r\n          <AppIconButton\r\n            smallBtn\r\n            title={<IntlMessages id='common.more'/>}\r\n          >\r\n            <AiOutlineMore/>\r\n          </AppIconButton>\r\n        </Dropdown>\r\n      </div>\r\n\r\n      {isDeleteModalOpen ? (\r\n        <ConfirmationModal\r\n          open={isDeleteModalOpen}\r\n          onDeny={setDeleteModalOpen}\r\n          onConfirm={onDeleteConversation}\r\n          modalTitle={<IntlMessages id='chatApp.deleteContent'/>}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\nHeader.defaultProps = {};\r\n\r\nHeader.propTypes = {\r\n  selectedUser: PropTypes.object.isRequired,\r\n  deleteConversation: PropTypes.func,\r\n  onChangeStarred: PropTypes.func,\r\n  clearChatHistory: PropTypes.func,\r\n  isChecked: PropTypes.bool,\r\n};\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport SimpleBarReact from 'simplebar-react';\r\nimport {\r\n  getConnectionMessages,\r\n  onClearChatHistory,\r\n  onDeleteConversation,\r\n  onDeleteMessage,\r\n  onEditMessage,\r\n  onSendMessage,\r\n} from '../../../../../redux/actions/ChatApp';\r\nimport AddNewMessage from './AddNewMessage';\r\nimport MessagesList from './MessagesList';\r\nimport moment from 'moment';\r\nimport Header from './Header';\r\nimport PropTypes from 'prop-types';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport AppsHeader from '@crema/core/AppsContainer/AppsHeader';\r\nimport AppsFooter from '@crema/core/AppsContainer/AppsFooter';\r\nimport {MessageType} from '@crema/services/db/apps/chat/connectionList';\r\nimport {useAuthUser} from '@crema/utility/AuthHooks';\r\nimport clsx from 'clsx';\r\nimport styles from '../index.module.scss';\r\n\r\nconst MessagesScreen = ({selectedUser, loading}) => {\r\n  const [message, setMessage] = useState('');\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const [selectedMessage, setSelectedMessage] = useState(null);\r\n  const {userMessages} = useSelector(({chatApp}) => chatApp);\r\n\r\n  const dispatch = useDispatch();\r\n  const {user} = useAuthUser();\r\n\r\n  let _scrollBarRef = useRef(null);\r\n  useEffect(() => {\r\n    dispatch(getConnectionMessages(selectedUser.channelId));\r\n  }, [dispatch, selectedUser]);\r\n\r\n  useEffect(() => {\r\n    if (userMessages?.messageData?.length > 0) {\r\n      if (_scrollBarRef?.current) {\r\n        const scrollEl = _scrollBarRef.current.getScrollElement();\r\n        scrollEl.scrollTop = scrollEl.scrollHeight;\r\n      }\r\n    }\r\n  }, [userMessages, _scrollBarRef]);\r\n\r\n  const sendFileMessage = (fileMessage) => {\r\n    const data = {\r\n      ...fileMessage,\r\n      sender: user.id,\r\n      time: moment().format('llll'),\r\n    };\r\n    dispatch(onSendMessage(selectedUser.channelId, data));\r\n  };\r\n\r\n  const onSend = (message) => {\r\n    const data = {\r\n      ...selectedMessage,\r\n      message,\r\n      message_type: MessageType.TEXT,\r\n      sender: user.id,\r\n      time: moment().format('llll'),\r\n    };\r\n\r\n    if (isEdit) {\r\n      data.edited = true;\r\n      dispatch(onEditMessage(selectedUser.channelId, data));\r\n      setMessage('');\r\n      setIsEdit(false);\r\n      setSelectedMessage(null);\r\n    } else {\r\n      dispatch(onSendMessage(selectedUser.channelId, data));\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const onChangeStarred = (checked) => {\r\n    setIsChecked(checked);\r\n  };\r\n\r\n  const onClickEditMessage = (data) => {\r\n    if (data.message_type === MessageType.TEXT) {\r\n      setIsEdit(true);\r\n      setMessage(data.message);\r\n      setSelectedMessage(data);\r\n    }\r\n  };\r\n\r\n  const deleteMessage = (messageId) => {\r\n    dispatch(onDeleteMessage(selectedUser.channelId, messageId));\r\n  };\r\n\r\n  const deleteConversation = () => {\r\n    dispatch(onDeleteConversation(selectedUser.channelId));\r\n  };\r\n  const clearChatHistory = () => {\r\n    dispatch(onClearChatHistory(selectedUser.channelId));\r\n  };\r\n\r\n  return (\r\n    <div className='d-flex flex-column h-100'>\r\n      <AppsHeader>\r\n        <Header\r\n          isChecked={isChecked}\r\n          onChangeStarred={onChangeStarred}\r\n          selectedUser={selectedUser}\r\n          deleteConversation={deleteConversation}\r\n          clearChatHistory={clearChatHistory}\r\n        />\r\n      </AppsHeader>\r\n\r\n      {userMessages && user ? (\r\n        <SimpleBarReact\r\n          ref={(ref) => {\r\n            _scrollBarRef = ref;\r\n          }}\r\n          className={clsx(\r\n            styles.messageScreenScrollbar,\r\n            'position-relative d-flex flex-column',\r\n          )}>\r\n          <MessagesList\r\n            userMessages={userMessages}\r\n            authUser={user}\r\n            selectedUser={selectedUser}\r\n            onClickEditMessage={onClickEditMessage}\r\n            deleteMessage={deleteMessage}\r\n            loading={loading}\r\n          />\r\n        </SimpleBarReact>\r\n      ) : (\r\n        <div className='d-flex flex-column text-center justify-content-center h-100'>\r\n          <span className={styles.noMessage}>\r\n            <IntlMessages id='chatApp.sayHi' /> {selectedUser.name}\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      <AppsFooter className='mt-auto'>\r\n        <AddNewMessage\r\n          currentMessage={message}\r\n          sendFileMessage={sendFileMessage}\r\n          onSendMessage={onSend}\r\n        />\r\n      </AppsFooter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesScreen;\r\n\r\nMessagesScreen.defaultProps = {};\r\n\r\nMessagesScreen.propTypes = {\r\n  selectedUser: PropTypes.object.isRequired,\r\n  loading: PropTypes.any,\r\n};\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport NoUserScreen from './NoUserScreen';\r\nimport MessagesScreen from './MessagesScreen';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst ChatContent = () => {\r\n  const {selectedUser} = useSelector(({chatApp}) => chatApp);\r\n  const {loading} = useSelector(({common}) => common);\r\n\r\n  return (\r\n    <>\r\n      {selectedUser ? (\r\n        <div className='h-100 d-flex flex-column'>\r\n          <MessagesScreen selectedUser={selectedUser} loading={loading} />\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={clsx(\r\n            styles.chatNoUserScreen,\r\n            'd-flex flex-column justify-content-center align-content-center text-center h-100 p-3',\r\n          )}>\r\n          <NoUserScreen />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatContent;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport ChatSideBar from './ChatSideBar';\r\nimport ChatContent from './ChatContent';\r\nimport {getConnectionList} from '../../../redux/actions/ChatApp';\r\nimport {useIntl} from 'react-intl';\r\nimport AppsContainer from '@crema/core/AppsContainer';\r\nimport AppPageMetadata from '@crema/core/AppPageMetadata';\r\n\r\nconst Chat = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getConnectionList());\r\n  }, [dispatch]);\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppsContainer\r\n      title={messages['chatApp.chat']}\r\n      sidebarContent={<ChatSideBar />}>\r\n      <AppPageMetadata title='Chat App' />\r\n      <ChatContent />\r\n    </AppsContainer>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Search = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"\n  }));\n});\nSearch.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSearch.defaultProps = {\n  color: 'currentColor',\n  size: '1em'\n};\nexport default Search;","import * as React from 'react';\nimport Tabs from '@restart/ui/Tabs';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst TabContainer = ({\n  transition,\n  ...props\n}) => /*#__PURE__*/_jsx(Tabs, { ...props,\n  transition: getTabTransitionComponent(transition)\n});\n\nTabContainer.displayName = 'TabContainer';\nexport default TabContainer;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/* eslint-disable react/no-unused-prop-types */\nconst propTypes = {\n  eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Content for the tab title.\n   */\n  title: PropTypes.node.isRequired,\n\n  /**\n   * The disabled state of the tab.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Class to pass to the underlying nav link.\n   */\n  tabClassName: PropTypes.string\n};\n\nconst Tab = () => {\n  throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly'); // Needed otherwise docs error out.\n\n  return /*#__PURE__*/_jsx(_Fragment, {});\n};\n\nTab.propTypes = propTypes;\nexport default Object.assign(Tab, {\n  Container: TabContainer,\n  Content: TabContent,\n  Pane: TabPane\n});","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","// extracted by mini-css-extract-plugin\nexport default {\"listFooter\":\"AppList_listFooter__Sh7ys\",\"loaderProgress\":\"AppList_loaderProgress__rZEBy\",\"emptyListContainer\":\"AppList_emptyListContainer__PsPAD\"};","// extracted by mini-css-extract-plugin\nexport default {\"appsWrap\":\"AppsContainer_appsWrap__zvw-4\",\"appsWrapHeader\":\"AppsContainer_appsWrapHeader__szimU\",\"menuBtn\":\"AppsContainer_menuBtn__hKXrB\",\"appsContainer\":\"AppsContainer_appsContainer__ASz5t\",\"appMainFixedFooter\":\"AppsContainer_appMainFixedFooter__1JfeO\",\"appMainFooter\":\"AppsContainer_appMainFooter__qShEH\",\"appsMainContent\":\"AppsContainer_appsMainContent__59PsM\",\"appsMainContentFull\":\"AppsContainer_appsMainContentFull__WJWdT\",\"appsContentContainer\":\"AppsContainer_appsContentContainer__ild+C\",\"fullView\":\"AppsContainer_fullView__vSr4E\",\"scrum-absolute\":\"AppsContainer_scrum-absolute__VqjBV\",\"react-trello-board\":\"AppsContainer_react-trello-board__OycKh\",\"scrum-row\":\"AppsContainer_scrum-row__PRpkM\",\"smooth-dnd-container\":\"AppsContainer_smooth-dnd-container__pGBR-\",\"horizontal\":\"AppsContainer_horizontal__f1Ksg\",\"scrum-col\":\"AppsContainer_scrum-col__Gi57q\",\"react-trello-lane\":\"AppsContainer_react-trello-lane__sS-jH\",\"scrum-board-list-header-card\":\"AppsContainer_scrum-board-list-header-card__+vk2n\",\"scroll-scrum-item\":\"AppsContainer_scroll-scrum-item__JP4Va\",\"vertical\":\"AppsContainer_vertical__KLU+e\",\"appsFooter\":\"AppsContainer_appsFooter__hOjz4\",\"appsHeader\":\"AppsContainer_appsHeader__bf5mr\",\"appsSidebar\":\"AppsContainer_appsSidebar__ZPAXS\",\"card\":\"AppsContainer_card__tJ4dA\",\"heightFull\":\"AppsContainer_heightFull__GtgHE\",\"appsOffcanvas\":\"AppsContainer_appsOffcanvas__psiRa\"};"],"names":["AppConfirmationModal","open","onDeny","onConfirm","modalTitle","paragraph","title","show","onHide","centered","Header","closeButton","Title","Body","Footer","variant","onClick","defaultProps","useSelector","common","loading","error","displayMessage","ListEmptyResult","loader","placeholder","actionTitle","content","className","clsx","styles","emptyListContainer","percent","type","style","marginTop","minWidth","id","description","prototype","PropTypes","action","getEmptyContainer","ListEmptyComponent","React","getFooterContainer","ListFooterComponent","ListView","renderItem","onEndReached","data","interval","duration","delay","useBottomScrollListener","AppAnimateGroup","animateStyle","flexDirection","flexWrap","length","map","item","index","border","ListFooter","footerText","loaderProgress","ProgressBar","listFooter","AppList","footerProps","props","settings","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","adaptiveHeight","medias","onClose","useState","isOpen","setOpen","useEffect","Modal","visible","footer","onCancel","initialSlide","slickGoTo","mime_type","startsWith","src","url","alt","name","children","rest","appsFooter","AppsHeader","appsHeader","isAppDrawerOpen","setAppDrawerOpen","sidebarContent","appsSidebar","Offcanvas","appsOffcanvas","closeIcon","Card","card","AppsContainer","useLayoutContext","navStyle","noContentAnimation","fullView","appsWrap","appsWrapHeader","appsWrapHeaderFull","Button","menuBtn","zIndex","overflow","appsContainer","appsMainContent","appsMainContentFull","cardStyle","minHeight","AppInfoView","smallBtn","onChange","AppIconBtn","e","isStarred","user","showStatus","showStatusActive","Dropdown","Menu","Item","photoURL","image","width","height","displayName","charAt","toUpperCase","email","getUserAvatar","backgroundColor","status","Toggle","selectedUser","dispatch","useDispatch","onSelectUser","styles2","username","ChatItemItem","viewBox","cx","cy","r","x","y","rx","ry","connectionListData","messages","useIntl","chatApp","AppScrollbar","lastMessage","message","chatListData","tabs","IntlMessages","UserTabs","listType","setListType","Tabs","activeKey","onSelect","Tab","tabClassName","eventKey","size","keywords","setKeywords","useAuthUser","connectionList","filter","includes","chatsList","sort","a","b","momentA","moment","time","format","getChatList","InputGroup","FormControl","value","target","Text","AddNewMessage","sendFileMessage","onSendMessage","currentMessage","setMessage","useDropzone","multiple","onDrop","acceptedFiles","message_type","MessageType","MEDIA","media","file","generateUniqueID","URL","createObjectURL","file_name","file_size","getRootProps","getInputProps","onClickSendMessage","Form","Control","event","onKeyPress","key","getMediaMessage","mediaImg","mediaVideo","mediaVideoIcon","mediaAttach","getFileSize","getMessage","setIndex","TEXT","slice","mediaCounter","SenderMessageItem","authUser","onClickEditMessage","isPreviousSender","deleteMessage","isLast","menuSend","chatMessageListItem","right","hideUserInfo","lastChatMessage","messageChatView","messageChatItem","messageTime","messageChat","edited","messageInfoEdit","messageChatSender","Image","roundedCircle","messageChatAvatar","overlay","trigger","messageMoreDropdownLink","ReceiverMessageItem","left","MessagesList","userMessages","animation","AppAnimates","SLIDEUPIN","messageData","sender","deleteConversation","onChangeStarred","clearChatHistory","isChecked","isDeleteModalOpen","setDeleteModalOpen","toggleDeleteModal","menuLabel","AppsStarredIcon","MessagesScreen","isEdit","setIsEdit","setIsChecked","selectedMessage","setSelectedMessage","_scrollBarRef","useRef","getConnectionMessages","channelId","current","scrollEl","getScrollElement","scrollTop","scrollHeight","checked","onDeleteConversation","onClearChatHistory","ref","messageId","onDeleteMessage","AppsFooter","fileMessage","onEditMessage","getConnectionList","AppPageMetadata","_extends","Object","assign","i","arguments","source","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Search","forwardRef","_ref","color","xmlns","fill","d","propTypes","TabContainer","transition","_jsx","getTabTransitionComponent","isRequired","disabled","Error","Container","Content","TabContent","Pane","TabPane","useWillUnmount","fn","onUnmount","valueRef","useUpdatedRef"],"sourceRoot":""}