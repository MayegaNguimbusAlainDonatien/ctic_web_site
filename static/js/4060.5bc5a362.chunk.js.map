{"version":3,"file":"static/js/4060.5bc5a362.chunk.js","mappings":"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","sources":["webpack://ctic/./src/@crema/core/AppCard/index.module.scss?c1e2","@crema/core/AppCard/index.js","@crema/core/AppComponentCard/highlightTheme.js","webpack://ctic/./src/@crema/core/AppComponentCard/index.module.scss?0c6d","@crema/core/AppAnimate/Expand.js","@crema/core/AppComponentCard/ComponentCardWithoutAnim.js","@crema/core/AppComponentCard/index.js","webpack://ctic/./src/@crema/core/AppComponentHeader/index.module.scss?ae62","@crema/core/AppComponentHeader/index.js","@crema/core/AppRowContainer/index.js","pages/components/Forms/FormsDemo.js","pages/components/Forms/FormControls.js","pages/components/Forms/Sizing.js","pages/components/Forms/Readonly.js","pages/components/Forms/ReadonlyPlain.js","pages/components/Forms/File.js","pages/components/Forms/Default.js","pages/components/Forms/ColorDemo.js","pages/components/Forms/Inline.js","pages/components/Forms/Without.js","pages/components/Forms/CustomizingDemo.js","pages/components/Forms/Range.js","pages/components/Forms/Floating.js","pages/components/Forms/TextareasDemo.js","pages/components/Forms/Rendering.js","pages/components/Forms/Groups.js","pages/components/Forms/Grid.js","pages/components/Forms/FormGrid.js","pages/components/Forms/Horizontal.js","pages/components/Forms/HorizontalForm.js","pages/components/Forms/Column.js","webpack://ctic/./src/pages/components/Forms/index.module.scss?26e2","pages/components/Forms/Auto.js","pages/components/Forms/AutoSizing.js","pages/components/Forms/Help.js","pages/components/Forms/Disabled.js","pages/components/Forms/DisabledForms.js","pages/components/Forms/ValidationDemo.js","pages/components/Forms/Libraries.js","pages/components/Forms/Tooltips.js","pages/components/Forms/Input.js","pages/components/Forms/Switches.js","pages/components/Forms/index.js","webpack://ctic/./src/pages/components/Forms/FormsDemo.js?b6bd","webpack://ctic/./src/pages/components/Forms/FormControls.js?fa27","webpack://ctic/./src/pages/components/Forms/Sizing.js?7e1a","webpack://ctic/./src/pages/components/Forms/ReadonlyPlain.js?09e7","webpack://ctic/./src/pages/components/Forms/ColorDemo.js?4580","webpack://ctic/./src/pages/components/Forms/Readonly.js?6ea9","webpack://ctic/./src/pages/components/Forms/Inline.js?1a7c","webpack://ctic/./src/pages/components/Forms/CustomizingDemo.js?013b","webpack://ctic/./src/pages/components/Forms/Range.js?7d76","webpack://ctic/./src/pages/components/Forms/Without.js?c074","webpack://ctic/./src/pages/components/Forms/Default.js?e630","webpack://ctic/./src/pages/components/Forms/Floating.js?2891","webpack://ctic/./src/pages/components/Forms/TextareasDemo.js?832f","webpack://ctic/./src/pages/components/Forms/Groups.js?280e","webpack://ctic/./src/pages/components/Forms/Grid.js?9427","webpack://ctic/./src/pages/components/Forms/Column.js?d781","webpack://ctic/./src/pages/components/Forms/File.js?7903","webpack://ctic/./src/pages/components/Forms/FormGrid.js?29bd","webpack://ctic/./src/pages/components/Forms/HorizontalForm.js?1778","webpack://ctic/./src/pages/components/Forms/Rendering.js?0499","webpack://ctic/./src/pages/components/Forms/Auto.js?acf3","webpack://ctic/./src/pages/components/Forms/AutoSizing.js?9676","webpack://ctic/./src/pages/components/Forms/Help.js?abd4","webpack://ctic/./src/pages/components/Forms/Disabled.js?2e98","webpack://ctic/./src/pages/components/Forms/Horizontal.js?35c5","webpack://ctic/./src/pages/components/Forms/DisabledForms.js?39f5","webpack://ctic/./src/pages/components/Forms/ValidationDemo.js?6ede","webpack://ctic/./src/pages/components/Forms/Libraries.js?ba0d","webpack://ctic/./src/pages/components/Forms/Input.js?384f","webpack://ctic/./src/pages/components/Forms/Switches.js?fa88","webpack://ctic/./src/pages/components/Forms/Tooltips.js?9e73","webpack://ctic/./src/@crema/core/AppRowContainer/index.module.scss?e727"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"AppCard_card__lJ6Uc\",\"heightFull\":\"AppCard_heightFull__T8kun\",\"cardBody\":\"AppCard_cardBody__Yq-vX\",\"cardHeader\":\"AppCard_cardHeader__Y+R+4\",\"cardTitle\":\"AppCard_cardTitle__HaekO\",\"action\":\"AppCard_action__sd-8L\",\"cardFooter\":\"AppCard_cardFooter__qAyRn\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport styles from './index.module.scss';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst AppCard = ({\r\n  title,\r\n  footer,\r\n  children,\r\n  className,\r\n  titleClass,\r\n  actionClass,\r\n  footerClass,\r\n  cardBodyClass,\r\n  cardHeaderClass,\r\n  action,\r\n  heightFull,\r\n  cardImg,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Card\r\n      className={clsx(\r\n        styles.card,\r\n        heightFull ? styles.heightFull : '',\r\n        className,\r\n      )}\r\n      title={title}\r\n      {...rest}>\r\n      {cardImg ? <Card.Img variant='top' src={cardImg} /> : null}\r\n      {title || action ? (\r\n        <Card.Header className={clsx(styles.cardHeader, cardHeaderClass)}>\r\n          {typeof title === 'object' ? (\r\n            title\r\n          ) : (\r\n            <Card.Title\r\n              className={clsx(\r\n                styles.cardTitle,\r\n                'mb-0 text-truncate',\r\n                titleClass,\r\n              )}>\r\n              {title}\r\n            </Card.Title>\r\n          )}\r\n          {typeof action === 'object' ? (\r\n            action\r\n          ) : (\r\n            <a\r\n              className={clsx(\r\n                styles.action,\r\n                'text-decoration-none ms-1',\r\n                actionClass,\r\n              )}\r\n              href='#'>\r\n              {action}\r\n            </a>\r\n          )}\r\n        </Card.Header>\r\n      ) : null}\r\n      <Card.Body className={clsx(styles.cardBody, cardBodyClass)}>\r\n        {children}\r\n      </Card.Body>\r\n      {footer ? (\r\n        <Card.Footer className={clsx(styles.cardFooter, footerClass)}>\r\n          {footer}\r\n        </Card.Footer>\r\n      ) : null}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppCard;\r\n\r\nAppCard.propTypes = {\r\n  action: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  footer: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  cardImg: PropTypes.string,\r\n  titleClass: PropTypes.string,\r\n  actionClass: PropTypes.string,\r\n  footerClass: PropTypes.string,\r\n  cardBodyClass: PropTypes.string,\r\n  cardHeaderClass: PropTypes.string,\r\n  heightFull: PropTypes.bool,\r\n};\r\n\r\nAppCard.defaultProps = {};\r\n","import {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nexport const highlightTheme = {\r\n  plain: {\r\n    color: '#F8F8F2',\r\n    fontFamily: 'Poppins',\r\n    fontWeight: Fonts.REGULAR,\r\n    backgroundColor: '#333333',\r\n  },\r\n  styles: [\r\n    {\r\n      types: ['prolog', 'constant', 'builtin'],\r\n      style: {\r\n        color: '#FFFFFF',\r\n      },\r\n    },\r\n    {\r\n      types: ['inserted', 'tag', 'function'],\r\n      style: {\r\n        color: '#E6DB74',\r\n      },\r\n    },\r\n    {\r\n      types: ['deleted'],\r\n      style: {\r\n        color: 'rgb(255, 85, 85)',\r\n      },\r\n    },\r\n    {\r\n      types: ['changed'],\r\n      style: {\r\n        color: 'rgb(255, 184, 108)',\r\n      },\r\n    },\r\n    {\r\n      types: ['punctuation', 'symbol'],\r\n      style: {\r\n        color: 'rgb(248, 248, 242)',\r\n      },\r\n    },\r\n    {\r\n      types: ['string', 'char', 'selector'],\r\n      style: {\r\n        color: '#98CD2F',\r\n      },\r\n    },\r\n    {\r\n      types: ['keyword', 'variable'],\r\n      style: {\r\n        color: '#65D4EA',\r\n        // fontStyle: \"italic\"\r\n      },\r\n    },\r\n    {\r\n      types: ['comment'],\r\n      style: {\r\n        color: 'rgb(98, 114, 164)',\r\n      },\r\n    },\r\n    {\r\n      types: ['attr-name'],\r\n      style: {\r\n        color: '#98CD2F',\r\n      },\r\n    },\r\n  ],\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"compCardTitleDescription\":\"AppComponentCard_compCardTitleDescription__SHL6w\",\"preTag\":\"AppComponentCard_preTag__0+EII\",\"componentRoot\":\"AppComponentCard_componentRoot__dgPU7\",\"codeIcon\":\"AppComponentCard_codeIcon__mUnRp\"};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// In firefox, setTimeout with duration 0 too short for browser notice the changes in dom\r\nconst initialTransitDuration = 20;\r\n\r\nconst PHASE = {\r\n  CLOSE: 'close',\r\n  CLOSING: 'closing',\r\n  CLOSED: 'closed',\r\n  OPEN: 'open',\r\n  OPENING: 'opening',\r\n  OPENED: 'opened',\r\n};\r\n\r\nconst GROUP = {\r\n  [PHASE.CLOSE]: PHASE.CLOSE,\r\n  [PHASE.CLOSED]: PHASE.CLOSE,\r\n  [PHASE.OPENING]: PHASE.CLOSE,\r\n\r\n  [PHASE.CLOSING]: PHASE.OPEN,\r\n  [PHASE.OPEN]: PHASE.OPEN,\r\n  [PHASE.OPENED]: PHASE.OPEN,\r\n};\r\n\r\nclass Expand extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: this.props.open ? PHASE.OPEN : PHASE.CLOSE,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps /* prevState */) {\r\n    if (prevProps.open !== this.props.open) {\r\n      this.toggle(this.props.open);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.clearDelay();\r\n  }\r\n\r\n  getClientHeight = () => this.refWrapper.scrollHeight;\r\n\r\n  getDefaultExpandStyle = () => {\r\n    const {status} = this.state;\r\n\r\n    switch (status) {\r\n      case PHASE.OPENING:\r\n      case PHASE.CLOSE:\r\n      case PHASE.CLOSED:\r\n        return {height: 0, opacity: 0, overflow: 'hidden'};\r\n      case PHASE.OPENED:\r\n      case PHASE.CLOSING:\r\n        return {height: this.getClientHeight(), opacity: 1, overflow: 'hidden'};\r\n      default:\r\n        return {height: 'auto', opacity: 1, overflow: 'unset'};\r\n    }\r\n  };\r\n\r\n  getExpandStyle = () => ({\r\n    ...this.getDefaultExpandStyle(),\r\n    ...this.props.styles[GROUP[this.state.status]],\r\n  });\r\n\r\n  getTransition = (attribute) =>\r\n    `${attribute} ${this.props.duration}ms ${this.props.easing}`;\r\n\r\n  getStyle() {\r\n    const transition = this.props.transitions.map(this.getTransition).join(',');\r\n\r\n    return {\r\n      ...this.getExpandStyle(),\r\n      transition,\r\n    };\r\n  }\r\n\r\n  updateStatus = (status) => this.setState({status});\r\n\r\n  delay = (fn, time) => {\r\n    this.timeout = setTimeout(fn, time);\r\n  };\r\n\r\n  clearDelay = () => {\r\n    if (this.timeout) {\r\n      clearTimeout(this.timeout);\r\n    }\r\n  };\r\n\r\n  transit = (entering, entered, enter) => {\r\n    const {duration} = this.props;\r\n\r\n    this.updateStatus(entering);\r\n\r\n    this.delay(() => {\r\n      this.updateStatus(entered);\r\n\r\n      this.delay(() => {\r\n        this.updateStatus(enter);\r\n      }, duration);\r\n    }, initialTransitDuration);\r\n  };\r\n\r\n  toggle = (open) => {\r\n    this.clearDelay();\r\n\r\n    if (open) {\r\n      this.transit(PHASE.OPENING, PHASE.OPENED, PHASE.OPEN);\r\n    } else {\r\n      this.transit(PHASE.CLOSING, PHASE.CLOSED, PHASE.CLOSE);\r\n    }\r\n  };\r\n\r\n  setRef = (ref) => {\r\n    this.refWrapper = ref;\r\n  };\r\n\r\n  render() {\r\n    const {className, children, tag: Tag} = this.props;\r\n\r\n    const childProps = {\r\n      className,\r\n      style: this.getStyle(),\r\n      ref: this.setRef,\r\n    };\r\n\r\n    return <Tag {...childProps}>{children}</Tag>;\r\n  }\r\n}\r\n\r\nExpand.propTypes = {\r\n  children: PropTypes.node,\r\n  open: PropTypes.bool,\r\n  duration: PropTypes.number,\r\n  easing: PropTypes.string,\r\n  className: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  transitions: PropTypes.arrayOf(PropTypes.string),\r\n  styles: PropTypes.shape({\r\n    [PHASE.OPEN]: PropTypes.object,\r\n    [PHASE.CLOSE]: PropTypes.object,\r\n  }),\r\n};\r\n\r\nExpand.defaultProps = {\r\n  open: false,\r\n  duration: 200,\r\n  easing: 'ease-in-out',\r\n  className: '',\r\n  tag: 'div',\r\n  transitions: ['height', 'opacity'],\r\n  styles: {},\r\n};\r\n\r\nexport default Expand;\r\n","import React, {useState} from 'react';\r\nimport Highlight, {defaultProps} from 'prism-react-renderer';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {highlightTheme} from './highlightTheme';\r\nimport AppScrollbar from '../AppScrollbar';\r\nimport styles from './index.module.scss';\r\nimport Expand from '../AppAnimate/Expand';\r\nimport AppCard from '../AppCard';\r\nimport {HiOutlineCode} from 'react-icons/hi';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst ComponentCardWithoutAnim = ({\r\n  title,\r\n  description,\r\n  className,\r\n  maxHeight,\r\n  component: Component,\r\n  source,\r\n}) => {\r\n  const [viewSource, setToggleViewSource] = useState(false);\r\n  return (\r\n    <AppCard\r\n      className={className}\r\n      title={\r\n        <div className='w-100'>\r\n          <div>{title}</div>\r\n          <div\r\n            className={clsx(styles.compCardTitleDescription, 'text-truncate')}>\r\n            {description}\r\n          </div>\r\n        </div>\r\n      }\r\n      extra={\r\n        source ? (\r\n          <Button\r\n            aria-label='view code'\r\n            shape='circle'\r\n            onClick={() => setToggleViewSource(!viewSource)}>\r\n            <HiOutlineCode className={styles.codeIcon} />\r\n          </Button>\r\n        ) : null\r\n      }>\r\n      <Expand open={viewSource}>\r\n        {source ? (\r\n          <AppScrollbar\r\n            style={{\r\n              borderRadius: 8,\r\n              background: '#333333',\r\n              height: 350,\r\n              maxHeight: 400,\r\n            }}>\r\n            <Highlight\r\n              {...defaultProps}\r\n              code={source}\r\n              language='jsx'\r\n              theme={highlightTheme}>\r\n              {({style, tokens, getLineProps, getTokenProps}) => (\r\n                <pre\r\n                  className={styles.preTag}\r\n                  style={{...style, maxHeight: 500}}>\r\n                  {tokens.map((line, i) => (\r\n                    <div key={i} {...getLineProps({line, key: i})}>\r\n                      {line.map((token, key) => (\r\n                        <span key={i} {...getTokenProps({token, key})} />\r\n                      ))}\r\n                    </div>\r\n                  ))}\r\n                </pre>\r\n              )}\r\n            </Highlight>\r\n          </AppScrollbar>\r\n        ) : null}\r\n      </Expand>\r\n      <AppScrollbar\r\n        style={{maxHeight: maxHeight}}\r\n        className='position-relative'>\r\n        <div\r\n          className={clsx(\r\n            styles.componentRoot,\r\n            'd-flex align-items-center justify-content-center w-100 p-3',\r\n          )}>\r\n          <Component />\r\n        </div>\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default ComponentCardWithoutAnim;\r\n\r\nComponentCardWithoutAnim.defaultProps = {\r\n  description: '',\r\n  maxHeight: 500,\r\n};\r\n\r\nComponentCardWithoutAnim.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n  source: PropTypes.node,\r\n  title: PropTypes.node.isRequired,\r\n  description: PropTypes.node,\r\n  maxHeight: PropTypes.number,\r\n  className: PropTypes.string,\r\n  size: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport ComponentCardWithoutAnim from './ComponentCardWithoutAnim';\r\n\r\nconst AppComponentCard = ({\r\n  title,\r\n  description,\r\n  className,\r\n  maxHeight,\r\n  component,\r\n  source,\r\n}) => {\r\n  return (\r\n    <AppAnimateGroup type='bottom' interval={100} duration={450}>\r\n      <ComponentCardWithoutAnim\r\n        title={title}\r\n        description={description}\r\n        className={className}\r\n        maxHeight={maxHeight}\r\n        component={component}\r\n        source={source}\r\n        key={'card'}\r\n      />\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppComponentCard;\r\n\r\nAppComponentCard.defaultProps = {\r\n  description: '',\r\n  maxHeight: 500,\r\n};\r\n\r\nAppComponentCard.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n  source: PropTypes.node,\r\n  title: PropTypes.node.isRequired,\r\n  description: PropTypes.node,\r\n  maxHeight: PropTypes.number,\r\n  className: PropTypes.string,\r\n  size: PropTypes.number,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"headerTitle\":\"AppComponentHeader_headerTitle__A9HGS\",\"titleH3\":\"AppComponentHeader_titleH3__owcvF\",\"textBase\":\"AppComponentHeader_textBase__Hw4ll\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst AppComponentHeader = ({title, description, refUrl}) => {\r\n  return (\r\n    <AppAnimateGroup type='top' height='auto' interval={100} duration={450}>\r\n      <div\r\n        className='d-flex flex-column pb-3 flex-sm-row justify-content-sm-between pt-xxl-3'\r\n        key={'header'}>\r\n        <div className={styles.headerTitle}>\r\n          <h3 className={styles.titleH3}>{title}</h3>\r\n          {description ? (\r\n            <h5 className={styles.textBase}>{description}</h5>\r\n          ) : null}\r\n        </div>\r\n        {refUrl ? (\r\n          <div style={{height: 30}}>\r\n            <Button variant='primary' href={refUrl} target='_blank'>\r\n              Reference\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppComponentHeader;\r\n\r\nAppComponentHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  refUrl: PropTypes.string,\r\n};\r\nAppComponentHeader.defaultProps = {};\r\n","import React from 'react';\r\nimport styles from './index.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport {Row} from 'react-bootstrap';\r\n\r\nconst AppRow = (props) => <Row className={styles.row} {...props} />;\r\n\r\nconst AppRowContainer = ({children, ...others}) => {\r\n  return (\r\n    <AppAnimateGroup\r\n      animateStyle={{flexDirection: 'row'}}\r\n      component={AppRow}\r\n      type='bottom'\r\n      ease='easeInOutQuart'\r\n      height='auto'\r\n      {...others}>\r\n      {children}\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppRowContainer;\r\nAppRowContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport {Button, Form} from 'react-bootstrap';\r\n\r\nconst FormsDemo = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <Form>\r\n        <Form.Group className='mb-3' controlId='formBasicEmail'>\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control type='email' placeholder='Enter email' />\r\n          <Form.Text className='text-muted'>\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group className='mb-3' controlId='formBasicPassword'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type='password' placeholder='Password' />\r\n        </Form.Group>\r\n        <Form.Group className='mb-3' controlId='formBasicCheckbox'>\r\n          <Form.Check type='checkbox' label='Check me out' />\r\n        </Form.Group>\r\n        <Button variant='primary' type='submit'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormsDemo;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst FormControls = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <Form>\r\n        <Form.Group className='mb-3' controlId='exampleForm.ControlInput1'>\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control type='email' placeholder='name@example.com' />\r\n        </Form.Group>\r\n        <Form.Group className='mb-3' controlId='exampleForm.ControlTextarea1'>\r\n          <Form.Label>Example textarea</Form.Label>\r\n          <Form.Control as='textarea' rows={3} />\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormControls;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst Sizing = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <Form.Control size='lg' type='text' placeholder='Large text' />\r\n      <br />\r\n      <Form.Control type='text' placeholder='Normal text' />\r\n      <br />\r\n      <Form.Control size='sm' type='text' placeholder='Small text' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sizing;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst Readonly = () => {\r\n  return (\r\n    <div>\r\n      <Form.Control type='text' placeholder='Readonly input here...' readOnly />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Readonly;\r\n","import React from 'react';\r\nimport {Col, Form, Row} from 'react-bootstrap';\r\n\r\nconst ReadonlyPlain = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <Form>\r\n        <Form.Group as={Row} className='mb-3' controlId='formPlaintextEmail'>\r\n          <Form.Label column sm='2'>\r\n            Email\r\n          </Form.Label>\r\n          <Col sm='10'>\r\n            <Form.Control plaintext readOnly defaultValue='email@example.com' />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} className='mb-3' controlId='formPlaintextPassword'>\r\n          <Form.Label column sm='2'>\r\n            Password\r\n          </Form.Label>\r\n          <Col sm='10'>\r\n            <Form.Control type='password' placeholder='Password' />\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReadonlyPlain;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst File = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <Form.Group controlId='formFile' className='mb-3'>\r\n        <Form.Label>Default file input example</Form.Label>\r\n        <Form.Control type='file' />\r\n      </Form.Group>\r\n      <Form.Group controlId='formFileMultiple' className='mb-3'>\r\n        <Form.Label>Multiple files input example</Form.Label>\r\n        <Form.Control type='file' multiple />\r\n      </Form.Group>\r\n      <Form.Group controlId='formFileDisabled' className='mb-3'>\r\n        <Form.Label>Disabled file input example</Form.Label>\r\n        <Form.Control type='file' disabled />\r\n      </Form.Group>\r\n      <Form.Group controlId='formFileSm' className='mb-3'>\r\n        <Form.Label>Small file input example</Form.Label>\r\n        <Form.Control type='file' size='sm' />\r\n      </Form.Group>\r\n      <Form.Group controlId='formFileLg' className='mb-3'>\r\n        <Form.Label>Large file input example</Form.Label>\r\n        <Form.Control type='file' size='lg' />\r\n      </Form.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default File;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst Default = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <Form>\r\n        {['checkbox', 'radio'].map((type) => (\r\n          <div key={`default-${type}`} className='mb-3'>\r\n            <Form.Check\r\n              type={type}\r\n              id={`default-${type}`}\r\n              label={`default ${type}`}\r\n            />\r\n\r\n            <Form.Check\r\n              disabled\r\n              type={type}\r\n              label={`disabled ${type}`}\r\n              id={`disabled-default-${type}`}\r\n            />\r\n          </div>\r\n        ))}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Default;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst ColorDemo = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <>\r\n        <Form.Label htmlFor='exampleColorInput'>Color picker</Form.Label>\r\n        <Form.Control\r\n          type='color'\r\n          id='exampleColorInput'\r\n          defaultValue='#563d7c'\r\n          title='Choose your color'\r\n        />\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorDemo;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst Inline = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <Form>\r\n        {['checkbox', 'radio'].map((type) => (\r\n          <div key={`inline-${type}`} className='mb-3'>\r\n            <Form.Check\r\n              inline\r\n              label='1'\r\n              name='group1'\r\n              type={type}\r\n              id={`inline-${type}-1`}\r\n            />\r\n            <Form.Check\r\n              inline\r\n              label='2'\r\n              name='group1'\r\n              type={type}\r\n              id={`inline-${type}-2`}\r\n            />\r\n            <Form.Check\r\n              inline\r\n              disabled\r\n              label='3 (disabled)'\r\n              type={type}\r\n              id={`inline-${type}-3`}\r\n            />\r\n          </div>\r\n        ))}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inline;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst Without = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <>\r\n        <Form.Check aria-label='option 1' />\r\n        <Form.Check type='radio' aria-label='radio 1' />\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Without;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst CustomizingDemo = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <Form>\r\n        {['checkbox', 'radio'].map((type) => (\r\n          <div key={type} className='mb-3'>\r\n            <Form.Check type={type} id={`check-api-${type}`}>\r\n              <Form.Check.Input type={type} isValid />\r\n              <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>\r\n              <Form.Control.Feedback type='valid'>\r\n                You did it!\r\n              </Form.Control.Feedback>\r\n            </Form.Check>\r\n          </div>\r\n        ))}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizingDemo;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst Range = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <>\r\n        <Form.Label>Range</Form.Label>\r\n        <Form.Range />\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Range;\r\n","import React from 'react';\r\nimport {FloatingLabel, Form} from 'react-bootstrap';\r\n\r\nconst Floating = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <>\r\n        <FloatingLabel\r\n          controlId='floatingInput'\r\n          label='Email address'\r\n          className='mb-3'>\r\n          <Form.Control type='email' placeholder='name@example.com' />\r\n        </FloatingLabel>\r\n        <FloatingLabel controlId='floatingPassword' label='Password'>\r\n          <Form.Control type='password' placeholder='Password' />\r\n        </FloatingLabel>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Floating;\r\n","import React from 'react';\r\nimport {FloatingLabel, Form} from 'react-bootstrap';\r\n\r\nconst TextareasDemo = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <>\r\n        <FloatingLabel\r\n          controlId='floatingTextarea'\r\n          label='Comments'\r\n          className='mb-3'>\r\n          <Form.Control as='textarea' placeholder='Leave a comment here' />\r\n        </FloatingLabel>\r\n        <FloatingLabel controlId='floatingTextarea2' label='Comments'>\r\n          <Form.Control\r\n            as='textarea'\r\n            placeholder='Leave a comment here'\r\n            style={{height: '100px'}}\r\n          />\r\n        </FloatingLabel>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextareasDemo;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst Rendering = () => {\r\n  return (\r\n    <div>\r\n      <>\r\n        <Form.Floating className='mb-3'>\r\n          <Form.Control\r\n            id='floatingInputCustom'\r\n            type='email'\r\n            placeholder='name@example.com'\r\n          />\r\n          <label htmlFor='floatingInputCustom'>Email address</label>\r\n        </Form.Floating>\r\n        <Form.Floating>\r\n          <Form.Control\r\n            id='floatingPasswordCustom'\r\n            type='password'\r\n            placeholder='Password'\r\n          />\r\n          <label htmlFor='floatingPasswordCustom'>Password</label>\r\n        </Form.Floating>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rendering;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst Groups = () => {\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Form.Group className='mb-3' controlId='formGroupEmail'>\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control type='email' placeholder='Enter email' />\r\n        </Form.Group>\r\n        <Form.Group className='mb-3' controlId='formGroupPassword'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type='password' placeholder='Password' />\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groups;\r\n","import React from 'react';\r\nimport {Col, Form, Row} from 'react-bootstrap';\r\n\r\nconst Grid = () => {\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Row>\r\n          <Col>\r\n            <Form.Control placeholder='First name' />\r\n          </Col>\r\n          <Col>\r\n            <Form.Control placeholder='Last name' />\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from 'react';\r\nimport {Button, Col, Form, Row} from 'react-bootstrap';\r\n\r\nconst FormGrid = () => {\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Row className='mb-3'>\r\n          <Form.Group as={Col} controlId='formGridEmail'>\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type='email' placeholder='Enter email' />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId='formGridPassword'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type='password' placeholder='Password' />\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Form.Group className='mb-3' controlId='formGridAddress1'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control placeholder='1234 Main St' />\r\n        </Form.Group>\r\n\r\n        <Form.Group className='mb-3' controlId='formGridAddress2'>\r\n          <Form.Label>Address 2</Form.Label>\r\n          <Form.Control placeholder='Apartment, studio, or floor' />\r\n        </Form.Group>\r\n\r\n        <Row className='mb-3'>\r\n          <Form.Group as={Col} controlId='formGridCity'>\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId='formGridState'>\r\n            <Form.Label>State</Form.Label>\r\n            <Form.Select defaultValue='Choose...'>\r\n              <option>Choose...</option>\r\n              <option>...</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId='formGridZip'>\r\n            <Form.Label>Zip</Form.Label>\r\n            <Form.Control />\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Form.Group className='mb-3' id='formGridCheckbox'>\r\n          <Form.Check type='checkbox' label='Check me out' />\r\n        </Form.Group>\r\n\r\n        <Button variant='primary' type='submit'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormGrid;\r\n","import React from 'react';\r\nimport {Button, Col, Form, Row} from 'react-bootstrap';\r\n\r\nconst Horizontal = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <Form>\r\n        <Form.Group as={Row} className='mb-3' controlId='formHorizontalEmail'>\r\n          <Form.Label column sm={2}>\r\n            Email\r\n          </Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control type='email' placeholder='Email' />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group\r\n          as={Row}\r\n          className='mb-3'\r\n          controlId='formHorizontalPassword'>\r\n          <Form.Label column sm={2}>\r\n            Password\r\n          </Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control type='password' placeholder='Password' />\r\n          </Col>\r\n        </Form.Group>\r\n        <fieldset>\r\n          <Form.Group as={Row} className='mb-3'>\r\n            <Form.Label as='legend' column sm={2}>\r\n              Radios\r\n            </Form.Label>\r\n            <Col sm={10}>\r\n              <Form.Check\r\n                type='radio'\r\n                label='first radio'\r\n                name='formHorizontalRadios'\r\n                id='formHorizontalRadios1'\r\n              />\r\n              <Form.Check\r\n                type='radio'\r\n                label='second radio'\r\n                name='formHorizontalRadios'\r\n                id='formHorizontalRadios2'\r\n              />\r\n              <Form.Check\r\n                type='radio'\r\n                label='third radio'\r\n                name='formHorizontalRadios'\r\n                id='formHorizontalRadios3'\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n        </fieldset>\r\n        <Form.Group as={Row} className='mb-3' controlId='formHorizontalCheck'>\r\n          <Col sm={{span: 10, offset: 2}}>\r\n            <Form.Check label='Remember me' />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} className='mb-3'>\r\n          <Col sm={{span: 10, offset: 2}}>\r\n            <Button type='submit'>Sign in</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Horizontal;\r\n","import React from 'react';\r\nimport {Col, Row, Form} from 'react-bootstrap';\r\n\r\nconst HorizontalForm = () => {\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      <>\r\n        <Row>\r\n          <Form.Label column='lg' lg={2}>\r\n            Large Text\r\n          </Form.Label>\r\n          <Col>\r\n            <Form.Control size='lg' type='text' placeholder='Large text' />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Form.Label column lg={2}>\r\n            Normal Text\r\n          </Form.Label>\r\n          <Col>\r\n            <Form.Control type='text' placeholder='Normal text' />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Form.Label column='sm' lg={2}>\r\n            Small Text\r\n          </Form.Label>\r\n          <Col>\r\n            <Form.Control size='sm' type='text' placeholder='Small text' />\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HorizontalForm;\r\n","import React from 'react';\r\nimport {Col, Form, Row} from 'react-bootstrap';\r\n\r\nconst Column = () => {\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Row>\r\n          <Col xs={7}>\r\n            <Form.Control placeholder='City' />\r\n          </Col>\r\n          <Col>\r\n            <Form.Control placeholder='State' />\r\n          </Col>\r\n          <Col>\r\n            <Form.Control placeholder='Zip' />\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputGroupText\":\"Forms_inputGroupText__lXIce\",\"inputFormControl\":\"Forms_inputFormControl__4sGQZ\"};","import React from 'react';\r\nimport {Button, Col, Form, FormControl, InputGroup, Row} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nconst Auto = () => {\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Row className='align-items-center'>\r\n          <Col xs='auto'>\r\n            <Form.Label htmlFor='inlineFormInput' visuallyHidden>\r\n              Name\r\n            </Form.Label>\r\n            <Form.Control\r\n              className='mb-2'\r\n              id='inlineFormInput'\r\n              placeholder='Jane Doe'\r\n            />\r\n          </Col>\r\n          <Col xs='auto'>\r\n            <Form.Label htmlFor='inlineFormInputGroup' visuallyHidden>\r\n              Username\r\n            </Form.Label>\r\n            <InputGroup className='mb-2'>\r\n              <InputGroup.Text className={styles.inputGroupText}>\r\n                @\r\n              </InputGroup.Text>\r\n              <FormControl\r\n                id='inlineFormInputGroup'\r\n                placeholder='Username'\r\n                className={styles.inputFormControl}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs='auto'>\r\n            <Form.Check\r\n              type='checkbox'\r\n              id='autoSizingCheck'\r\n              className='mb-2'\r\n              label='Remember me'\r\n            />\r\n          </Col>\r\n          <Col xs='auto'>\r\n            <Button type='submit' className='mb-2'>\r\n              Submit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auto;\r\n","import React from 'react';\r\nimport {Button, Col, Form, FormControl, InputGroup, Row} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nconst AutoSizing = () => {\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Row className='align-items-center'>\r\n          <Col xs='auto'>\r\n            <Form.Label htmlFor='inlineFormInput' visuallyHidden>\r\n              Name\r\n            </Form.Label>\r\n            <Form.Control\r\n              className='mb-2'\r\n              id='inlineFormInput'\r\n              placeholder='Jane Doe'\r\n            />\r\n          </Col>\r\n          <Col xs='auto'>\r\n            <Form.Label htmlFor='inlineFormInputGroup' visuallyHidden>\r\n              Username\r\n            </Form.Label>\r\n            <InputGroup className='mb-2'>\r\n              <InputGroup.Text className={styles.inputGroupText}>\r\n                @\r\n              </InputGroup.Text>\r\n              <FormControl\r\n                id='inlineFormInputGroup'\r\n                placeholder='Username'\r\n                className={styles.inputFormControl}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col xs='auto'>\r\n            <Form.Check\r\n              type='checkbox'\r\n              id='autoSizingCheck'\r\n              className='mb-2'\r\n              label='Remember me'\r\n            />\r\n          </Col>\r\n          <Col xs='auto'>\r\n            <Button type='submit' className='mb-2'>\r\n              Submit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoSizing;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst Help = () => {\r\n  return (\r\n    <div>\r\n      <>\r\n        <Form.Group className='mb-3'>\r\n          <Form.Label>Disabled input</Form.Label>\r\n          <Form.Control placeholder='Disabled input' disabled />\r\n        </Form.Group>\r\n        <Form.Group className='mb-3'>\r\n          <Form.Label>Disabled select menu</Form.Label>\r\n          <Form.Select disabled>\r\n            <option>Disabled select</option>\r\n          </Form.Select>\r\n        </Form.Group>\r\n        <Form.Group className='mb-3'>\r\n          <Form.Check type='checkbox' label=\"Can't check this\" disabled />\r\n        </Form.Group>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Help;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst Disabled = () => {\r\n  return (\r\n    <div>\r\n      <>\r\n        <Form.Group className='mb-3'>\r\n          <Form.Label>Disabled input</Form.Label>\r\n          <Form.Control placeholder='Disabled input' disabled />\r\n        </Form.Group>\r\n        <Form.Group className='mb-3'>\r\n          <Form.Label>Disabled select menu</Form.Label>\r\n          <Form.Select disabled>\r\n            <option>Disabled select</option>\r\n          </Form.Select>\r\n        </Form.Group>\r\n        <Form.Group className='mb-3'>\r\n          <Form.Check type='checkbox' label=\"Can't check this\" disabled />\r\n        </Form.Group>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Disabled;\r\n","import React from 'react';\r\nimport {Button, Form} from 'react-bootstrap';\r\n\r\nconst DisabledForms = () => {\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <fieldset disabled>\r\n          <Form.Group className='mb-3'>\r\n            <Form.Label htmlFor='disabledTextInput'>Disabled input</Form.Label>\r\n            <Form.Control id='disabledTextInput' placeholder='Disabled input' />\r\n          </Form.Group>\r\n          <Form.Group className='mb-3'>\r\n            <Form.Label htmlFor='disabledSelect'>\r\n              Disabled select menu\r\n            </Form.Label>\r\n            <Form.Select id='disabledSelect'>\r\n              <option>Disabled select</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n          <Form.Group className='mb-3'>\r\n            <Form.Check\r\n              type='checkbox'\r\n              id='disabledFieldsetCheck'\r\n              label=\"Can't check this\"\r\n            />\r\n          </Form.Group>\r\n          <Button type='submit'>Submit</Button>\r\n        </fieldset>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisabledForms;\r\n","import React, {useState} from 'react';\r\nimport {Button, Col, Form, InputGroup, Row} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\n\r\nfunction FormExample() {\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    setValidated(true);\r\n  };\r\n\r\n  return (\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n      <Row className='mb-3'>\r\n        <Form.Group as={Col} md='4' controlId='validationCustom01'>\r\n          <Form.Label>First name</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type='text'\r\n            placeholder='First name'\r\n            defaultValue='Mark'\r\n          />\r\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group as={Col} md='4' controlId='validationCustom02'>\r\n          <Form.Label>Last name</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type='text'\r\n            placeholder='Last name'\r\n            defaultValue='Otto'\r\n          />\r\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group as={Col} md='4' controlId='validationCustomUsername'>\r\n          <Form.Label>Username</Form.Label>\r\n          <InputGroup hasValidation>\r\n            <InputGroup.Text\r\n              id='inputGroupPrepend'\r\n              className={styles.inputGroupText}>\r\n              @\r\n            </InputGroup.Text>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Username'\r\n              aria-describedby='inputGroupPrepend'\r\n              className={styles.inputFormControl}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type='invalid'>\r\n              Please choose a username.\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n      </Row>\r\n      <Row className='mb-3'>\r\n        <Form.Group as={Col} md='6' controlId='validationCustom03'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control type='text' placeholder='City' required />\r\n          <Form.Control.Feedback type='invalid'>\r\n            Please provide a valid city.\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group as={Col} md='3' controlId='validationCustom04'>\r\n          <Form.Label>State</Form.Label>\r\n          <Form.Control type='text' placeholder='State' required />\r\n          <Form.Control.Feedback type='invalid'>\r\n            Please provide a valid state.\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group as={Col} md='3' controlId='validationCustom05'>\r\n          <Form.Label>Zip</Form.Label>\r\n          <Form.Control type='text' placeholder='Zip' required />\r\n          <Form.Control.Feedback type='invalid'>\r\n            Please provide a valid zip.\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Row>\r\n      <Form.Group className='mb-3'>\r\n        <Form.Check\r\n          required\r\n          label='Agree to terms and conditions'\r\n          feedback='You must agree before submitting.'\r\n          feedbackType='invalid'\r\n        />\r\n      </Form.Group>\r\n      <Button type='submit'>Submit form</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst ValidationDemo = () => {\r\n  return (\r\n    <div>\r\n      <FormExample />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ValidationDemo;\r\nFormExample.propTypes = {\r\n  validated: PropTypes.any,\r\n  setValidated: PropTypes.any,\r\n};\r\n","import React from 'react';\r\nimport {Button, Col, Form, InputGroup, Row} from 'react-bootstrap';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport styles from './index.module.scss';\r\n\r\nconst schema = yup.object().shape({\r\n  firstName: yup.string().required(),\r\n  lastName: yup.string().required(),\r\n  username: yup.string().required(),\r\n  city: yup.string().required(),\r\n  state: yup.string().required(),\r\n  zip: yup.string().required(),\r\n  terms: yup.bool().required().oneOf([true], 'Terms must be accepted'),\r\n});\r\n\r\nfunction FormExample() {\r\n  return (\r\n    <Formik\r\n      validationSchema={schema}\r\n      onSubmit={console.log}\r\n      initialValues={{\r\n        firstName: 'Mark',\r\n        lastName: 'Otto',\r\n        username: '',\r\n        city: '',\r\n        state: '',\r\n        zip: '',\r\n        terms: false,\r\n      }}>\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        handleBlur,\r\n        values,\r\n        touched,\r\n        isValid,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Row className='mb-3'>\r\n            <Form.Group as={Col} md='4' controlId='validationFormik01'>\r\n              <Form.Label>First name</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                name='firstName'\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n                isValid={touched.firstName && !errors.firstName}\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md='4' controlId='validationFormik02'>\r\n              <Form.Label>Last name</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                name='lastName'\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n                isValid={touched.lastName && !errors.lastName}\r\n              />\r\n\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md='4' controlId='validationFormikUsername'>\r\n              <Form.Label>Username</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <InputGroup.Text\r\n                  id='inputGroupPrepend'\r\n                  className={styles.inputGroupText}>\r\n                  @\r\n                </InputGroup.Text>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Username'\r\n                  aria-describedby='inputGroupPrepend'\r\n                  name='username'\r\n                  value={values.username}\r\n                  onChange={handleChange}\r\n                  className={styles.inputFormControl}\r\n                  isInvalid={!!errors.username}\r\n                />\r\n                <Form.Control.Feedback type='invalid'>\r\n                  {errors.username}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Row>\r\n          <Row className='mb-3'>\r\n            <Form.Group as={Col} md='6' controlId='validationFormik03'>\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='City'\r\n                name='city'\r\n                value={values.city}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.city}\r\n              />\r\n\r\n              <Form.Control.Feedback type='invalid'>\r\n                {errors.city}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md='3' controlId='validationFormik04'>\r\n              <Form.Label>State</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='State'\r\n                name='state'\r\n                value={values.state}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.state}\r\n              />\r\n              <Form.Control.Feedback type='invalid'>\r\n                {errors.state}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md='3' controlId='validationFormik05'>\r\n              <Form.Label>Zip</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Zip'\r\n                name='zip'\r\n                value={values.zip}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.zip}\r\n              />\r\n\r\n              <Form.Control.Feedback type='invalid'>\r\n                {errors.zip}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Row>\r\n          <Form.Group className='mb-3'>\r\n            <Form.Check\r\n              required\r\n              name='terms'\r\n              label='Agree to terms and conditions'\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.terms}\r\n              feedback={errors.terms}\r\n              feedbackType='invalid'\r\n              id='validationFormik0'\r\n            />\r\n          </Form.Group>\r\n          <Button type='submit'>Submit form</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nconst Libraries = () => {\r\n  return (\r\n    <div>\r\n      <FormExample />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Libraries;\r\n","import React from 'react';\r\nimport {Button, Col, Form, InputGroup, Row} from 'react-bootstrap';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n  firstName: yup.string().required(),\r\n  lastName: yup.string().required(),\r\n  username: yup.string().required(),\r\n  city: yup.string().required(),\r\n  state: yup.string().required(),\r\n  zip: yup.string().required(),\r\n  file: yup.mixed().required(),\r\n  terms: yup.bool().required().oneOf([true], 'terms must be accepted'),\r\n});\r\n\r\nfunction FormExample() {\r\n  return (\r\n    <Formik\r\n      validationSchema={schema}\r\n      onSubmit={console.log}\r\n      initialValues={{\r\n        firstName: 'Mark',\r\n        lastName: 'Otto',\r\n        username: '',\r\n        city: '',\r\n        state: '',\r\n        zip: '',\r\n        file: null,\r\n        terms: false,\r\n      }}>\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        handleBlur,\r\n        values,\r\n        touched,\r\n        isValid,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Row className='mb-3'>\r\n            <Form.Group\r\n              as={Col}\r\n              md='4'\r\n              controlId='validationFormik101'\r\n              className='position-relative'>\r\n              <Form.Label>First name</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                name='firstName'\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n                isValid={touched.firstName && !errors.firstName}\r\n              />\r\n              <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group\r\n              as={Col}\r\n              md='4'\r\n              controlId='validationFormik102'\r\n              className='position-relative'>\r\n              <Form.Label>Last name</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                name='lastName'\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n                isValid={touched.lastName && !errors.lastName}\r\n              />\r\n\r\n              <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md='4' controlId='validationFormikUsername2'>\r\n              <Form.Label>Username</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <InputGroup.Text id='inputGroupPrepend'>@</InputGroup.Text>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Username'\r\n                  aria-describedby='inputGroupPrepend'\r\n                  name='username'\r\n                  value={values.username}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.username}\r\n                />\r\n                <Form.Control.Feedback type='invalid' tooltip>\r\n                  {errors.username}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Row>\r\n          <Row className='mb-3'>\r\n            <Form.Group\r\n              as={Col}\r\n              md='6'\r\n              controlId='validationFormik103'\r\n              className='position-relative'>\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='City'\r\n                name='city'\r\n                value={values.city}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.city}\r\n              />\r\n\r\n              <Form.Control.Feedback type='invalid' tooltip>\r\n                {errors.city}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group\r\n              as={Col}\r\n              md='3'\r\n              controlId='validationFormik104'\r\n              className='position-relative'>\r\n              <Form.Label>State</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='State'\r\n                name='state'\r\n                value={values.state}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.state}\r\n              />\r\n              <Form.Control.Feedback type='invalid' tooltip>\r\n                {errors.state}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group\r\n              as={Col}\r\n              md='3'\r\n              controlId='validationFormik105'\r\n              className='position-relative'>\r\n              <Form.Label>Zip</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Zip'\r\n                name='zip'\r\n                value={values.zip}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.zip}\r\n              />\r\n\r\n              <Form.Control.Feedback type='invalid' tooltip>\r\n                {errors.zip}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Row>\r\n          <Form.Group className='position-relative mb-3'>\r\n            <Form.Label>File</Form.Label>\r\n            <Form.Control\r\n              type='file'\r\n              required\r\n              name='file'\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.file}\r\n            />\r\n            <Form.Control.Feedback type='invalid' tooltip>\r\n              {errors.file}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className='position-relative mb-3'>\r\n            <Form.Check\r\n              required\r\n              name='terms'\r\n              label='Agree to terms and conditions'\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.terms}\r\n              feedback={errors.terms}\r\n              feedbackType='invalid'\r\n              id='validationFormik106'\r\n              feedbackTooltip\r\n            />\r\n          </Form.Group>\r\n          <Button type='submit'>Submit form</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nconst Tooltips = () => {\r\n  return <FormExample />;\r\n};\r\n\r\nexport default Tooltips;\r\n","import React from 'react';\r\nimport {InputGroup, Form} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nconst Input = () => {\r\n  return (\r\n    <div>\r\n      <InputGroup hasValidation>\r\n        <InputGroup.Text className={styles.inputGroupText}>@</InputGroup.Text>\r\n        <Form.Control\r\n          type='text'\r\n          required\r\n          isInvalid\r\n          className={styles.inputFormControl}\r\n        />\r\n        <Form.Control.Feedback type='invalid'>\r\n          Please choose a username.\r\n        </Form.Control.Feedback>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nconst Switches = () => {\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Form.Check\r\n          type='switch'\r\n          id='custom-switch'\r\n          label='Check this switch'\r\n        />\r\n        <Form.Check\r\n          disabled\r\n          type='switch'\r\n          label='disabled switch'\r\n          id='disabled-custom-switch'\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Switches;\r\n","import React from 'react';\r\nimport AppComponentHeader from '@crema/core/AppComponentHeader';\r\nimport AppRowContainer from '@crema/core/AppRowContainer';\r\nimport {Col} from 'react-bootstrap';\r\nimport AppComponentCard from '@crema/core/AppComponentCard';\r\n\r\nimport FormsDemo from './FormsDemo';\r\nimport FormsDemoSource from '!raw-loader!./FormsDemo';\r\nimport FormControls from './FormControls';\r\nimport FormControlsSource from '!raw-loader!./FormControls';\r\nimport Sizing from './Sizing';\r\nimport SizingSource from '!raw-loader!./Sizing';\r\nimport Readonly from './Readonly';\r\nimport ReadonlySource from '!raw-loader!./Readonly';\r\nimport ReadonlyPlain from './ReadonlyPlain';\r\nimport ReadonlyPlainSource from '!raw-loader!./ReadonlyPlain';\r\nimport File from './File';\r\nimport FileSource from '!raw-loader!./File';\r\nimport Default from './Default';\r\nimport DefaultSource from '!raw-loader!./Default';\r\nimport ColorDemo from './ColorDemo';\r\nimport ColorDemoSource from '!raw-loader!./ColorDemo';\r\nimport Inline from './Inline';\r\nimport InlineSource from '!raw-loader!./Inline';\r\nimport Without from './Without';\r\nimport WithoutSource from '!raw-loader!./Without';\r\nimport CustomizingDemo from './CustomizingDemo';\r\nimport CustomizingDemoSource from '!raw-loader!./CustomizingDemo';\r\nimport Range from './Range';\r\nimport RangeSource from '!raw-loader!./Range';\r\nimport Floating from './Floating';\r\nimport FloatingSource from '!raw-loader!./Floating';\r\nimport TextareasDemo from './TextareasDemo';\r\nimport TextareasDemoSource from '!raw-loader!./TextareasDemo';\r\nimport Rendering from './Rendering';\r\nimport RenderingSource from '!raw-loader!./Rendering';\r\nimport Groups from './Groups';\r\nimport GroupsSource from '!raw-loader!./Groups';\r\nimport Grid from './Grid';\r\nimport GridSource from '!raw-loader!./Grid';\r\nimport FormGrid from './FormGrid';\r\nimport FormGridSource from '!raw-loader!./FormGrid';\r\nimport Horizontal from './Horizontal';\r\nimport HorizontalSource from '!raw-loader!./Horizontal';\r\nimport HorizontalForm from './HorizontalForm';\r\nimport HorizontalFormSource from '!raw-loader!./HorizontalForm';\r\nimport Column from './Column';\r\nimport ColumnSource from '!raw-loader!./Column';\r\nimport Auto from './Auto';\r\nimport AutoSource from '!raw-loader!./Auto';\r\nimport AutoSizing from './AutoSizing';\r\nimport AutoSizingSource from '!raw-loader!./AutoSizing';\r\nimport Help from './Help';\r\nimport HelpSource from '!raw-loader!./Help';\r\nimport Disabled from './Disabled';\r\nimport DisabledSource from '!raw-loader!./Disabled';\r\nimport DisabledForms from './DisabledForms';\r\nimport DisabledFormsSource from '!raw-loader!./DisabledForms';\r\nimport ValidationDemo from './ValidationDemo';\r\nimport ValidationDemoSource from '!raw-loader!./ValidationDemo';\r\nimport Libraries from './Libraries';\r\nimport LibrariesSource from '!raw-loader!./Libraries';\r\nimport Tooltips from './Tooltips';\r\nimport TooltipsSource from '!raw-loader!./Tooltips';\r\nimport Input from './Input';\r\nimport InputSource from '!raw-loader!./Input';\r\nimport Switches from './Switches';\r\nimport SwitchesSource from '!raw-loader!./Switches';\r\n\r\nconst Forms = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Forms'\r\n        description=''\r\n        refUrl='https://react-bootstrap.github.io/components/forms/'\r\n      />\r\n\r\n      <AppRowContainer>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Forms Demo'\r\n            component={FormsDemo}\r\n            source={FormsDemoSource}\r\n            noScrollbar\r\n            description='The <FormControl> component renders a form control with Bootstrap styling.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Form Controls'\r\n            component={FormControls}\r\n            source={FormControlsSource}\r\n            noScrollbar\r\n            description='For textual form controls—like inputs and textareas—use the FormControl component. FormControl adds some additional styles for general appearance, focus state, sizing, and more.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Sizing'\r\n            component={Sizing}\r\n            source={SizingSource}\r\n            noScrollbar\r\n            description='Use size on <FormControl> and <FormLabel> to change the size of inputs and labels respectively.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Readonly plain text'\r\n            component={ReadonlyPlain}\r\n            source={ReadonlyPlainSource}\r\n            noScrollbar\r\n            description='If you want to have readonly elements in your form styled as plain text, use the plaintext prop on FormControls to remove the default form field styling and preserve the correct margin and padding.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Color'\r\n            component={ColorDemo}\r\n            source={ColorDemoSource}\r\n            noScrollbar\r\n            description=''\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Readonly'\r\n            component={Readonly}\r\n            source={ReadonlySource}\r\n            noScrollbar\r\n            description='Add the readOnly prop on an input to prevent modification of the inputs value. Read-only inputs appear lighter (just like disabled inputs), but retain the standard cursor. '\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Inline'\r\n            component={Inline}\r\n            source={InlineSource}\r\n            noScrollbar\r\n            description='Group checkboxes or radios on the same horizontal row by adding the inline prop.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Customizing'\r\n            component={CustomizingDemo}\r\n            source={CustomizingDemoSource}\r\n            noScrollbar\r\n            description='When you need tighter control, or want to customize how the FormCheck component renders, it may better to use its constituent parts directly.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Range'\r\n            component={Range}\r\n            source={RangeSource}\r\n            noScrollbar\r\n            description='Create custom <input type=\"range\"> controls with<FormRange>. The track (the background) and thumb (the value) are both styled to appear the same across browsers.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Without labels'\r\n            component={Without}\r\n            source={WithoutSource}\r\n            noScrollbar\r\n            description='When you render a FormCheck without a label (no children) some additional styling is applied to keep the inputs from collapsing. Remember to add an aria-label when omitting labels!'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Default'\r\n            component={Default}\r\n            source={DefaultSource}\r\n            noScrollbar\r\n            description='By default, any number of checkboxes and radios that are immediate sibling will be vertically stacked and appropriately spaced with FormCheck.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Floating labels'\r\n            component={Floating}\r\n            source={FloatingSource}\r\n            noScrollbar\r\n            description='Wrap a <Form.Control> element in <FloatingLabel> to enable floating labels with Bootstrap’s textual form fields.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Textareas'\r\n            component={TextareasDemo}\r\n            source={TextareasDemoSource}\r\n            noScrollbar\r\n            description='By default, <textarea>s will be the same height as <input>s. To set a custom height on your <textarea>, do not use the rows attribute.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Form groups'\r\n            component={Groups}\r\n            source={GroupsSource}\r\n            noScrollbar\r\n            description='You also add the controlId prop to accessibly wire the nested label and input together via the id.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Form grid'\r\n            component={Grid}\r\n            source={GridSource}\r\n            noScrollbar\r\n            description='You also add the controlId prop to accessibly wire the nested label and input together via the id.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Column sizing'\r\n            component={Column}\r\n            source={ColumnSource}\r\n            noScrollbar\r\n            description='As shown in the previous examples, our grid system allows you to place any number of <Col>s within a <Row>.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='File input'\r\n            component={File}\r\n            source={FileSource}\r\n            noScrollbar\r\n            description=''\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Form Grid'\r\n            component={FormGrid}\r\n            source={FormGridSource}\r\n            noScrollbar\r\n            description='More complex layouts can also be created with the grid system.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Horizontal form label sizing'\r\n            component={HorizontalForm}\r\n            source={HorizontalFormSource}\r\n            noScrollbar\r\n            description='You can size the <FormLabel> using the column prop as shown.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Customizing rendering'\r\n            component={Rendering}\r\n            source={RenderingSource}\r\n            noScrollbar\r\n            description='If you need greater control over the rendering, use the <FormFloating> component to wrap your input and label.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Auto'\r\n            component={Auto}\r\n            source={AutoSource}\r\n            noScrollbar\r\n            description='The example below uses a flexbox utility to vertically center the contents and changes <Col> to <Col xs=\"auto\"> so that your columns only take up as much space as needed. Put another way, the column sizes itself based on on the contents.'\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Auto Sizing'\r\n            component={AutoSizing}\r\n            source={AutoSizingSource}\r\n            noScrollbar\r\n            description='You can then remix that once again with size-specific column classes.'\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Help text'\r\n            component={Help}\r\n            source={HelpSource}\r\n            noScrollbar\r\n            description='Help text below inputs can be styled with <Form.Text>. '\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Disabled'\r\n            component={Disabled}\r\n            source={DisabledSource}\r\n            noScrollbar\r\n            description='Add the disabled boolean attribute on an input to prevent user interactions and make it appear lighter.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Horizontal form'\r\n            component={Horizontal}\r\n            source={HorizontalSource}\r\n            noScrollbar\r\n            description=''\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Disabled Forms'\r\n            component={DisabledForms}\r\n            source={DisabledFormsSource}\r\n            noScrollbar\r\n            description='Add the disabled attribute to a <fieldset> to disable all the controls within.'\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Validation'\r\n            component={ValidationDemo}\r\n            source={ValidationDemoSource}\r\n            noScrollbar\r\n            description='Provide valuable, actionable feedback to your users with form validation feedback.'\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Form libraries and server-rendered styles'\r\n            component={Libraries}\r\n            source={LibrariesSource}\r\n            noScrollbar\r\n            description='Its often beneficial (especially in React) to handle form validation via a library like Formik, or react-formal.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Input'\r\n            component={Input}\r\n            source={InputSource}\r\n            noScrollbar\r\n            description='To properly show rounded corners in an <InputGroup> with validation, the <InputGroup> requires the hasValidation prop.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Switches'\r\n            component={Switches}\r\n            source={SwitchesSource}\r\n            noScrollbar\r\n            description='To properly show rounded corners in an <InputGroup> with validation, the <InputGroup> requires the hasValidation prop.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Tooltips'\r\n            component={Tooltips}\r\n            source={TooltipsSource}\r\n            noScrollbar\r\n            description='Provide valuable, actionable feedback to your users with form validation feedback.'\r\n          />\r\n        </Col>\r\n      </AppRowContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Forms;\r\n","export default \"import React from 'react';\\r\\nimport {Button, Form} from 'react-bootstrap';\\r\\n\\r\\nconst FormsDemo = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <Form>\\r\\n        <Form.Group className='mb-3' controlId='formBasicEmail'>\\r\\n          <Form.Label>Email address</Form.Label>\\r\\n          <Form.Control type='email' placeholder='Enter email' />\\r\\n          <Form.Text className='text-muted'>\\r\\n            We'll never share your email with anyone else.\\r\\n          </Form.Text>\\r\\n        </Form.Group>\\r\\n\\r\\n        <Form.Group className='mb-3' controlId='formBasicPassword'>\\r\\n          <Form.Label>Password</Form.Label>\\r\\n          <Form.Control type='password' placeholder='Password' />\\r\\n        </Form.Group>\\r\\n        <Form.Group className='mb-3' controlId='formBasicCheckbox'>\\r\\n          <Form.Check type='checkbox' label='Check me out' />\\r\\n        </Form.Group>\\r\\n        <Button variant='primary' type='submit'>\\r\\n          Submit\\r\\n        </Button>\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default FormsDemo;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst FormControls = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <Form>\\r\\n        <Form.Group className='mb-3' controlId='exampleForm.ControlInput1'>\\r\\n          <Form.Label>Email address</Form.Label>\\r\\n          <Form.Control type='email' placeholder='name@example.com' />\\r\\n        </Form.Group>\\r\\n        <Form.Group className='mb-3' controlId='exampleForm.ControlTextarea1'>\\r\\n          <Form.Label>Example textarea</Form.Label>\\r\\n          <Form.Control as='textarea' rows={3} />\\r\\n        </Form.Group>\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default FormControls;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst Sizing = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <Form.Control size='lg' type='text' placeholder='Large text' />\\r\\n      <br />\\r\\n      <Form.Control type='text' placeholder='Normal text' />\\r\\n      <br />\\r\\n      <Form.Control size='sm' type='text' placeholder='Small text' />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Sizing;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Col, Form, Row} from 'react-bootstrap';\\r\\n\\r\\nconst ReadonlyPlain = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <Form>\\r\\n        <Form.Group as={Row} className='mb-3' controlId='formPlaintextEmail'>\\r\\n          <Form.Label column sm='2'>\\r\\n            Email\\r\\n          </Form.Label>\\r\\n          <Col sm='10'>\\r\\n            <Form.Control plaintext readOnly defaultValue='email@example.com' />\\r\\n          </Col>\\r\\n        </Form.Group>\\r\\n\\r\\n        <Form.Group as={Row} className='mb-3' controlId='formPlaintextPassword'>\\r\\n          <Form.Label column sm='2'>\\r\\n            Password\\r\\n          </Form.Label>\\r\\n          <Col sm='10'>\\r\\n            <Form.Control type='password' placeholder='Password' />\\r\\n          </Col>\\r\\n        </Form.Group>\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default ReadonlyPlain;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst ColorDemo = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <>\\r\\n        <Form.Label htmlFor='exampleColorInput'>Color picker</Form.Label>\\r\\n        <Form.Control\\r\\n          type='color'\\r\\n          id='exampleColorInput'\\r\\n          defaultValue='#563d7c'\\r\\n          title='Choose your color'\\r\\n        />\\r\\n      </>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default ColorDemo;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst Readonly = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Form.Control type='text' placeholder='Readonly input here...' readOnly />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Readonly;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst Inline = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <Form>\\r\\n        {['checkbox', 'radio'].map((type) => (\\r\\n          <div key={`inline-${type}`} className='mb-3'>\\r\\n            <Form.Check\\r\\n              inline\\r\\n              label='1'\\r\\n              name='group1'\\r\\n              type={type}\\r\\n              id={`inline-${type}-1`}\\r\\n            />\\r\\n            <Form.Check\\r\\n              inline\\r\\n              label='2'\\r\\n              name='group1'\\r\\n              type={type}\\r\\n              id={`inline-${type}-2`}\\r\\n            />\\r\\n            <Form.Check\\r\\n              inline\\r\\n              disabled\\r\\n              label='3 (disabled)'\\r\\n              type={type}\\r\\n              id={`inline-${type}-3`}\\r\\n            />\\r\\n          </div>\\r\\n        ))}\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Inline;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst CustomizingDemo = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <Form>\\r\\n        {['checkbox', 'radio'].map((type) => (\\r\\n          <div key={type} className='mb-3'>\\r\\n            <Form.Check type={type} id={`check-api-${type}`}>\\r\\n              <Form.Check.Input type={type} isValid />\\r\\n              <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>\\r\\n              <Form.Control.Feedback type='valid'>\\r\\n                You did it!\\r\\n              </Form.Control.Feedback>\\r\\n            </Form.Check>\\r\\n          </div>\\r\\n        ))}\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default CustomizingDemo;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst Range = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <>\\r\\n        <Form.Label>Range</Form.Label>\\r\\n        <Form.Range />\\r\\n      </>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Range;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst Without = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <>\\r\\n        <Form.Check aria-label='option 1' />\\r\\n        <Form.Check type='radio' aria-label='radio 1' />\\r\\n      </>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Without;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst Default = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <Form>\\r\\n        {['checkbox', 'radio'].map((type) => (\\r\\n          <div key={`default-${type}`} className='mb-3'>\\r\\n            <Form.Check\\r\\n              type={type}\\r\\n              id={`default-${type}`}\\r\\n              label={`default ${type}`}\\r\\n            />\\r\\n\\r\\n            <Form.Check\\r\\n              disabled\\r\\n              type={type}\\r\\n              label={`disabled ${type}`}\\r\\n              id={`disabled-default-${type}`}\\r\\n            />\\r\\n          </div>\\r\\n        ))}\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Default;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {FloatingLabel, Form} from 'react-bootstrap';\\r\\n\\r\\nconst Floating = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <>\\r\\n        <FloatingLabel\\r\\n          controlId='floatingInput'\\r\\n          label='Email address'\\r\\n          className='mb-3'>\\r\\n          <Form.Control type='email' placeholder='name@example.com' />\\r\\n        </FloatingLabel>\\r\\n        <FloatingLabel controlId='floatingPassword' label='Password'>\\r\\n          <Form.Control type='password' placeholder='Password' />\\r\\n        </FloatingLabel>\\r\\n      </>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Floating;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {FloatingLabel, Form} from 'react-bootstrap';\\r\\n\\r\\nconst TextareasDemo = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <>\\r\\n        <FloatingLabel\\r\\n          controlId='floatingTextarea'\\r\\n          label='Comments'\\r\\n          className='mb-3'>\\r\\n          <Form.Control as='textarea' placeholder='Leave a comment here' />\\r\\n        </FloatingLabel>\\r\\n        <FloatingLabel controlId='floatingTextarea2' label='Comments'>\\r\\n          <Form.Control\\r\\n            as='textarea'\\r\\n            placeholder='Leave a comment here'\\r\\n            style={{height: '100px'}}\\r\\n          />\\r\\n        </FloatingLabel>\\r\\n      </>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default TextareasDemo;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst Groups = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Form>\\r\\n        <Form.Group className='mb-3' controlId='formGroupEmail'>\\r\\n          <Form.Label>Email address</Form.Label>\\r\\n          <Form.Control type='email' placeholder='Enter email' />\\r\\n        </Form.Group>\\r\\n        <Form.Group className='mb-3' controlId='formGroupPassword'>\\r\\n          <Form.Label>Password</Form.Label>\\r\\n          <Form.Control type='password' placeholder='Password' />\\r\\n        </Form.Group>\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Groups;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Col, Form, Row} from 'react-bootstrap';\\r\\n\\r\\nconst Grid = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Form>\\r\\n        <Row>\\r\\n          <Col>\\r\\n            <Form.Control placeholder='First name' />\\r\\n          </Col>\\r\\n          <Col>\\r\\n            <Form.Control placeholder='Last name' />\\r\\n          </Col>\\r\\n        </Row>\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Grid;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Col, Form, Row} from 'react-bootstrap';\\r\\n\\r\\nconst Column = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Form>\\r\\n        <Row>\\r\\n          <Col xs={7}>\\r\\n            <Form.Control placeholder='City' />\\r\\n          </Col>\\r\\n          <Col>\\r\\n            <Form.Control placeholder='State' />\\r\\n          </Col>\\r\\n          <Col>\\r\\n            <Form.Control placeholder='Zip' />\\r\\n          </Col>\\r\\n        </Row>\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Column;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst File = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <Form.Group controlId='formFile' className='mb-3'>\\r\\n        <Form.Label>Default file input example</Form.Label>\\r\\n        <Form.Control type='file' />\\r\\n      </Form.Group>\\r\\n      <Form.Group controlId='formFileMultiple' className='mb-3'>\\r\\n        <Form.Label>Multiple files input example</Form.Label>\\r\\n        <Form.Control type='file' multiple />\\r\\n      </Form.Group>\\r\\n      <Form.Group controlId='formFileDisabled' className='mb-3'>\\r\\n        <Form.Label>Disabled file input example</Form.Label>\\r\\n        <Form.Control type='file' disabled />\\r\\n      </Form.Group>\\r\\n      <Form.Group controlId='formFileSm' className='mb-3'>\\r\\n        <Form.Label>Small file input example</Form.Label>\\r\\n        <Form.Control type='file' size='sm' />\\r\\n      </Form.Group>\\r\\n      <Form.Group controlId='formFileLg' className='mb-3'>\\r\\n        <Form.Label>Large file input example</Form.Label>\\r\\n        <Form.Control type='file' size='lg' />\\r\\n      </Form.Group>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default File;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, Col, Form, Row} from 'react-bootstrap';\\r\\n\\r\\nconst FormGrid = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Form>\\r\\n        <Row className='mb-3'>\\r\\n          <Form.Group as={Col} controlId='formGridEmail'>\\r\\n            <Form.Label>Email</Form.Label>\\r\\n            <Form.Control type='email' placeholder='Enter email' />\\r\\n          </Form.Group>\\r\\n\\r\\n          <Form.Group as={Col} controlId='formGridPassword'>\\r\\n            <Form.Label>Password</Form.Label>\\r\\n            <Form.Control type='password' placeholder='Password' />\\r\\n          </Form.Group>\\r\\n        </Row>\\r\\n\\r\\n        <Form.Group className='mb-3' controlId='formGridAddress1'>\\r\\n          <Form.Label>Address</Form.Label>\\r\\n          <Form.Control placeholder='1234 Main St' />\\r\\n        </Form.Group>\\r\\n\\r\\n        <Form.Group className='mb-3' controlId='formGridAddress2'>\\r\\n          <Form.Label>Address 2</Form.Label>\\r\\n          <Form.Control placeholder='Apartment, studio, or floor' />\\r\\n        </Form.Group>\\r\\n\\r\\n        <Row className='mb-3'>\\r\\n          <Form.Group as={Col} controlId='formGridCity'>\\r\\n            <Form.Label>City</Form.Label>\\r\\n            <Form.Control />\\r\\n          </Form.Group>\\r\\n\\r\\n          <Form.Group as={Col} controlId='formGridState'>\\r\\n            <Form.Label>State</Form.Label>\\r\\n            <Form.Select defaultValue='Choose...'>\\r\\n              <option>Choose...</option>\\r\\n              <option>...</option>\\r\\n            </Form.Select>\\r\\n          </Form.Group>\\r\\n\\r\\n          <Form.Group as={Col} controlId='formGridZip'>\\r\\n            <Form.Label>Zip</Form.Label>\\r\\n            <Form.Control />\\r\\n          </Form.Group>\\r\\n        </Row>\\r\\n\\r\\n        <Form.Group className='mb-3' id='formGridCheckbox'>\\r\\n          <Form.Check type='checkbox' label='Check me out' />\\r\\n        </Form.Group>\\r\\n\\r\\n        <Button variant='primary' type='submit'>\\r\\n          Submit\\r\\n        </Button>\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default FormGrid;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Col, Row, Form} from 'react-bootstrap';\\r\\n\\r\\nconst HorizontalForm = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <>\\r\\n        <Row>\\r\\n          <Form.Label column='lg' lg={2}>\\r\\n            Large Text\\r\\n          </Form.Label>\\r\\n          <Col>\\r\\n            <Form.Control size='lg' type='text' placeholder='Large text' />\\r\\n          </Col>\\r\\n        </Row>\\r\\n        <br />\\r\\n        <Row>\\r\\n          <Form.Label column lg={2}>\\r\\n            Normal Text\\r\\n          </Form.Label>\\r\\n          <Col>\\r\\n            <Form.Control type='text' placeholder='Normal text' />\\r\\n          </Col>\\r\\n        </Row>\\r\\n        <br />\\r\\n        <Row>\\r\\n          <Form.Label column='sm' lg={2}>\\r\\n            Small Text\\r\\n          </Form.Label>\\r\\n          <Col>\\r\\n            <Form.Control size='sm' type='text' placeholder='Small text' />\\r\\n          </Col>\\r\\n        </Row>\\r\\n      </>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default HorizontalForm;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst Rendering = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <>\\r\\n        <Form.Floating className='mb-3'>\\r\\n          <Form.Control\\r\\n            id='floatingInputCustom'\\r\\n            type='email'\\r\\n            placeholder='name@example.com'\\r\\n          />\\r\\n          <label htmlFor='floatingInputCustom'>Email address</label>\\r\\n        </Form.Floating>\\r\\n        <Form.Floating>\\r\\n          <Form.Control\\r\\n            id='floatingPasswordCustom'\\r\\n            type='password'\\r\\n            placeholder='Password'\\r\\n          />\\r\\n          <label htmlFor='floatingPasswordCustom'>Password</label>\\r\\n        </Form.Floating>\\r\\n      </>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Rendering;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, Col, Form, FormControl, InputGroup, Row} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nconst Auto = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Form>\\r\\n        <Row className='align-items-center'>\\r\\n          <Col xs='auto'>\\r\\n            <Form.Label htmlFor='inlineFormInput' visuallyHidden>\\r\\n              Name\\r\\n            </Form.Label>\\r\\n            <Form.Control\\r\\n              className='mb-2'\\r\\n              id='inlineFormInput'\\r\\n              placeholder='Jane Doe'\\r\\n            />\\r\\n          </Col>\\r\\n          <Col xs='auto'>\\r\\n            <Form.Label htmlFor='inlineFormInputGroup' visuallyHidden>\\r\\n              Username\\r\\n            </Form.Label>\\r\\n            <InputGroup className='mb-2'>\\r\\n              <InputGroup.Text className={styles.inputGroupText}>\\r\\n                @\\r\\n              </InputGroup.Text>\\r\\n              <FormControl\\r\\n                id='inlineFormInputGroup'\\r\\n                placeholder='Username'\\r\\n                className={styles.inputFormControl}\\r\\n              />\\r\\n            </InputGroup>\\r\\n          </Col>\\r\\n          <Col xs='auto'>\\r\\n            <Form.Check\\r\\n              type='checkbox'\\r\\n              id='autoSizingCheck'\\r\\n              className='mb-2'\\r\\n              label='Remember me'\\r\\n            />\\r\\n          </Col>\\r\\n          <Col xs='auto'>\\r\\n            <Button type='submit' className='mb-2'>\\r\\n              Submit\\r\\n            </Button>\\r\\n          </Col>\\r\\n        </Row>\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Auto;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, Col, Form, FormControl, InputGroup, Row} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nconst AutoSizing = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Form>\\r\\n        <Row className='align-items-center'>\\r\\n          <Col xs='auto'>\\r\\n            <Form.Label htmlFor='inlineFormInput' visuallyHidden>\\r\\n              Name\\r\\n            </Form.Label>\\r\\n            <Form.Control\\r\\n              className='mb-2'\\r\\n              id='inlineFormInput'\\r\\n              placeholder='Jane Doe'\\r\\n            />\\r\\n          </Col>\\r\\n          <Col xs='auto'>\\r\\n            <Form.Label htmlFor='inlineFormInputGroup' visuallyHidden>\\r\\n              Username\\r\\n            </Form.Label>\\r\\n            <InputGroup className='mb-2'>\\r\\n              <InputGroup.Text className={styles.inputGroupText}>\\r\\n                @\\r\\n              </InputGroup.Text>\\r\\n              <FormControl\\r\\n                id='inlineFormInputGroup'\\r\\n                placeholder='Username'\\r\\n                className={styles.inputFormControl}\\r\\n              />\\r\\n            </InputGroup>\\r\\n          </Col>\\r\\n          <Col xs='auto'>\\r\\n            <Form.Check\\r\\n              type='checkbox'\\r\\n              id='autoSizingCheck'\\r\\n              className='mb-2'\\r\\n              label='Remember me'\\r\\n            />\\r\\n          </Col>\\r\\n          <Col xs='auto'>\\r\\n            <Button type='submit' className='mb-2'>\\r\\n              Submit\\r\\n            </Button>\\r\\n          </Col>\\r\\n        </Row>\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default AutoSizing;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst Help = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <>\\r\\n        <Form.Group className='mb-3'>\\r\\n          <Form.Label>Disabled input</Form.Label>\\r\\n          <Form.Control placeholder='Disabled input' disabled />\\r\\n        </Form.Group>\\r\\n        <Form.Group className='mb-3'>\\r\\n          <Form.Label>Disabled select menu</Form.Label>\\r\\n          <Form.Select disabled>\\r\\n            <option>Disabled select</option>\\r\\n          </Form.Select>\\r\\n        </Form.Group>\\r\\n        <Form.Group className='mb-3'>\\r\\n          <Form.Check type='checkbox' label=\\\"Can't check this\\\" disabled />\\r\\n        </Form.Group>\\r\\n      </>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Help;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst Disabled = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <>\\r\\n        <Form.Group className='mb-3'>\\r\\n          <Form.Label>Disabled input</Form.Label>\\r\\n          <Form.Control placeholder='Disabled input' disabled />\\r\\n        </Form.Group>\\r\\n        <Form.Group className='mb-3'>\\r\\n          <Form.Label>Disabled select menu</Form.Label>\\r\\n          <Form.Select disabled>\\r\\n            <option>Disabled select</option>\\r\\n          </Form.Select>\\r\\n        </Form.Group>\\r\\n        <Form.Group className='mb-3'>\\r\\n          <Form.Check type='checkbox' label=\\\"Can't check this\\\" disabled />\\r\\n        </Form.Group>\\r\\n      </>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Disabled;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, Col, Form, Row} from 'react-bootstrap';\\r\\n\\r\\nconst Horizontal = () => {\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      <Form>\\r\\n        <Form.Group as={Row} className='mb-3' controlId='formHorizontalEmail'>\\r\\n          <Form.Label column sm={2}>\\r\\n            Email\\r\\n          </Form.Label>\\r\\n          <Col sm={10}>\\r\\n            <Form.Control type='email' placeholder='Email' />\\r\\n          </Col>\\r\\n        </Form.Group>\\r\\n\\r\\n        <Form.Group\\r\\n          as={Row}\\r\\n          className='mb-3'\\r\\n          controlId='formHorizontalPassword'>\\r\\n          <Form.Label column sm={2}>\\r\\n            Password\\r\\n          </Form.Label>\\r\\n          <Col sm={10}>\\r\\n            <Form.Control type='password' placeholder='Password' />\\r\\n          </Col>\\r\\n        </Form.Group>\\r\\n        <fieldset>\\r\\n          <Form.Group as={Row} className='mb-3'>\\r\\n            <Form.Label as='legend' column sm={2}>\\r\\n              Radios\\r\\n            </Form.Label>\\r\\n            <Col sm={10}>\\r\\n              <Form.Check\\r\\n                type='radio'\\r\\n                label='first radio'\\r\\n                name='formHorizontalRadios'\\r\\n                id='formHorizontalRadios1'\\r\\n              />\\r\\n              <Form.Check\\r\\n                type='radio'\\r\\n                label='second radio'\\r\\n                name='formHorizontalRadios'\\r\\n                id='formHorizontalRadios2'\\r\\n              />\\r\\n              <Form.Check\\r\\n                type='radio'\\r\\n                label='third radio'\\r\\n                name='formHorizontalRadios'\\r\\n                id='formHorizontalRadios3'\\r\\n              />\\r\\n            </Col>\\r\\n          </Form.Group>\\r\\n        </fieldset>\\r\\n        <Form.Group as={Row} className='mb-3' controlId='formHorizontalCheck'>\\r\\n          <Col sm={{span: 10, offset: 2}}>\\r\\n            <Form.Check label='Remember me' />\\r\\n          </Col>\\r\\n        </Form.Group>\\r\\n\\r\\n        <Form.Group as={Row} className='mb-3'>\\r\\n          <Col sm={{span: 10, offset: 2}}>\\r\\n            <Button type='submit'>Sign in</Button>\\r\\n          </Col>\\r\\n        </Form.Group>\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Horizontal;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, Form} from 'react-bootstrap';\\r\\n\\r\\nconst DisabledForms = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Form>\\r\\n        <fieldset disabled>\\r\\n          <Form.Group className='mb-3'>\\r\\n            <Form.Label htmlFor='disabledTextInput'>Disabled input</Form.Label>\\r\\n            <Form.Control id='disabledTextInput' placeholder='Disabled input' />\\r\\n          </Form.Group>\\r\\n          <Form.Group className='mb-3'>\\r\\n            <Form.Label htmlFor='disabledSelect'>\\r\\n              Disabled select menu\\r\\n            </Form.Label>\\r\\n            <Form.Select id='disabledSelect'>\\r\\n              <option>Disabled select</option>\\r\\n            </Form.Select>\\r\\n          </Form.Group>\\r\\n          <Form.Group className='mb-3'>\\r\\n            <Form.Check\\r\\n              type='checkbox'\\r\\n              id='disabledFieldsetCheck'\\r\\n              label=\\\"Can't check this\\\"\\r\\n            />\\r\\n          </Form.Group>\\r\\n          <Button type='submit'>Submit</Button>\\r\\n        </fieldset>\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default DisabledForms;\\r\\n\";","export default \"import React, {useState} from 'react';\\r\\nimport {Button, Col, Form, InputGroup, Row} from 'react-bootstrap';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nfunction FormExample() {\\r\\n  const [validated, setValidated] = useState(false);\\r\\n\\r\\n  const handleSubmit = (event) => {\\r\\n    const form = event.currentTarget;\\r\\n    if (form.checkValidity() === false) {\\r\\n      event.preventDefault();\\r\\n      event.stopPropagation();\\r\\n    }\\r\\n\\r\\n    setValidated(true);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\\r\\n      <Row className='mb-3'>\\r\\n        <Form.Group as={Col} md='4' controlId='validationCustom01'>\\r\\n          <Form.Label>First name</Form.Label>\\r\\n          <Form.Control\\r\\n            required\\r\\n            type='text'\\r\\n            placeholder='First name'\\r\\n            defaultValue='Mark'\\r\\n          />\\r\\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\\r\\n        </Form.Group>\\r\\n        <Form.Group as={Col} md='4' controlId='validationCustom02'>\\r\\n          <Form.Label>Last name</Form.Label>\\r\\n          <Form.Control\\r\\n            required\\r\\n            type='text'\\r\\n            placeholder='Last name'\\r\\n            defaultValue='Otto'\\r\\n          />\\r\\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\\r\\n        </Form.Group>\\r\\n        <Form.Group as={Col} md='4' controlId='validationCustomUsername'>\\r\\n          <Form.Label>Username</Form.Label>\\r\\n          <InputGroup hasValidation>\\r\\n            <InputGroup.Text\\r\\n              id='inputGroupPrepend'\\r\\n              className={styles.inputGroupText}>\\r\\n              @\\r\\n            </InputGroup.Text>\\r\\n            <Form.Control\\r\\n              type='text'\\r\\n              placeholder='Username'\\r\\n              aria-describedby='inputGroupPrepend'\\r\\n              className={styles.inputFormControl}\\r\\n              required\\r\\n            />\\r\\n            <Form.Control.Feedback type='invalid'>\\r\\n              Please choose a username.\\r\\n            </Form.Control.Feedback>\\r\\n          </InputGroup>\\r\\n        </Form.Group>\\r\\n      </Row>\\r\\n      <Row className='mb-3'>\\r\\n        <Form.Group as={Col} md='6' controlId='validationCustom03'>\\r\\n          <Form.Label>City</Form.Label>\\r\\n          <Form.Control type='text' placeholder='City' required />\\r\\n          <Form.Control.Feedback type='invalid'>\\r\\n            Please provide a valid city.\\r\\n          </Form.Control.Feedback>\\r\\n        </Form.Group>\\r\\n        <Form.Group as={Col} md='3' controlId='validationCustom04'>\\r\\n          <Form.Label>State</Form.Label>\\r\\n          <Form.Control type='text' placeholder='State' required />\\r\\n          <Form.Control.Feedback type='invalid'>\\r\\n            Please provide a valid state.\\r\\n          </Form.Control.Feedback>\\r\\n        </Form.Group>\\r\\n        <Form.Group as={Col} md='3' controlId='validationCustom05'>\\r\\n          <Form.Label>Zip</Form.Label>\\r\\n          <Form.Control type='text' placeholder='Zip' required />\\r\\n          <Form.Control.Feedback type='invalid'>\\r\\n            Please provide a valid zip.\\r\\n          </Form.Control.Feedback>\\r\\n        </Form.Group>\\r\\n      </Row>\\r\\n      <Form.Group className='mb-3'>\\r\\n        <Form.Check\\r\\n          required\\r\\n          label='Agree to terms and conditions'\\r\\n          feedback='You must agree before submitting.'\\r\\n          feedbackType='invalid'\\r\\n        />\\r\\n      </Form.Group>\\r\\n      <Button type='submit'>Submit form</Button>\\r\\n    </Form>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst ValidationDemo = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <FormExample />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default ValidationDemo;\\r\\nFormExample.propTypes = {\\r\\n  validated: PropTypes.any,\\r\\n  setValidated: PropTypes.any,\\r\\n};\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, Col, Form, InputGroup, Row} from 'react-bootstrap';\\r\\nimport {Formik} from 'formik';\\r\\nimport * as yup from 'yup';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nconst schema = yup.object().shape({\\r\\n  firstName: yup.string().required(),\\r\\n  lastName: yup.string().required(),\\r\\n  username: yup.string().required(),\\r\\n  city: yup.string().required(),\\r\\n  state: yup.string().required(),\\r\\n  zip: yup.string().required(),\\r\\n  terms: yup.bool().required().oneOf([true], 'Terms must be accepted'),\\r\\n});\\r\\n\\r\\nfunction FormExample() {\\r\\n  return (\\r\\n    <Formik\\r\\n      validationSchema={schema}\\r\\n      onSubmit={console.log}\\r\\n      initialValues={{\\r\\n        firstName: 'Mark',\\r\\n        lastName: 'Otto',\\r\\n        username: '',\\r\\n        city: '',\\r\\n        state: '',\\r\\n        zip: '',\\r\\n        terms: false,\\r\\n      }}>\\r\\n      {({\\r\\n        handleSubmit,\\r\\n        handleChange,\\r\\n        handleBlur,\\r\\n        values,\\r\\n        touched,\\r\\n        isValid,\\r\\n        errors,\\r\\n      }) => (\\r\\n        <Form noValidate onSubmit={handleSubmit}>\\r\\n          <Row className='mb-3'>\\r\\n            <Form.Group as={Col} md='4' controlId='validationFormik01'>\\r\\n              <Form.Label>First name</Form.Label>\\r\\n              <Form.Control\\r\\n                type='text'\\r\\n                name='firstName'\\r\\n                value={values.firstName}\\r\\n                onChange={handleChange}\\r\\n                isValid={touched.firstName && !errors.firstName}\\r\\n              />\\r\\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\\r\\n            </Form.Group>\\r\\n            <Form.Group as={Col} md='4' controlId='validationFormik02'>\\r\\n              <Form.Label>Last name</Form.Label>\\r\\n              <Form.Control\\r\\n                type='text'\\r\\n                name='lastName'\\r\\n                value={values.lastName}\\r\\n                onChange={handleChange}\\r\\n                isValid={touched.lastName && !errors.lastName}\\r\\n              />\\r\\n\\r\\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\\r\\n            </Form.Group>\\r\\n            <Form.Group as={Col} md='4' controlId='validationFormikUsername'>\\r\\n              <Form.Label>Username</Form.Label>\\r\\n              <InputGroup hasValidation>\\r\\n                <InputGroup.Text\\r\\n                  id='inputGroupPrepend'\\r\\n                  className={styles.inputGroupText}>\\r\\n                  @\\r\\n                </InputGroup.Text>\\r\\n                <Form.Control\\r\\n                  type='text'\\r\\n                  placeholder='Username'\\r\\n                  aria-describedby='inputGroupPrepend'\\r\\n                  name='username'\\r\\n                  value={values.username}\\r\\n                  onChange={handleChange}\\r\\n                  className={styles.inputFormControl}\\r\\n                  isInvalid={!!errors.username}\\r\\n                />\\r\\n                <Form.Control.Feedback type='invalid'>\\r\\n                  {errors.username}\\r\\n                </Form.Control.Feedback>\\r\\n              </InputGroup>\\r\\n            </Form.Group>\\r\\n          </Row>\\r\\n          <Row className='mb-3'>\\r\\n            <Form.Group as={Col} md='6' controlId='validationFormik03'>\\r\\n              <Form.Label>City</Form.Label>\\r\\n              <Form.Control\\r\\n                type='text'\\r\\n                placeholder='City'\\r\\n                name='city'\\r\\n                value={values.city}\\r\\n                onChange={handleChange}\\r\\n                isInvalid={!!errors.city}\\r\\n              />\\r\\n\\r\\n              <Form.Control.Feedback type='invalid'>\\r\\n                {errors.city}\\r\\n              </Form.Control.Feedback>\\r\\n            </Form.Group>\\r\\n            <Form.Group as={Col} md='3' controlId='validationFormik04'>\\r\\n              <Form.Label>State</Form.Label>\\r\\n              <Form.Control\\r\\n                type='text'\\r\\n                placeholder='State'\\r\\n                name='state'\\r\\n                value={values.state}\\r\\n                onChange={handleChange}\\r\\n                isInvalid={!!errors.state}\\r\\n              />\\r\\n              <Form.Control.Feedback type='invalid'>\\r\\n                {errors.state}\\r\\n              </Form.Control.Feedback>\\r\\n            </Form.Group>\\r\\n            <Form.Group as={Col} md='3' controlId='validationFormik05'>\\r\\n              <Form.Label>Zip</Form.Label>\\r\\n              <Form.Control\\r\\n                type='text'\\r\\n                placeholder='Zip'\\r\\n                name='zip'\\r\\n                value={values.zip}\\r\\n                onChange={handleChange}\\r\\n                isInvalid={!!errors.zip}\\r\\n              />\\r\\n\\r\\n              <Form.Control.Feedback type='invalid'>\\r\\n                {errors.zip}\\r\\n              </Form.Control.Feedback>\\r\\n            </Form.Group>\\r\\n          </Row>\\r\\n          <Form.Group className='mb-3'>\\r\\n            <Form.Check\\r\\n              required\\r\\n              name='terms'\\r\\n              label='Agree to terms and conditions'\\r\\n              onChange={handleChange}\\r\\n              isInvalid={!!errors.terms}\\r\\n              feedback={errors.terms}\\r\\n              feedbackType='invalid'\\r\\n              id='validationFormik0'\\r\\n            />\\r\\n          </Form.Group>\\r\\n          <Button type='submit'>Submit form</Button>\\r\\n        </Form>\\r\\n      )}\\r\\n    </Formik>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst Libraries = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <FormExample />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Libraries;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {InputGroup, Form} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nconst Input = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <InputGroup hasValidation>\\r\\n        <InputGroup.Text className={styles.inputGroupText}>@</InputGroup.Text>\\r\\n        <Form.Control\\r\\n          type='text'\\r\\n          required\\r\\n          isInvalid\\r\\n          className={styles.inputFormControl}\\r\\n        />\\r\\n        <Form.Control.Feedback type='invalid'>\\r\\n          Please choose a username.\\r\\n        </Form.Control.Feedback>\\r\\n      </InputGroup>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Input;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Form} from 'react-bootstrap';\\r\\n\\r\\nconst Switches = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Form>\\r\\n        <Form.Check\\r\\n          type='switch'\\r\\n          id='custom-switch'\\r\\n          label='Check this switch'\\r\\n        />\\r\\n        <Form.Check\\r\\n          disabled\\r\\n          type='switch'\\r\\n          label='disabled switch'\\r\\n          id='disabled-custom-switch'\\r\\n        />\\r\\n      </Form>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Switches;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, Col, Form, InputGroup, Row} from 'react-bootstrap';\\r\\nimport {Formik} from 'formik';\\r\\nimport * as yup from 'yup';\\r\\n\\r\\nconst schema = yup.object().shape({\\r\\n  firstName: yup.string().required(),\\r\\n  lastName: yup.string().required(),\\r\\n  username: yup.string().required(),\\r\\n  city: yup.string().required(),\\r\\n  state: yup.string().required(),\\r\\n  zip: yup.string().required(),\\r\\n  file: yup.mixed().required(),\\r\\n  terms: yup.bool().required().oneOf([true], 'terms must be accepted'),\\r\\n});\\r\\n\\r\\nfunction FormExample() {\\r\\n  return (\\r\\n    <Formik\\r\\n      validationSchema={schema}\\r\\n      onSubmit={console.log}\\r\\n      initialValues={{\\r\\n        firstName: 'Mark',\\r\\n        lastName: 'Otto',\\r\\n        username: '',\\r\\n        city: '',\\r\\n        state: '',\\r\\n        zip: '',\\r\\n        file: null,\\r\\n        terms: false,\\r\\n      }}>\\r\\n      {({\\r\\n        handleSubmit,\\r\\n        handleChange,\\r\\n        handleBlur,\\r\\n        values,\\r\\n        touched,\\r\\n        isValid,\\r\\n        errors,\\r\\n      }) => (\\r\\n        <Form noValidate onSubmit={handleSubmit}>\\r\\n          <Row className='mb-3'>\\r\\n            <Form.Group\\r\\n              as={Col}\\r\\n              md='4'\\r\\n              controlId='validationFormik101'\\r\\n              className='position-relative'>\\r\\n              <Form.Label>First name</Form.Label>\\r\\n              <Form.Control\\r\\n                type='text'\\r\\n                name='firstName'\\r\\n                value={values.firstName}\\r\\n                onChange={handleChange}\\r\\n                isValid={touched.firstName && !errors.firstName}\\r\\n              />\\r\\n              <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\\r\\n            </Form.Group>\\r\\n            <Form.Group\\r\\n              as={Col}\\r\\n              md='4'\\r\\n              controlId='validationFormik102'\\r\\n              className='position-relative'>\\r\\n              <Form.Label>Last name</Form.Label>\\r\\n              <Form.Control\\r\\n                type='text'\\r\\n                name='lastName'\\r\\n                value={values.lastName}\\r\\n                onChange={handleChange}\\r\\n                isValid={touched.lastName && !errors.lastName}\\r\\n              />\\r\\n\\r\\n              <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\\r\\n            </Form.Group>\\r\\n            <Form.Group as={Col} md='4' controlId='validationFormikUsername2'>\\r\\n              <Form.Label>Username</Form.Label>\\r\\n              <InputGroup hasValidation>\\r\\n                <InputGroup.Text id='inputGroupPrepend'>@</InputGroup.Text>\\r\\n                <Form.Control\\r\\n                  type='text'\\r\\n                  placeholder='Username'\\r\\n                  aria-describedby='inputGroupPrepend'\\r\\n                  name='username'\\r\\n                  value={values.username}\\r\\n                  onChange={handleChange}\\r\\n                  isInvalid={!!errors.username}\\r\\n                />\\r\\n                <Form.Control.Feedback type='invalid' tooltip>\\r\\n                  {errors.username}\\r\\n                </Form.Control.Feedback>\\r\\n              </InputGroup>\\r\\n            </Form.Group>\\r\\n          </Row>\\r\\n          <Row className='mb-3'>\\r\\n            <Form.Group\\r\\n              as={Col}\\r\\n              md='6'\\r\\n              controlId='validationFormik103'\\r\\n              className='position-relative'>\\r\\n              <Form.Label>City</Form.Label>\\r\\n              <Form.Control\\r\\n                type='text'\\r\\n                placeholder='City'\\r\\n                name='city'\\r\\n                value={values.city}\\r\\n                onChange={handleChange}\\r\\n                isInvalid={!!errors.city}\\r\\n              />\\r\\n\\r\\n              <Form.Control.Feedback type='invalid' tooltip>\\r\\n                {errors.city}\\r\\n              </Form.Control.Feedback>\\r\\n            </Form.Group>\\r\\n            <Form.Group\\r\\n              as={Col}\\r\\n              md='3'\\r\\n              controlId='validationFormik104'\\r\\n              className='position-relative'>\\r\\n              <Form.Label>State</Form.Label>\\r\\n              <Form.Control\\r\\n                type='text'\\r\\n                placeholder='State'\\r\\n                name='state'\\r\\n                value={values.state}\\r\\n                onChange={handleChange}\\r\\n                isInvalid={!!errors.state}\\r\\n              />\\r\\n              <Form.Control.Feedback type='invalid' tooltip>\\r\\n                {errors.state}\\r\\n              </Form.Control.Feedback>\\r\\n            </Form.Group>\\r\\n            <Form.Group\\r\\n              as={Col}\\r\\n              md='3'\\r\\n              controlId='validationFormik105'\\r\\n              className='position-relative'>\\r\\n              <Form.Label>Zip</Form.Label>\\r\\n              <Form.Control\\r\\n                type='text'\\r\\n                placeholder='Zip'\\r\\n                name='zip'\\r\\n                value={values.zip}\\r\\n                onChange={handleChange}\\r\\n                isInvalid={!!errors.zip}\\r\\n              />\\r\\n\\r\\n              <Form.Control.Feedback type='invalid' tooltip>\\r\\n                {errors.zip}\\r\\n              </Form.Control.Feedback>\\r\\n            </Form.Group>\\r\\n          </Row>\\r\\n          <Form.Group className='position-relative mb-3'>\\r\\n            <Form.Label>File</Form.Label>\\r\\n            <Form.Control\\r\\n              type='file'\\r\\n              required\\r\\n              name='file'\\r\\n              onChange={handleChange}\\r\\n              isInvalid={!!errors.file}\\r\\n            />\\r\\n            <Form.Control.Feedback type='invalid' tooltip>\\r\\n              {errors.file}\\r\\n            </Form.Control.Feedback>\\r\\n          </Form.Group>\\r\\n          <Form.Group className='position-relative mb-3'>\\r\\n            <Form.Check\\r\\n              required\\r\\n              name='terms'\\r\\n              label='Agree to terms and conditions'\\r\\n              onChange={handleChange}\\r\\n              isInvalid={!!errors.terms}\\r\\n              feedback={errors.terms}\\r\\n              feedbackType='invalid'\\r\\n              id='validationFormik106'\\r\\n              feedbackTooltip\\r\\n            />\\r\\n          </Form.Group>\\r\\n          <Button type='submit'>Submit form</Button>\\r\\n        </Form>\\r\\n      )}\\r\\n    </Formik>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst Tooltips = () => {\\r\\n  return <FormExample />;\\r\\n};\\r\\n\\r\\nexport default Tooltips;\\r\\n\";","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"AppRowContainer_row__lSYCd\"};"],"names":["AppCard","title","footer","children","className","titleClass","actionClass","footerClass","cardBodyClass","cardHeaderClass","action","heightFull","cardImg","rest","Card","clsx","styles","Img","variant","src","Header","Title","href","Body","Footer","defaultProps","highlightTheme","plain","color","fontFamily","fontWeight","Fonts","REGULAR","backgroundColor","types","style","PHASE","GROUP","Expand","props","getClientHeight","refWrapper","scrollHeight","getDefaultExpandStyle","state","status","height","opacity","overflow","getExpandStyle","getTransition","attribute","duration","easing","updateStatus","setState","delay","fn","time","timeout","setTimeout","clearDelay","clearTimeout","transit","entering","entered","enter","toggle","open","setRef","ref","prevProps","this","transition","transitions","map","join","Tag","tag","childProps","getStyle","Component","ComponentCardWithoutAnim","description","maxHeight","component","source","useState","viewSource","setToggleViewSource","extra","Button","shape","onClick","AppScrollbar","borderRadius","background","code","language","theme","tokens","getLineProps","getTokenProps","line","i","key","token","AppComponentCard","AppAnimateGroup","type","interval","AppComponentHeader","refUrl","target","AppRow","row","others","animateStyle","flexDirection","ease","width","Form","Group","controlId","Label","Control","placeholder","Text","Check","label","as","rows","size","readOnly","Row","column","sm","Col","plaintext","defaultValue","multiple","disabled","id","htmlFor","inline","name","Input","isValid","Feedback","Range","FloatingLabel","Floating","Select","span","offset","lg","xs","visuallyHidden","InputGroup","FormControl","FormExample","validated","setValidated","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","md","required","hasValidation","feedback","feedbackType","schema","yup","firstName","lastName","username","city","zip","terms","oneOf","validationSchema","console","log","initialValues","handleSubmit","handleChange","values","handleBlur","touched","errors","value","onChange","isInvalid","file","tooltip","feedbackTooltip","AppRowContainer","FormsDemo","noScrollbar","FormControls","Sizing","ReadonlyPlain","ColorDemo","Readonly","Inline","CustomizingDemo","Without","Default","TextareasDemo","Groups","Grid","Column","File","FormGrid","HorizontalForm","Rendering","Auto","AutoSizing","Help","Disabled","Horizontal","DisabledForms","ValidationDemo","Libraries","Switches","Tooltips"],"sourceRoot":""}