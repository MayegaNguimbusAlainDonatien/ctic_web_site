{"version":3,"file":"static/js/5034.52c46c58.chunk.js","mappings":"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","sources":["webpack://ctic/./src/@crema/core/AppCard/index.module.scss?c1e2","@crema/core/AppCard/index.js","@crema/core/AppComponentCard/highlightTheme.js","webpack://ctic/./src/@crema/core/AppComponentCard/index.module.scss?0c6d","@crema/core/AppAnimate/Expand.js","@crema/core/AppComponentCard/ComponentCardWithoutAnim.js","@crema/core/AppComponentCard/index.js","webpack://ctic/./src/@crema/core/AppComponentHeader/index.module.scss?ae62","@crema/core/AppComponentHeader/index.js","@crema/core/AppRowContainer/AppRowSimpleContainer.js","pages/thirdParty/recharts/Line/Components/data.js","pages/thirdParty/recharts/Line/Components/SimpleLineChart.js","pages/thirdParty/recharts/Line/Components/VerticalLineChart.js","pages/thirdParty/recharts/Line/Components/CustomizedDotLineChart.js","pages/thirdParty/recharts/Line/Components/LineChartWithReferenceLines.js","pages/thirdParty/recharts/Line/Components/DashedLineChart.js","pages/thirdParty/recharts/Line/Components/LineChartWithXAxisPading.js","pages/thirdParty/recharts/Line/Components/LineChartConnectNulls.js","pages/thirdParty/recharts/Line/Components/SynchronizedLineChart.js","pages/thirdParty/recharts/Line/index.js","webpack://ctic/./src/pages/thirdParty/recharts/Line/Components/SimpleLineChart.js?7837","webpack://ctic/./src/pages/thirdParty/recharts/Line/Components/VerticalLineChart.js?06f5","webpack://ctic/./src/pages/thirdParty/recharts/Line/Components/CustomizedDotLineChart.js?11c8","webpack://ctic/./src/pages/thirdParty/recharts/Line/Components/LineChartWithReferenceLines.js?86cf","webpack://ctic/./src/pages/thirdParty/recharts/Line/Components/DashedLineChart.js?5c2d","webpack://ctic/./src/pages/thirdParty/recharts/Line/Components/LineChartWithXAxisPading.js?7612","webpack://ctic/./src/pages/thirdParty/recharts/Line/Components/SynchronizedLineChart.js?abfa","webpack://ctic/./src/pages/thirdParty/recharts/Line/Components/LineChartConnectNulls.js?b56f","../node_modules/recharts/es6/cartesian/ErrorBar.js","../node_modules/recharts/es6/chart/AreaChart.js","../node_modules/recharts/es6/chart/LineChart.js","webpack://ctic/./src/@crema/core/AppRowContainer/index.module.scss?e727"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"AppCard_card__lJ6Uc\",\"heightFull\":\"AppCard_heightFull__T8kun\",\"cardBody\":\"AppCard_cardBody__Yq-vX\",\"cardHeader\":\"AppCard_cardHeader__Y+R+4\",\"cardTitle\":\"AppCard_cardTitle__HaekO\",\"action\":\"AppCard_action__sd-8L\",\"cardFooter\":\"AppCard_cardFooter__qAyRn\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport styles from './index.module.scss';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst AppCard = ({\r\n  title,\r\n  footer,\r\n  children,\r\n  className,\r\n  titleClass,\r\n  actionClass,\r\n  footerClass,\r\n  cardBodyClass,\r\n  cardHeaderClass,\r\n  action,\r\n  heightFull,\r\n  cardImg,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Card\r\n      className={clsx(\r\n        styles.card,\r\n        heightFull ? styles.heightFull : '',\r\n        className,\r\n      )}\r\n      title={title}\r\n      {...rest}>\r\n      {cardImg ? <Card.Img variant='top' src={cardImg} /> : null}\r\n      {title || action ? (\r\n        <Card.Header className={clsx(styles.cardHeader, cardHeaderClass)}>\r\n          {typeof title === 'object' ? (\r\n            title\r\n          ) : (\r\n            <Card.Title\r\n              className={clsx(\r\n                styles.cardTitle,\r\n                'mb-0 text-truncate',\r\n                titleClass,\r\n              )}>\r\n              {title}\r\n            </Card.Title>\r\n          )}\r\n          {typeof action === 'object' ? (\r\n            action\r\n          ) : (\r\n            <a\r\n              className={clsx(\r\n                styles.action,\r\n                'text-decoration-none ms-1',\r\n                actionClass,\r\n              )}\r\n              href='#'>\r\n              {action}\r\n            </a>\r\n          )}\r\n        </Card.Header>\r\n      ) : null}\r\n      <Card.Body className={clsx(styles.cardBody, cardBodyClass)}>\r\n        {children}\r\n      </Card.Body>\r\n      {footer ? (\r\n        <Card.Footer className={clsx(styles.cardFooter, footerClass)}>\r\n          {footer}\r\n        </Card.Footer>\r\n      ) : null}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppCard;\r\n\r\nAppCard.propTypes = {\r\n  action: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  footer: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  cardImg: PropTypes.string,\r\n  titleClass: PropTypes.string,\r\n  actionClass: PropTypes.string,\r\n  footerClass: PropTypes.string,\r\n  cardBodyClass: PropTypes.string,\r\n  cardHeaderClass: PropTypes.string,\r\n  heightFull: PropTypes.bool,\r\n};\r\n\r\nAppCard.defaultProps = {};\r\n","import {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nexport const highlightTheme = {\r\n  plain: {\r\n    color: '#F8F8F2',\r\n    fontFamily: 'Poppins',\r\n    fontWeight: Fonts.REGULAR,\r\n    backgroundColor: '#333333',\r\n  },\r\n  styles: [\r\n    {\r\n      types: ['prolog', 'constant', 'builtin'],\r\n      style: {\r\n        color: '#FFFFFF',\r\n      },\r\n    },\r\n    {\r\n      types: ['inserted', 'tag', 'function'],\r\n      style: {\r\n        color: '#E6DB74',\r\n      },\r\n    },\r\n    {\r\n      types: ['deleted'],\r\n      style: {\r\n        color: 'rgb(255, 85, 85)',\r\n      },\r\n    },\r\n    {\r\n      types: ['changed'],\r\n      style: {\r\n        color: 'rgb(255, 184, 108)',\r\n      },\r\n    },\r\n    {\r\n      types: ['punctuation', 'symbol'],\r\n      style: {\r\n        color: 'rgb(248, 248, 242)',\r\n      },\r\n    },\r\n    {\r\n      types: ['string', 'char', 'selector'],\r\n      style: {\r\n        color: '#98CD2F',\r\n      },\r\n    },\r\n    {\r\n      types: ['keyword', 'variable'],\r\n      style: {\r\n        color: '#65D4EA',\r\n        // fontStyle: \"italic\"\r\n      },\r\n    },\r\n    {\r\n      types: ['comment'],\r\n      style: {\r\n        color: 'rgb(98, 114, 164)',\r\n      },\r\n    },\r\n    {\r\n      types: ['attr-name'],\r\n      style: {\r\n        color: '#98CD2F',\r\n      },\r\n    },\r\n  ],\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"compCardTitleDescription\":\"AppComponentCard_compCardTitleDescription__SHL6w\",\"preTag\":\"AppComponentCard_preTag__0+EII\",\"componentRoot\":\"AppComponentCard_componentRoot__dgPU7\",\"codeIcon\":\"AppComponentCard_codeIcon__mUnRp\"};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// In firefox, setTimeout with duration 0 too short for browser notice the changes in dom\r\nconst initialTransitDuration = 20;\r\n\r\nconst PHASE = {\r\n  CLOSE: 'close',\r\n  CLOSING: 'closing',\r\n  CLOSED: 'closed',\r\n  OPEN: 'open',\r\n  OPENING: 'opening',\r\n  OPENED: 'opened',\r\n};\r\n\r\nconst GROUP = {\r\n  [PHASE.CLOSE]: PHASE.CLOSE,\r\n  [PHASE.CLOSED]: PHASE.CLOSE,\r\n  [PHASE.OPENING]: PHASE.CLOSE,\r\n\r\n  [PHASE.CLOSING]: PHASE.OPEN,\r\n  [PHASE.OPEN]: PHASE.OPEN,\r\n  [PHASE.OPENED]: PHASE.OPEN,\r\n};\r\n\r\nclass Expand extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: this.props.open ? PHASE.OPEN : PHASE.CLOSE,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps /* prevState */) {\r\n    if (prevProps.open !== this.props.open) {\r\n      this.toggle(this.props.open);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.clearDelay();\r\n  }\r\n\r\n  getClientHeight = () => this.refWrapper.scrollHeight;\r\n\r\n  getDefaultExpandStyle = () => {\r\n    const {status} = this.state;\r\n\r\n    switch (status) {\r\n      case PHASE.OPENING:\r\n      case PHASE.CLOSE:\r\n      case PHASE.CLOSED:\r\n        return {height: 0, opacity: 0, overflow: 'hidden'};\r\n      case PHASE.OPENED:\r\n      case PHASE.CLOSING:\r\n        return {height: this.getClientHeight(), opacity: 1, overflow: 'hidden'};\r\n      default:\r\n        return {height: 'auto', opacity: 1, overflow: 'unset'};\r\n    }\r\n  };\r\n\r\n  getExpandStyle = () => ({\r\n    ...this.getDefaultExpandStyle(),\r\n    ...this.props.styles[GROUP[this.state.status]],\r\n  });\r\n\r\n  getTransition = (attribute) =>\r\n    `${attribute} ${this.props.duration}ms ${this.props.easing}`;\r\n\r\n  getStyle() {\r\n    const transition = this.props.transitions.map(this.getTransition).join(',');\r\n\r\n    return {\r\n      ...this.getExpandStyle(),\r\n      transition,\r\n    };\r\n  }\r\n\r\n  updateStatus = (status) => this.setState({status});\r\n\r\n  delay = (fn, time) => {\r\n    this.timeout = setTimeout(fn, time);\r\n  };\r\n\r\n  clearDelay = () => {\r\n    if (this.timeout) {\r\n      clearTimeout(this.timeout);\r\n    }\r\n  };\r\n\r\n  transit = (entering, entered, enter) => {\r\n    const {duration} = this.props;\r\n\r\n    this.updateStatus(entering);\r\n\r\n    this.delay(() => {\r\n      this.updateStatus(entered);\r\n\r\n      this.delay(() => {\r\n        this.updateStatus(enter);\r\n      }, duration);\r\n    }, initialTransitDuration);\r\n  };\r\n\r\n  toggle = (open) => {\r\n    this.clearDelay();\r\n\r\n    if (open) {\r\n      this.transit(PHASE.OPENING, PHASE.OPENED, PHASE.OPEN);\r\n    } else {\r\n      this.transit(PHASE.CLOSING, PHASE.CLOSED, PHASE.CLOSE);\r\n    }\r\n  };\r\n\r\n  setRef = (ref) => {\r\n    this.refWrapper = ref;\r\n  };\r\n\r\n  render() {\r\n    const {className, children, tag: Tag} = this.props;\r\n\r\n    const childProps = {\r\n      className,\r\n      style: this.getStyle(),\r\n      ref: this.setRef,\r\n    };\r\n\r\n    return <Tag {...childProps}>{children}</Tag>;\r\n  }\r\n}\r\n\r\nExpand.propTypes = {\r\n  children: PropTypes.node,\r\n  open: PropTypes.bool,\r\n  duration: PropTypes.number,\r\n  easing: PropTypes.string,\r\n  className: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  transitions: PropTypes.arrayOf(PropTypes.string),\r\n  styles: PropTypes.shape({\r\n    [PHASE.OPEN]: PropTypes.object,\r\n    [PHASE.CLOSE]: PropTypes.object,\r\n  }),\r\n};\r\n\r\nExpand.defaultProps = {\r\n  open: false,\r\n  duration: 200,\r\n  easing: 'ease-in-out',\r\n  className: '',\r\n  tag: 'div',\r\n  transitions: ['height', 'opacity'],\r\n  styles: {},\r\n};\r\n\r\nexport default Expand;\r\n","import React, {useState} from 'react';\r\nimport Highlight, {defaultProps} from 'prism-react-renderer';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {highlightTheme} from './highlightTheme';\r\nimport AppScrollbar from '../AppScrollbar';\r\nimport styles from './index.module.scss';\r\nimport Expand from '../AppAnimate/Expand';\r\nimport AppCard from '../AppCard';\r\nimport {HiOutlineCode} from 'react-icons/hi';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst ComponentCardWithoutAnim = ({\r\n  title,\r\n  description,\r\n  className,\r\n  maxHeight,\r\n  component: Component,\r\n  source,\r\n}) => {\r\n  const [viewSource, setToggleViewSource] = useState(false);\r\n  return (\r\n    <AppCard\r\n      className={className}\r\n      title={\r\n        <div className='w-100'>\r\n          <div>{title}</div>\r\n          <div\r\n            className={clsx(styles.compCardTitleDescription, 'text-truncate')}>\r\n            {description}\r\n          </div>\r\n        </div>\r\n      }\r\n      extra={\r\n        source ? (\r\n          <Button\r\n            aria-label='view code'\r\n            shape='circle'\r\n            onClick={() => setToggleViewSource(!viewSource)}>\r\n            <HiOutlineCode className={styles.codeIcon} />\r\n          </Button>\r\n        ) : null\r\n      }>\r\n      <Expand open={viewSource}>\r\n        {source ? (\r\n          <AppScrollbar\r\n            style={{\r\n              borderRadius: 8,\r\n              background: '#333333',\r\n              height: 350,\r\n              maxHeight: 400,\r\n            }}>\r\n            <Highlight\r\n              {...defaultProps}\r\n              code={source}\r\n              language='jsx'\r\n              theme={highlightTheme}>\r\n              {({style, tokens, getLineProps, getTokenProps}) => (\r\n                <pre\r\n                  className={styles.preTag}\r\n                  style={{...style, maxHeight: 500}}>\r\n                  {tokens.map((line, i) => (\r\n                    <div key={i} {...getLineProps({line, key: i})}>\r\n                      {line.map((token, key) => (\r\n                        <span key={i} {...getTokenProps({token, key})} />\r\n                      ))}\r\n                    </div>\r\n                  ))}\r\n                </pre>\r\n              )}\r\n            </Highlight>\r\n          </AppScrollbar>\r\n        ) : null}\r\n      </Expand>\r\n      <AppScrollbar\r\n        style={{maxHeight: maxHeight}}\r\n        className='position-relative'>\r\n        <div\r\n          className={clsx(\r\n            styles.componentRoot,\r\n            'd-flex align-items-center justify-content-center w-100 p-3',\r\n          )}>\r\n          <Component />\r\n        </div>\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default ComponentCardWithoutAnim;\r\n\r\nComponentCardWithoutAnim.defaultProps = {\r\n  description: '',\r\n  maxHeight: 500,\r\n};\r\n\r\nComponentCardWithoutAnim.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n  source: PropTypes.node,\r\n  title: PropTypes.node.isRequired,\r\n  description: PropTypes.node,\r\n  maxHeight: PropTypes.number,\r\n  className: PropTypes.string,\r\n  size: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport ComponentCardWithoutAnim from './ComponentCardWithoutAnim';\r\n\r\nconst AppComponentCard = ({\r\n  title,\r\n  description,\r\n  className,\r\n  maxHeight,\r\n  component,\r\n  source,\r\n}) => {\r\n  return (\r\n    <AppAnimateGroup type='bottom' interval={100} duration={450}>\r\n      <ComponentCardWithoutAnim\r\n        title={title}\r\n        description={description}\r\n        className={className}\r\n        maxHeight={maxHeight}\r\n        component={component}\r\n        source={source}\r\n        key={'card'}\r\n      />\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppComponentCard;\r\n\r\nAppComponentCard.defaultProps = {\r\n  description: '',\r\n  maxHeight: 500,\r\n};\r\n\r\nAppComponentCard.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n  source: PropTypes.node,\r\n  title: PropTypes.node.isRequired,\r\n  description: PropTypes.node,\r\n  maxHeight: PropTypes.number,\r\n  className: PropTypes.string,\r\n  size: PropTypes.number,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"headerTitle\":\"AppComponentHeader_headerTitle__A9HGS\",\"titleH3\":\"AppComponentHeader_titleH3__owcvF\",\"textBase\":\"AppComponentHeader_textBase__Hw4ll\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst AppComponentHeader = ({title, description, refUrl}) => {\r\n  return (\r\n    <AppAnimateGroup type='top' height='auto' interval={100} duration={450}>\r\n      <div\r\n        className='d-flex flex-column pb-3 flex-sm-row justify-content-sm-between pt-xxl-3'\r\n        key={'header'}>\r\n        <div className={styles.headerTitle}>\r\n          <h3 className={styles.titleH3}>{title}</h3>\r\n          {description ? (\r\n            <h5 className={styles.textBase}>{description}</h5>\r\n          ) : null}\r\n        </div>\r\n        {refUrl ? (\r\n          <div style={{height: 30}}>\r\n            <Button variant='primary' href={refUrl} target='_blank'>\r\n              Reference\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppComponentHeader;\r\n\r\nAppComponentHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  refUrl: PropTypes.string,\r\n};\r\nAppComponentHeader.defaultProps = {};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Row} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nconst AppRowSimpleContainer = ({children}) => {\r\n  return <Row className={styles.row}>{children}</Row>;\r\n};\r\n\r\nexport default AppRowSimpleContainer;\r\nAppRowSimpleContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","const data = [\r\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\r\n  {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\r\n  {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\r\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\r\n  {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\r\n  {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\r\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\r\n];\r\nexport default data;\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst SimpleLineChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' activeDot={{r: 8}} />\r\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default SimpleLineChart;\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst VerticalLineChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <LineChart\r\n      layout='vertical'\r\n      data={data}\r\n      margin={{top: 10, right: 0, left: -13, bottom: 0}}>\r\n      <XAxis type='number' />\r\n      <YAxis dataKey='name' type='category' />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line dataKey='pv' stroke='#4299E1' />\r\n      <Line dataKey='uv' stroke='#F04F47' />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default VerticalLineChart;\r\n","import React, {Component} from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CustomizedDot extends Component {\r\n  render() {\r\n    const {cx, cy, value} = this.props;\r\n\r\n    if (value > 2500) {\r\n      return (\r\n        <svg\r\n          x={cx - 10}\r\n          y={cy - 10}\r\n          width={20}\r\n          height={20}\r\n          fill='#dc3545'\r\n          viewBox='0 0 1024 1024'>\r\n          <path d='M512 1009.984c-274.912 0-497.76-222.848-497.76-497.76s222.848-497.76 497.76-497.76c274.912 0 497.76 222.848 497.76 497.76s-222.848 497.76-497.76 497.76zM340.768 295.936c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM686.176 296.704c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM772.928 555.392c-18.752-8.864-40.928-0.576-49.632 18.528-40.224 88.576-120.256 143.552-208.832 143.552-85.952 0-164.864-52.64-205.952-137.376-9.184-18.912-31.648-26.592-50.08-17.28-18.464 9.408-21.216 21.472-15.936 32.64 52.8 111.424 155.232 186.784 269.76 186.784 117.984 0 217.12-70.944 269.76-186.784 8.672-19.136 9.568-31.2-9.12-40.096z' />\r\n        </svg>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <svg\r\n        x={cx - 10}\r\n        y={cy - 10}\r\n        width={20}\r\n        height={20}\r\n        fill='#198754'\r\n        viewBox='0 0 1024 1024'>\r\n        <path d='M517.12 53.248q95.232 0 179.2 36.352t145.92 98.304 98.304 145.92 36.352 179.2-36.352 179.2-98.304 145.92-145.92 98.304-179.2 36.352-179.2-36.352-145.92-98.304-98.304-145.92-36.352-179.2 36.352-179.2 98.304-145.92 145.92-98.304 179.2-36.352zM663.552 261.12q-15.36 0-28.16 6.656t-23.04 18.432-15.872 27.648-5.632 33.28q0 35.84 21.504 61.44t51.2 25.6 51.2-25.6 21.504-61.44q0-17.408-5.632-33.28t-15.872-27.648-23.04-18.432-28.16-6.656zM373.76 261.12q-29.696 0-50.688 25.088t-20.992 60.928 20.992 61.44 50.688 25.6 50.176-25.6 20.48-61.44-20.48-60.928-50.176-25.088zM520.192 602.112q-51.2 0-97.28 9.728t-82.944 27.648-62.464 41.472-35.84 51.2q-1.024 1.024-1.024 2.048-1.024 3.072-1.024 8.704t2.56 11.776 7.168 11.264 12.8 6.144q25.6-27.648 62.464-50.176 31.744-19.456 79.36-35.328t114.176-15.872q67.584 0 116.736 15.872t81.92 35.328q37.888 22.528 63.488 50.176 17.408-5.12 19.968-18.944t0.512-18.944-3.072-7.168-1.024-3.072q-26.624-55.296-100.352-88.576t-176.128-33.28z' />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nCustomizedDot.propTypes = {\r\n  cx: PropTypes.number,\r\n  cy: PropTypes.number,\r\n  value: PropTypes.number,\r\n};\r\nconst CustomizedDotLineChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line\r\n        type='monotone'\r\n        dataKey='pv'\r\n        stroke='#4299E1'\r\n        dot={<CustomizedDot />}\r\n      />\r\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default CustomizedDotLineChart;\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  ReferenceLine,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst LineChartWithReferenceLines = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <ReferenceLine x='Page C' stroke='#dc3545' label='Max PV PAGE' />\r\n      <ReferenceLine y={9800} label='Max' stroke='#dc3545' />\r\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' />\r\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default LineChartWithReferenceLines;\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst DashedLineChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line\r\n        type='monotone'\r\n        dataKey='pv'\r\n        stroke='#4299E1'\r\n        strokeDasharray='5 5'\r\n      />\r\n      <Line\r\n        type='monotone'\r\n        dataKey='uv'\r\n        stroke='#F04F47'\r\n        strokeDasharray='3 4 5 2'\r\n      />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default DashedLineChart;\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst LineChartWithXAxisPading = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' padding={{left: 30, right: 30}} />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' activeDot={{r: 8}} />\r\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default LineChartWithXAxisPading;\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\nimport './index.style.less';\r\n\r\nconst LineChartConnectNulls = () => (\r\n  <ResponsiveContainer width='100%' height={600}>\r\n    <div>\r\n      <div className='recharts-component-item'>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <LineChart\r\n            data={data}\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Line\r\n              type='monotone'\r\n              dataKey='uv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      <div className='recharts-component-item'>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <LineChart\r\n            data={data}\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Line\r\n              connectNulls={true}\r\n              type='monotone'\r\n              dataKey='uv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default LineChartConnectNulls;\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  Brush,\r\n  CartesianGrid,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\nimport './index.style.less';\r\n\r\nconst SynchronizedLineChart = () => (\r\n  <ResponsiveContainer width='100%' height={700}>\r\n    <div className='recharts-component'>\r\n      <p>A demo of synchronized AreaCharts</p>\r\n      <div className='recharts-component-item'>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <LineChart\r\n            data={data}\r\n            syncId='anyId'\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Line\r\n              type='monotone'\r\n              dataKey='uv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      <p>Maybe some other content</p>\r\n      <div className='recharts-component-item'>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <LineChart\r\n            data={data}\r\n            syncId='anyId'\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Line\r\n              type='monotone'\r\n              dataKey='pv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      <div className='recharts-component-item'>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <AreaChart\r\n            data={data}\r\n            syncId='anyId'\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Area\r\n              type='monotone'\r\n              dataKey='pv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n            <Brush />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default SynchronizedLineChart;\r\n","import React from 'react';\r\nimport SimpleLineChart from './Components/SimpleLineChart';\r\nimport SimpleLineChartSource from '!raw-loader!./Components/SimpleLineChart';\r\nimport VerticalLineChart from './Components/VerticalLineChart';\r\nimport VerticalLineChartSource from '!raw-loader!./Components/VerticalLineChart';\r\nimport CustomizedDotLineChart from './Components/CustomizedDotLineChart';\r\nimport CustomizedDotLineChartSource from '!raw-loader!./Components/CustomizedDotLineChart';\r\nimport LineChartWithReferenceLines from './Components/LineChartWithReferenceLines';\r\nimport LineChartWithReferenceLinesSource from '!raw-loader!./Components/LineChartWithReferenceLines';\r\nimport DashedLineChart from './Components/DashedLineChart';\r\nimport DashedLineChartSource from '!raw-loader!./Components/DashedLineChart';\r\nimport LineChartWithXAxisPading from './Components/LineChartWithXAxisPading';\r\nimport LineChartWithXAxisPadingSource from '!raw-loader!./Components/LineChartWithXAxisPading';\r\nimport LineChartConnectNulls from './Components/LineChartConnectNulls';\r\nimport LineChartConnectNullsSource from '!raw-loader!./Components/LineChartConnectNulls';\r\nimport SynchronizedLineChart from './Components/SynchronizedLineChart';\r\nimport SynchronizedLineChartSource from '!raw-loader!./Components/SynchronizedLineChart';\r\nimport {Col} from 'react-bootstrap';\r\n\r\nimport ComponentCard from '@crema/core/AppComponentCard';\r\nimport ComponentHeader from '@crema/core/AppComponentHeader';\r\nimport AppRowSimpleContainer from '@crema/core/AppRowContainer/AppRowSimpleContainer';\r\n\r\nconst LineChart = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Line Chart'\r\n        description='All svg elements can be added into the LineChart component, such as defs.'\r\n        refUrl='http://recharts.org/en-US/api/LineChart'\r\n      />\r\n\r\n      <AppRowSimpleContainer>\r\n        <Col xs={12} xl={6}>\r\n          <ComponentCard\r\n            title='Simple Line Chart'\r\n            component={SimpleLineChart}\r\n            source={SimpleLineChartSource}\r\n          />\r\n        </Col>\r\n        <Col xs={12} xl={6}>\r\n          <ComponentCard\r\n            title='Vertical Line Chart'\r\n            component={VerticalLineChart}\r\n            source={VerticalLineChartSource}\r\n          />\r\n        </Col>\r\n        <Col xs={12} xl={6}>\r\n          <ComponentCard\r\n            title='Customized Dot Line Chart'\r\n            component={CustomizedDotLineChart}\r\n            source={CustomizedDotLineChartSource}\r\n          />\r\n        </Col>\r\n        <Col xs={12} xl={6}>\r\n          <ComponentCard\r\n            title='Line Chart With Reference Lines'\r\n            component={LineChartWithReferenceLines}\r\n            source={LineChartWithReferenceLinesSource}\r\n          />\r\n        </Col>\r\n        <Col xs={12} xl={6}>\r\n          <ComponentCard\r\n            title='Dashed Line Chart'\r\n            component={DashedLineChart}\r\n            source={DashedLineChartSource}\r\n          />\r\n        </Col>\r\n        <Col xs={12} xl={6}>\r\n          <ComponentCard\r\n            title='Line Chart With X-Axis Padding'\r\n            component={LineChartWithXAxisPading}\r\n            source={LineChartWithXAxisPadingSource}\r\n          />\r\n        </Col>\r\n        <Col xs={12} xl={6}>\r\n          <ComponentCard\r\n            title='Synchronized Line Chart'\r\n            component={SynchronizedLineChart}\r\n            source={SynchronizedLineChartSource}\r\n          />\r\n        </Col>\r\n        <Col xs={12} xl={6}>\r\n          <ComponentCard\r\n            title='Line Chart Connect Nulls'\r\n            component={LineChartConnectNulls}\r\n            source={LineChartConnectNullsSource}\r\n          />\r\n        </Col>\r\n      </AppRowSimpleContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","export default \"import React from 'react';\\r\\nimport {\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst SimpleLineChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' activeDot={{r: 8}} />\\r\\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\\r\\n    </LineChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default SimpleLineChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst VerticalLineChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <LineChart\\r\\n      layout='vertical'\\r\\n      data={data}\\r\\n      margin={{top: 10, right: 0, left: -13, bottom: 0}}>\\r\\n      <XAxis type='number' />\\r\\n      <YAxis dataKey='name' type='category' />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <Line dataKey='pv' stroke='#4299E1' />\\r\\n      <Line dataKey='uv' stroke='#F04F47' />\\r\\n    </LineChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default VerticalLineChart;\\r\\n\";","export default \"import React, {Component} from 'react';\\r\\nimport {\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\nimport PropTypes from 'prop-types';\\r\\n\\r\\nclass CustomizedDot extends Component {\\r\\n  render() {\\r\\n    const {cx, cy, value} = this.props;\\r\\n\\r\\n    if (value > 2500) {\\r\\n      return (\\r\\n        <svg\\r\\n          x={cx - 10}\\r\\n          y={cy - 10}\\r\\n          width={20}\\r\\n          height={20}\\r\\n          fill='#dc3545'\\r\\n          viewBox='0 0 1024 1024'>\\r\\n          <path d='M512 1009.984c-274.912 0-497.76-222.848-497.76-497.76s222.848-497.76 497.76-497.76c274.912 0 497.76 222.848 497.76 497.76s-222.848 497.76-497.76 497.76zM340.768 295.936c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM686.176 296.704c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM772.928 555.392c-18.752-8.864-40.928-0.576-49.632 18.528-40.224 88.576-120.256 143.552-208.832 143.552-85.952 0-164.864-52.64-205.952-137.376-9.184-18.912-31.648-26.592-50.08-17.28-18.464 9.408-21.216 21.472-15.936 32.64 52.8 111.424 155.232 186.784 269.76 186.784 117.984 0 217.12-70.944 269.76-186.784 8.672-19.136 9.568-31.2-9.12-40.096z' />\\r\\n        </svg>\\r\\n      );\\r\\n    }\\r\\n\\r\\n    return (\\r\\n      <svg\\r\\n        x={cx - 10}\\r\\n        y={cy - 10}\\r\\n        width={20}\\r\\n        height={20}\\r\\n        fill='#198754'\\r\\n        viewBox='0 0 1024 1024'>\\r\\n        <path d='M517.12 53.248q95.232 0 179.2 36.352t145.92 98.304 98.304 145.92 36.352 179.2-36.352 179.2-98.304 145.92-145.92 98.304-179.2 36.352-179.2-36.352-145.92-98.304-98.304-145.92-36.352-179.2 36.352-179.2 98.304-145.92 145.92-98.304 179.2-36.352zM663.552 261.12q-15.36 0-28.16 6.656t-23.04 18.432-15.872 27.648-5.632 33.28q0 35.84 21.504 61.44t51.2 25.6 51.2-25.6 21.504-61.44q0-17.408-5.632-33.28t-15.872-27.648-23.04-18.432-28.16-6.656zM373.76 261.12q-29.696 0-50.688 25.088t-20.992 60.928 20.992 61.44 50.688 25.6 50.176-25.6 20.48-61.44-20.48-60.928-50.176-25.088zM520.192 602.112q-51.2 0-97.28 9.728t-82.944 27.648-62.464 41.472-35.84 51.2q-1.024 1.024-1.024 2.048-1.024 3.072-1.024 8.704t2.56 11.776 7.168 11.264 12.8 6.144q25.6-27.648 62.464-50.176 31.744-19.456 79.36-35.328t114.176-15.872q67.584 0 116.736 15.872t81.92 35.328q37.888 22.528 63.488 50.176 17.408-5.12 19.968-18.944t0.512-18.944-3.072-7.168-1.024-3.072q-26.624-55.296-100.352-88.576t-176.128-33.28z' />\\r\\n      </svg>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nCustomizedDot.propTypes = {\\r\\n  cx: PropTypes.number,\\r\\n  cy: PropTypes.number,\\r\\n  value: PropTypes.number,\\r\\n};\\r\\nconst CustomizedDotLineChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <Line\\r\\n        type='monotone'\\r\\n        dataKey='pv'\\r\\n        stroke='#4299E1'\\r\\n        dot={<CustomizedDot />}\\r\\n      />\\r\\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\\r\\n    </LineChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default CustomizedDotLineChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ReferenceLine,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst LineChartWithReferenceLines = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <ReferenceLine x='Page C' stroke='#dc3545' label='Max PV PAGE' />\\r\\n      <ReferenceLine y={9800} label='Max' stroke='#dc3545' />\\r\\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' />\\r\\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\\r\\n    </LineChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default LineChartWithReferenceLines;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst DashedLineChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <Line\\r\\n        type='monotone'\\r\\n        dataKey='pv'\\r\\n        stroke='#4299E1'\\r\\n        strokeDasharray='5 5'\\r\\n      />\\r\\n      <Line\\r\\n        type='monotone'\\r\\n        dataKey='uv'\\r\\n        stroke='#F04F47'\\r\\n        strokeDasharray='3 4 5 2'\\r\\n      />\\r\\n    </LineChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default DashedLineChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst LineChartWithXAxisPading = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' padding={{left: 30, right: 30}} />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' activeDot={{r: 8}} />\\r\\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\\r\\n    </LineChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default LineChartWithXAxisPading;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  Area,\\r\\n  AreaChart,\\r\\n  Brush,\\r\\n  CartesianGrid,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\nimport './index.style.less';\\r\\n\\r\\nconst SynchronizedLineChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={700}>\\r\\n    <div className='recharts-component'>\\r\\n      <p>A demo of synchronized AreaCharts</p>\\r\\n      <div className='recharts-component-item'>\\r\\n        <ResponsiveContainer width='100%' height={200}>\\r\\n          <LineChart\\r\\n            data={data}\\r\\n            syncId='anyId'\\r\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n            <XAxis dataKey='name' />\\r\\n            <YAxis />\\r\\n            <CartesianGrid strokeDasharray='3 3' />\\r\\n            <Tooltip />\\r\\n            <Line\\r\\n              type='monotone'\\r\\n              dataKey='uv'\\r\\n              stroke='#4299E1'\\r\\n              fill='#4299E1'\\r\\n            />\\r\\n          </LineChart>\\r\\n        </ResponsiveContainer>\\r\\n      </div>\\r\\n      <p>Maybe some other content</p>\\r\\n      <div className='recharts-component-item'>\\r\\n        <ResponsiveContainer width='100%' height={200}>\\r\\n          <LineChart\\r\\n            data={data}\\r\\n            syncId='anyId'\\r\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n            <XAxis dataKey='name' />\\r\\n            <YAxis />\\r\\n            <CartesianGrid strokeDasharray='3 3' />\\r\\n            <Tooltip />\\r\\n            <Line\\r\\n              type='monotone'\\r\\n              dataKey='pv'\\r\\n              stroke='#4299E1'\\r\\n              fill='#4299E1'\\r\\n            />\\r\\n          </LineChart>\\r\\n        </ResponsiveContainer>\\r\\n      </div>\\r\\n      <div className='recharts-component-item'>\\r\\n        <ResponsiveContainer width='100%' height={200}>\\r\\n          <AreaChart\\r\\n            data={data}\\r\\n            syncId='anyId'\\r\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n            <XAxis dataKey='name' />\\r\\n            <YAxis />\\r\\n            <CartesianGrid strokeDasharray='3 3' />\\r\\n            <Tooltip />\\r\\n            <Area\\r\\n              type='monotone'\\r\\n              dataKey='pv'\\r\\n              stroke='#4299E1'\\r\\n              fill='#4299E1'\\r\\n            />\\r\\n            <Brush />\\r\\n          </AreaChart>\\r\\n        </ResponsiveContainer>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default SynchronizedLineChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  CartesianGrid,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\nimport './index.style.less';\\r\\n\\r\\nconst LineChartConnectNulls = () => (\\r\\n  <ResponsiveContainer width='100%' height={600}>\\r\\n    <div>\\r\\n      <div className='recharts-component-item'>\\r\\n        <ResponsiveContainer width='100%' height={200}>\\r\\n          <LineChart\\r\\n            data={data}\\r\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n            <XAxis dataKey='name' />\\r\\n            <YAxis />\\r\\n            <CartesianGrid strokeDasharray='3 3' />\\r\\n            <Tooltip />\\r\\n            <Line\\r\\n              type='monotone'\\r\\n              dataKey='uv'\\r\\n              stroke='#4299E1'\\r\\n              fill='#4299E1'\\r\\n            />\\r\\n          </LineChart>\\r\\n        </ResponsiveContainer>\\r\\n      </div>\\r\\n      <div className='recharts-component-item'>\\r\\n        <ResponsiveContainer width='100%' height={200}>\\r\\n          <LineChart\\r\\n            data={data}\\r\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n            <XAxis dataKey='name' />\\r\\n            <YAxis />\\r\\n            <CartesianGrid strokeDasharray='3 3' />\\r\\n            <Tooltip />\\r\\n            <Line\\r\\n              connectNulls={true}\\r\\n              type='monotone'\\r\\n              dataKey='uv'\\r\\n              stroke='#4299E1'\\r\\n              fill='#4299E1'\\r\\n            />\\r\\n          </LineChart>\\r\\n        </ResponsiveContainer>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default LineChartConnectNulls;\\r\\n\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * @fileOverview Render a group of error bar\n */\nimport React from 'react';\nimport { Layer } from '../container/Layer';\nimport { filterProps } from '../util/types';\nexport function ErrorBar(props) {\n  var offset = props.offset,\n      layout = props.layout,\n      width = props.width,\n      dataKey = props.dataKey,\n      data = props.data,\n      dataPointFormatter = props.dataPointFormatter,\n      xAxis = props.xAxis,\n      yAxis = props.yAxis,\n      others = _objectWithoutProperties(props, [\"offset\", \"layout\", \"width\", \"dataKey\", \"data\", \"dataPointFormatter\", \"xAxis\", \"yAxis\"]);\n\n  var svgProps = filterProps(others);\n  var errorBars = data.map(function (entry, i) {\n    var _dataPointFormatter = dataPointFormatter(entry, dataKey),\n        x = _dataPointFormatter.x,\n        y = _dataPointFormatter.y,\n        value = _dataPointFormatter.value,\n        errorVal = _dataPointFormatter.errorVal;\n\n    if (!errorVal) {\n      return null;\n    }\n\n    var lineCoordinates = [];\n    var lowBound, highBound;\n\n    if (Array.isArray(errorVal)) {\n      var _errorVal = _slicedToArray(errorVal, 2);\n\n      lowBound = _errorVal[0];\n      highBound = _errorVal[1];\n    } else {\n      lowBound = highBound = errorVal;\n    }\n\n    if (layout === 'vertical') {\n      // error bar for horizontal charts, the y is fixed, x is a range value\n      var scale = xAxis.scale;\n      var yMid = y + offset;\n      var yMin = yMid + width;\n      var yMax = yMid - width;\n      var xMin = scale(value - lowBound);\n      var xMax = scale(value + highBound); // the right line of |--|\n\n      lineCoordinates.push({\n        x1: xMax,\n        y1: yMin,\n        x2: xMax,\n        y2: yMax\n      }); // the middle line of |--|\n\n      lineCoordinates.push({\n        x1: xMin,\n        y1: yMid,\n        x2: xMax,\n        y2: yMid\n      }); // the left line of |--|\n\n      lineCoordinates.push({\n        x1: xMin,\n        y1: yMin,\n        x2: xMin,\n        y2: yMax\n      });\n    } else if (layout === 'horizontal') {\n      // error bar for horizontal charts, the x is fixed, y is a range value\n      var _scale = yAxis.scale;\n      var xMid = x + offset;\n\n      var _xMin = xMid - width;\n\n      var _xMax = xMid + width;\n\n      var _yMin = _scale(value - lowBound);\n\n      var _yMax = _scale(value + highBound); // the top line\n\n\n      lineCoordinates.push({\n        x1: _xMin,\n        y1: _yMax,\n        x2: _xMax,\n        y2: _yMax\n      }); // the middle line\n\n      lineCoordinates.push({\n        x1: xMid,\n        y1: _yMin,\n        x2: xMid,\n        y2: _yMax\n      }); // the bottom line\n\n      lineCoordinates.push({\n        x1: _xMin,\n        y1: _yMin,\n        x2: _xMax,\n        y2: _yMin\n      });\n    }\n\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(Layer, _extends({\n        className: \"recharts-errorBar\",\n        key: \"bar-\".concat(i)\n      }, svgProps), lineCoordinates.map(function (coordinates, index) {\n        return (\n          /*#__PURE__*/\n          // eslint-disable-next-line react/no-array-index-key\n          React.createElement(\"line\", _extends({}, coordinates, {\n            key: \"line-\".concat(index)\n          }))\n        );\n      }))\n    );\n  });\n  return /*#__PURE__*/React.createElement(Layer, {\n    className: \"recharts-errorBars\"\n  }, errorBars);\n}\nErrorBar.defaultProps = {\n  stroke: 'black',\n  strokeWidth: 1.5,\n  width: 5,\n  offset: 0,\n  layout: 'horizontal'\n};\nErrorBar.displayName = 'ErrorBar';","/**\n * @fileOverview Area Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Area } from '../cartesian/Area';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var AreaChart = generateCategoricalChart({\n  chartName: 'AreaChart',\n  GraphicalChild: Area,\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","/**\n * @fileOverview Line Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Line } from '../cartesian/Line';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var LineChart = generateCategoricalChart({\n  chartName: 'LineChart',\n  GraphicalChild: Line,\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"AppRowContainer_row__lSYCd\"};"],"names":["AppCard","title","footer","children","className","titleClass","actionClass","footerClass","cardBodyClass","cardHeaderClass","action","heightFull","cardImg","rest","Card","clsx","styles","Img","variant","src","Header","Title","href","Body","Footer","defaultProps","highlightTheme","plain","color","fontFamily","fontWeight","Fonts","REGULAR","backgroundColor","types","style","PHASE","GROUP","Expand","props","getClientHeight","refWrapper","scrollHeight","getDefaultExpandStyle","state","status","height","opacity","overflow","getExpandStyle","getTransition","attribute","duration","easing","updateStatus","setState","delay","fn","time","timeout","setTimeout","clearDelay","clearTimeout","transit","entering","entered","enter","toggle","open","setRef","ref","prevProps","this","transition","transitions","map","join","Tag","tag","childProps","getStyle","Component","ComponentCardWithoutAnim","description","maxHeight","component","source","useState","viewSource","setToggleViewSource","extra","Button","shape","onClick","AppScrollbar","borderRadius","background","code","language","theme","tokens","getLineProps","getTokenProps","line","i","key","token","AppComponentCard","AppAnimateGroup","type","interval","AppComponentHeader","refUrl","target","row","name","uv","pv","amt","ResponsiveContainer","width","LineChart","data","margin","top","right","left","bottom","XAxis","dataKey","YAxis","CartesianGrid","strokeDasharray","Tooltip","Legend","Line","stroke","activeDot","r","layout","CustomizedDot","cx","cy","value","x","y","fill","viewBox","d","dot","ReferenceLine","label","padding","connectNulls","syncId","AreaChart","Area","Brush","B","AppRowSimpleContainer","Col","xs","xl","SimpleLineChart","VerticalLineChart","CustomizedDotLineChart","LineChartWithReferenceLines","DashedLineChart","LineChartWithXAxisPading","SynchronizedLineChart","LineChartConnectNulls","_extends","Object","assign","arguments","length","prototype","hasOwnProperty","call","apply","_slicedToArray","arr","Array","isArray","_arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ErrorBar","offset","dataPointFormatter","xAxis","yAxis","others","svgProps","filterProps","errorBars","entry","_dataPointFormatter","errorVal","lowBound","highBound","lineCoordinates","_errorVal","scale","yMid","yMin","yMax","xMin","xMax","x1","y1","x2","y2","_scale","xMid","_xMin","_xMax","_yMin","_yMax","React","Layer","concat","coordinates","index","strokeWidth","displayName","generateCategoricalChart","chartName","GraphicalChild","axisComponents","axisType","AxisComp","formatAxisMap"],"sourceRoot":""}