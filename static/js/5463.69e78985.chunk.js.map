{"version":3,"file":"static/js/5463.69e78985.chunk.js","mappings":"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","sources":["@crema/core/AppInfoView/index.js","@crema/core/AppList/ListEmptyResult.js","@crema/core/AppList/ListView.js","@crema/core/AppList/ListFooter.js","@crema/core/AppList/index.js","@crema/core/AppSkeleton/SidebarListSkeleton.js","@crema/core/AppsContainer/AppsContent.js","@crema/core/AppsContainer/AppsFooter.js","@crema/core/AppsContainer/AppsHeader.js","@crema/core/AppsContainer/AppSidebar.js","@crema/core/AppsContainer/index.js","@crema/core/AppsPagination/index.js","webpack://ctic/./src/@crema/core/AppsSideBarFolderItem/index.module.scss?27cc","@crema/core/AppsSideBarFolderItem/index.js","webpack://ctic/./src/@crema/core/AppsStarredIcon/index.module.scss?1915","@crema/core/AppsStarredIcon/index.js","webpack://ctic/./src/pages/apps/Mail/MailsList/index.module.scss?e6c1","pages/apps/Mail/MailsList/MailContentHeader/CheckedMailActions.js","pages/apps/Mail/MailsList/MailContentHeader/MoreOptions.js","pages/apps/Mail/MailsList/MailContentHeader/index.js","pages/apps/Mail/MailsList/MailListItem/index.js","@crema/core/AppSkeleton/EmailListSkeleton.js","webpack://ctic/./src/pages/apps/Mail/MailsList/MailListItemMobile/index.module.scss?edd2","pages/apps/Mail/MailsList/MailListItemMobile/index.js","pages/apps/Mail/MailsList/index.js","webpack://ctic/./src/pages/apps/Mail/ComposeMail/index.module.scss?9fd9","pages/apps/Mail/ComposeMail/index.js","pages/apps/Mail/MailSideBar/ChatWindow.js","webpack://ctic/./src/pages/apps/Mail/MailSideBar/index.module.scss?f91f","pages/apps/Mail/MailSideBar/ConnectionListItem.js","pages/apps/Mail/MailSideBar/LabelItem.js","pages/apps/Mail/MailSideBar/index.js","webpack://ctic/./src/pages/apps/Mail/MailDetail/index.module.scss?b54d","pages/apps/Mail/MailDetail/MailDetailHeader/index.js","pages/apps/Mail/MailDetail/MailDetailBody/ReplyMail.js","pages/apps/Mail/MailDetail/MailDetailBody/MessageItem.js","pages/apps/Mail/MailDetail/MailDetailBody/index.js","@crema/core/AppSkeleton/MailDetailSkeleton.js","pages/apps/Mail/MailDetail/index.js","pages/apps/Mail/index.js","webpack://ctic/./src/@crema/core/AppList/index.module.scss?d576","webpack://ctic/./src/@crema/core/AppsContainer/index.module.scss?3797"],"sourcesContent":["import React, {useEffect} from 'react';\r\n// import {message} from 'react-bootstrap';\r\nimport AppLoader from '@crema/core/AppLoader';\r\nimport {useSelector} from 'react-redux';\r\n// import {useDispatch} from 'react-redux';\r\n// import {hideMessage} from '../../../redux/actions';\r\n\r\nconst AppInfoView = () => {\r\n  const {loading, error, displayMessage} = useSelector(({common}) => common);\r\n  // const dispatch = useDispatch();\r\n  //\r\n  // useEffect(() => {\r\n  //   if (error) {\r\n  //     message.error(error);\r\n  //     dispatch(hideMessage());\r\n  //   }\r\n  // }, [error]);\r\n  //\r\n  // useEffect(() => {\r\n  //   if (displayMessage) {\r\n  //     message.success(displayMessage);\r\n  //     dispatch(hideMessage());\r\n  //   }\r\n  // }, [displayMessage]);\r\n\r\n  return <>{loading ? <AppLoader /> : null}</>;\r\n};\r\n\r\nexport default AppInfoView;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport IntlMessages from '../../utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, ProgressBar} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nconst ListEmptyResult = ({\r\n  loader,\r\n  placeholder,\r\n  loading,\r\n  title,\r\n  actionTitle,\r\n  content,\r\n  onClick,\r\n}) => {\r\n  if (loading || loader) {\r\n    return (\r\n      <React.Fragment>\r\n        {placeholder ? (\r\n          placeholder\r\n        ) : (\r\n          <div\r\n            className={clsx(\r\n              styles.emptyListContainer,\r\n              'd-flex align-items-center justify-content-center text-center flex-grow-1 h-100',\r\n            )}>\r\n            <ProgressBar percent={30} />\r\n            <span>Loading...</span>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        className={clsx(\r\n          styles.emptyListContainer,\r\n          'd-flex align-items-center justify-content-center flex-column text-center flex-grow-1 h-100',\r\n        )}>\r\n        {title ? <h4>{title}</h4> : null}\r\n        <p>{content}</p>\r\n\r\n        {actionTitle ? (\r\n          <Button\r\n            type='primary'\r\n            style={{marginTop: 30, minWidth: 150}}\r\n            onClick={onClick}>\r\n            {actionTitle}\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ListEmptyResult;\r\n\r\nListEmptyResult.defaultProps = {\r\n  title: <IntlMessages id='common.noRecordFound' />,\r\n  description: '',\r\n};\r\n\r\nListEmptyResult.prototype = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  actionTitle: PropTypes.string,\r\n  action: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport {useBottomScrollListener} from 'react-bottom-scroll-listener';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\n\r\nconst getEmptyContainer = (ListEmptyComponent) => {\r\n  if (ListEmptyComponent)\r\n    return React.isValidElement(ListEmptyComponent) ? (\r\n      ListEmptyComponent\r\n    ) : (\r\n      <ListEmptyComponent />\r\n    );\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = (ListFooterComponent) => {\r\n  if (ListFooterComponent)\r\n    return React.isValidElement(ListFooterComponent) ? (\r\n      ListFooterComponent\r\n    ) : (\r\n      <ListFooterComponent />\r\n    );\r\n  return null;\r\n};\r\nconst ListView = ({\r\n  renderItem,\r\n  onEndReached,\r\n  data,\r\n  ListFooterComponent,\r\n  ListEmptyComponent,\r\n  interval,\r\n  type,\r\n  duration,\r\n  className,\r\n  delay,\r\n}) => {\r\n  if (!onEndReached) {\r\n    onEndReached = () => {};\r\n  }\r\n\r\n  useBottomScrollListener(onEndReached, 200);\r\n  return (\r\n    <AppAnimateGroup\r\n      className={className}\r\n      animateStyle={{flexDirection: 'column', flexWrap: 'no-wrap'}}\r\n      interval={interval}\r\n      type={type}\r\n      delay={delay}\r\n      duration={duration}>\r\n      {data.length > 0\r\n        ? data.map((item, index) => renderItem(item, index))\r\n        : getEmptyContainer(ListEmptyComponent)}\r\n\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\nListView.propTypes = {\r\n  border: PropTypes.bool,\r\n  type: PropTypes.any,\r\n  interval: PropTypes.any,\r\n  containerStyle: PropTypes.object,\r\n  ListEmptyComponent: PropTypes.node,\r\n  ListFooterComponent: PropTypes.node,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderItem: PropTypes.func,\r\n  delay: PropTypes.any,\r\n  duration: PropTypes.any,\r\n  className: PropTypes.string,\r\n};\r\nListView.defaultProps = {\r\n  border: false,\r\n  data: [],\r\n  onEndReached: () => {},\r\n  type: 'top',\r\n  interval: 50,\r\n  delay: 0,\r\n  duration: 300,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport {ProgressBar} from 'react-bootstrap';\r\nimport clsx from 'clsx';\r\n\r\nconst ListFooter = ({loading, footerText}) => {\r\n  return loading ? (\r\n    <div\r\n      className={clsx(\r\n        styles.loaderProgress,\r\n        'd-flex align-items-center w-100 p-2',\r\n      )}>\r\n      <ProgressBar percent={30} />\r\n      <span>Loading...</span>\r\n    </div>\r\n  ) : (\r\n    <div className={clsx(styles.listFooter, 'd-flex align-items-center')}>\r\n      <p>{footerText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListFooter;\r\n\r\nListFooter.propTypes = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nListFooter.defaultProps = {\r\n  loading: false,\r\n};\r\n","import React from 'react';\r\nimport ListView from './ListView';\r\nimport PropTypes from 'prop-types';\r\nimport ListFooter from './ListFooter';\r\n\r\nconst AppList = ({footerProps, ...props}) => {\r\n  return (\r\n    <ListView\r\n      {...props}\r\n      ListFooterComponent={\r\n        footerProps ? (\r\n          <ListFooter\r\n            loading={footerProps.loading}\r\n            footerText={footerProps.footerText}\r\n          />\r\n        ) : null\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppList;\r\nAppList.propTypes = {\r\n  border: PropTypes.bool,\r\n  ListEmptyComponent: PropTypes.node,\r\n  ListFooterComponent: PropTypes.node,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderItem: PropTypes.func,\r\n  footerProps: PropTypes.string,\r\n  type: PropTypes.any,\r\n  delay: PropTypes.any,\r\n  duration: PropTypes.any,\r\n  interval: PropTypes.any,\r\n  className: PropTypes.string,\r\n};\r\nAppList.defaultProps = {\r\n  border: false,\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst SidebarItem = () => (\r\n  <ContentLoader viewBox='0 0 200 45'>\r\n    <rect x='0' y='10' rx='0' ry='0' width='20' height='20' />\r\n    <rect x='35' y='12' rx='2' ry='2' width='100' height='15' />\r\n  </ContentLoader>\r\n);\r\nconst SidebarListSkeleton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SidebarListSkeleton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport AppScrollbar from '../AppScrollbar';\r\nimport styles from './index.module.scss';\r\n\r\nconst AppsContent = (props) => {\r\n  const {children, isDetailView, fullView} = props;\r\n\r\n  return (\r\n    <AppScrollbar\r\n      className={clsx(\r\n        styles.appsContentContainer,\r\n        'd-flex flex-column',\r\n        isDetailView && styles.isDetailView,\r\n        fullView && styles.fullView,\r\n      )}>\r\n      {children}\r\n    </AppScrollbar>\r\n  );\r\n};\r\n\r\nexport default AppsContent;\r\n\r\nAppsContent.defaultProps = {isDetailView: false};\r\n\r\nAppsContent.propTypes = {\r\n  children: PropTypes.node,\r\n  isDetailView: PropTypes.bool,\r\n  fullView: PropTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst AppsFooter = (props) => {\r\n  const {children, className, ...rest} = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(styles.appsFooter, 'apps-footer', className)}\r\n      {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsFooter;\r\n\r\nAppsFooter.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst AppsHeader = ({children}) => {\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.appsHeader,\r\n        'apps-header d-flex align-items-center',\r\n      )}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsHeader;\r\nAppsHeader.defaultProps = {};\r\n\r\nAppsHeader.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport {Card, Offcanvas} from 'react-bootstrap';\r\nimport clsx from 'clsx';\r\n\r\nconst AppSidebar = (props) => {\r\n  const {isAppDrawerOpen, setAppDrawerOpen, sidebarContent} = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.appsSidebar,\r\n        'd-flex flex-column',\r\n      )}>\r\n      <Offcanvas\r\n        className={styles.appsOffcanvas}\r\n        closeIcon={null}\r\n        show={isAppDrawerOpen}\r\n        onHide={() => setAppDrawerOpen(!isAppDrawerOpen)}>\r\n        <Offcanvas.Body className='p-0'>\r\n        {sidebarContent}\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n      <Card className={clsx(styles.card, 'd-none h-100 flex-lg-grow-1 d-lg-flex flex-lg-column')}>\r\n        {sidebarContent}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppSidebar;\r\nAppSidebar.propTypes = {\r\n  footer: PropTypes.node,\r\n  setAppDrawerOpen: PropTypes.func,\r\n  sidebarContent: PropTypes.node,\r\n  isAppDrawerOpen: PropTypes.bool,\r\n  fullView: PropTypes.bool,\r\n};\r\n","import React, {useState} from 'react';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport PropTypes from 'prop-types';\r\nimport AppSidebar from './AppSidebar';\r\nimport clsx from 'clsx';\r\nimport styles from './index.module.scss';\r\nimport QueueAnim from 'rc-queue-anim';\r\nimport {useLayoutContext} from '../../utility/AppContextProvider/LayoutContextProvider';\r\nimport {Button, Card} from 'react-bootstrap';\r\nimport {AiOutlineMenu} from 'react-icons/ai';\r\n\r\nconst AppsContainer = (props) => {\r\n  const [isAppDrawerOpen, setAppDrawerOpen] = useState(false);\r\n  const {footer, navStyle} = useLayoutContext();\r\n  const {title, noContentAnimation, sidebarContent, fullView, children} = props;\r\n  return (\r\n    <div className={clsx(styles.appsWrap, 'd-flex flex-column')}>\r\n      <div\r\n        className={clsx(styles.appsWrapHeader, 'd-flex align-items-center', {\r\n          appsWrapHeaderFull: fullView,\r\n        })}>\r\n        {fullView ? null : (\r\n          <Button\r\n            className={styles.menuBtn}\r\n            onClick={() => setAppDrawerOpen(!isAppDrawerOpen)}>\r\n            <AiOutlineMenu />\r\n          </Button>\r\n        )}\r\n        <QueueAnim style={{zIndex: 3, overflow: 'hidden'}} type='scale'>\r\n          <h2 className='text-truncate' key='title'>\r\n            {title}\r\n          </h2>\r\n        </QueueAnim>\r\n      </div>\r\n\r\n      <div className={clsx(styles.appsContainer, 'd-flex apps-container')}>\r\n        {sidebarContent ? (\r\n          <QueueAnim\r\n            style={{zIndex: 3}}\r\n            type={props.type ? props.type : 'left'}>\r\n            <AppSidebar\r\n              isAppDrawerOpen={isAppDrawerOpen}\r\n              setAppDrawerOpen={setAppDrawerOpen}\r\n              footer={footer}\r\n              fullView={fullView}\r\n              navStyle={navStyle}\r\n              sidebarContent={sidebarContent}\r\n              key='sidebar'\r\n            />\r\n          </QueueAnim>\r\n        ) : null}\r\n        <div\r\n          className={clsx(\r\n            styles.appsMainContent,\r\n            fullView ? styles.appsMainContentFull : '',\r\n            'd-flex flex-column',\r\n          )}>\r\n          {noContentAnimation ? (\r\n            <Card\r\n              key='content'\r\n              className={clsx(\r\n                styles.card,\r\n                'flex-grow-1 d-flex flex-column h-100 overflow-hidden',\r\n              )}\r\n              style={{\r\n                ...props.cardStyle,\r\n              }}>\r\n              {children}\r\n            </Card>\r\n          ) : (\r\n            <QueueAnim\r\n              type={props.type ? props.type : 'right'}\r\n              style={{minHeight: '100%'}}>\r\n              <Card\r\n                key='content'\r\n                className={clsx(\r\n                  styles.card,\r\n                  'flex-grow-1 d-flex flex-column h-100 overflow-hidden',\r\n                )}\r\n                style={{\r\n                  ...props.cardStyle,\r\n                }}>\r\n                {children}\r\n              </Card>\r\n            </QueueAnim>\r\n          )}\r\n\r\n          <AppInfoView />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsContainer;\r\n\r\nAppsContainer.defaultProps = {\r\n  title: '',\r\n  noContentAnimation: false,\r\n};\r\n\r\nAppsContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  cardStyle: PropTypes.object,\r\n  noContentAnimation: PropTypes.bool,\r\n  sidebarContent: PropTypes.node,\r\n  fullView: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  type: PropTypes.any,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Pagination} from 'react-bootstrap';\r\n\r\nconst AppsPagination = ({count, page, onChange, pageSize, className}) => {\r\n  return (\r\n    <Pagination\r\n      component='div'\r\n      total={count}\r\n      pageSize={pageSize}\r\n      className={className}\r\n      page={page}\r\n      backIconButtonProps={{'aria-label': 'Previous Page'}}\r\n      nextIconButtonProps={{'aria-label': 'Next Page'}}\r\n      onChange={onChange}\r\n      rowsPerPageOptions={[]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppsPagination;\r\n\r\nAppsPagination.defaultProps = {\r\n  className: '',\r\n  pageSize: 15,\r\n};\r\n\r\nAppsPagination.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func,\r\n  className: PropTypes.string,\r\n  pageSize: PropTypes.number,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"AppsSideBarFolderItem_listItem__bD+8V\",\"listItemIcon\":\"AppsSideBarFolderItem_listItemIcon__8mcNc\",\"listItemText\":\"AppsSideBarFolderItem_listItemText__ykAey\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {FaRegCheckCircle, FaRegEnvelope, FaRegEnvelopeOpen, FaRegStar} from 'react-icons/fa';\r\nimport {BiArchiveIn, BiCalendarMinus, BiUser, } from 'react-icons/bi';\r\nimport {AiOutlineDelete, AiOutlineSchedule, AiOutlineUnorderedList} from 'react-icons/ai';\r\nimport {FiInfo, FiRefreshCw} from 'react-icons/fi';\r\n\r\nimport styles from './index.module.scss';\r\nimport {HiOutlineRefresh} from 'react-icons/hi';\r\n\r\nconst getIconByName = (iconName) => {\r\n  switch (iconName) {\r\n    case 'check-circle':\r\n      return <FaRegCheckCircle />;\r\n    case 'envelope':\r\n      return <FaRegEnvelope />;\r\n    case 'star':\r\n      return <FaRegStar />;\r\n    case 'calendar-minus':\r\n      return <BiCalendarMinus />;\r\n    case 'user':\r\n      return <BiUser />;\r\n    case 'clock':\r\n      return <AiOutlineSchedule />;\r\n    case 'envelope-open':\r\n      return <FaRegEnvelopeOpen />;\r\n    case 'trash-alt':\r\n      return <AiOutlineDelete />;\r\n    case 'file-archive':\r\n      return <BiArchiveIn />;\r\n    case 'question-circle':\r\n      return <FiInfo />;\r\n    case 'clone':\r\n      return <FiRefreshCw />;\r\n    case 'all':\r\n      return <AiOutlineUnorderedList />;\r\n    case 'frequent':\r\n      return <HiOutlineRefresh />;\r\n  }\r\n};\r\n\r\nconst AppsSideBarFolderItem = ({item, path}) => {\r\n  return (\r\n    <div key={item.id} className={styles.listItem}>\r\n      <NavLink to={path}>\r\n        <span className={styles.listItemIcon}>{getIconByName(item.icon)}</span>\r\n        <span className={styles.listItemText}>{item.name}</span>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsSideBarFolderItem;\r\n\r\nAppsSideBarFolderItem.propTypes = {\r\n  item: PropTypes.object,\r\n  path: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"starIcon\":\"AppsStarredIcon_starIcon__wPdGq\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport AppIconBtn from '../AppIconBtn';\r\nimport {AiOutlineStar, AiFillStar} from 'react-icons/ai';\r\n\r\nconst AppsStarredIcon = ({item, title, smallBtn, onChange}) => {\r\n  return (\r\n    <AppIconBtn\r\n      smallBtn={smallBtn}\r\n      title={title}\r\n      onClick={(e) => onChange(!item.isStarred, item, e)}\r\n    >\r\n      {\r\n        <span className={styles.starIcon}>\r\n          {item.isStarred ? (\r\n            <AiFillStar />\r\n          ) : (\r\n            <AiOutlineStar />\r\n          )}\r\n        </span>\r\n      }\r\n    </AppIconBtn>\r\n  );\r\n};\r\n\r\nexport default AppsStarredIcon;\r\n\r\nAppsStarredIcon.propTypes = {\r\n  item: PropTypes.object,\r\n  onChange: PropTypes.func,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  smallBtn: PropTypes.bool,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mailListItem\":\"MailsList_mailListItem__mDrM1\",\"mailListBtnAction\":\"MailsList_mailListBtnAction__tBf6F\",\"mailListTime\":\"MailsList_mailListTime__vCkS0\",\"mailTagView\":\"MailsList_mailTagView__yTVpM\",\"mailListSub\":\"MailsList_mailListSub__F5Yy0\",\"mailBody\":\"MailsList_mailBody__tNftb\",\"mailBodyMobile\":\"MailsList_mailBodyMobile__U3yry\",\"mailSearch\":\"MailsList_mailSearch__SHU8Z\",\"mailContentHeaderPagination\":\"MailsList_mailContentHeaderPagination__K5qLh\",\"mailCheckedAction\":\"MailsList_mailCheckedAction__j7sbA\",\"mailListContent\":\"MailsList_mailListContent__cHrah\",\"mailListStarred\":\"MailsList_mailListStarred__XMLOE\",\"mailListAvatar\":\"MailsList_mailListAvatar__tH+aa\",\"searchInput\":\"MailsList_searchInput__8AsWx\",\"searchBtn\":\"MailsList_searchBtn__HE5hT\",\"mailListTitle\":\"MailsList_mailListTitle__3xaqx\",\"mail-dots-view\":\"MailsList_mail-dots-view__hCFAc\",\"mail-dots\":\"MailsList_mail-dots__aMSfp\",\"mailTag\":\"MailsList_mailTag__hCc0s\",\"mailListAction\":\"MailsList_mailListAction__jT1hQ\",\"mailListSubTitle\":\"MailsList_mailListSubTitle__xbVDk\",\"mailDescription\":\"MailsList_mailDescription__733JT\",\"mailListDate\":\"MailsList_mailListDate__SjHIH\",\"dropdownToggleBtn\":\"MailsList_dropdownToggleBtn__ECbJB\",\"checkWrapper\":\"MailsList_checkWrapper__DnRuZ\"};","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {\r\n  onUpdateMailFolders,\r\n  onUpdateMailLabels,\r\n} from '../../../../../redux/actions';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {Dropdown} from 'react-bootstrap';\r\nimport {BiArchiveIn} from 'react-icons/bi';\r\nimport {HiOutlineFolderRemove} from 'react-icons/hi';\r\nimport {MdLabelOutline} from 'react-icons/md';\r\nimport {AiOutlineDelete, AiOutlineInfoCircle} from 'react-icons/ai';\r\nimport AppIconBtn from '@crema/core/AppIconBtn';\r\nimport styles from '../index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst CheckedMailActions = (props) => {\r\n  const {checkedMails, setCheckedMails} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const folderList = useSelector(({mailApp}) => mailApp.folderList);\r\n\r\n  const onChangeMailFolder = ({key}) => {\r\n    dispatch(onUpdateMailFolders(checkedMails, key));\r\n    setCheckedMails([]);\r\n  };\r\n\r\n  const onSelectLabel = ({key}) => {\r\n    const labelType = labelList.find(\r\n      (label) => label.id.toString() === key.toString(),\r\n    );\r\n    dispatch(onUpdateMailLabels(checkedMails, labelType));\r\n    setCheckedMails([]);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(styles.mailCheckedAction, 'd-flex align-items-center me-1')}>\r\n      <AppIconBtn\r\n        smallBtn\r\n        title={<IntlMessages id='common.archive' />}\r\n        onClick={() => onChangeMailFolder(127)}>\r\n        <BiArchiveIn />\r\n      </AppIconBtn>\r\n\r\n      <AppIconBtn\r\n        smallBtn\r\n        title={<IntlMessages id='common.reportSpam' />}\r\n        onClick={() => onChangeMailFolder(125)}>\r\n        <AiOutlineInfoCircle />\r\n      </AppIconBtn>\r\n\r\n      <AppIconBtn\r\n        smallBtn\r\n        title={<IntlMessages id='common.trash' />}\r\n        onClick={() => onChangeMailFolder(126)}>\r\n        <AiOutlineDelete />\r\n      </AppIconBtn>\r\n\r\n      <Dropdown>\r\n        <Dropdown.Toggle\r\n          variant='success'\r\n          className={clsx(\r\n            styles.dropdownToggleBtn,\r\n            'p-0 bg-transparent border-0 d-flex align-items-center shadow-none',\r\n          )}>\r\n          <AppIconBtn smallBtn title={<IntlMessages id='common.label' />}>\r\n            <MdLabelOutline />\r\n          </AppIconBtn>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu onClick={onSelectLabel}>\r\n          {labelList.map((label) => {\r\n            return (\r\n              <Dropdown.Item href='#/action-1' value={label.id} key={label.id}>\r\n                {label.name}\r\n              </Dropdown.Item>\r\n            );\r\n          })}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n\r\n      <Dropdown>\r\n        <Dropdown.Toggle\r\n          className={clsx(\r\n            styles.dropdownToggleBtn,\r\n            'p-0 bg-transparent border-0 d-flex align-items-center shadow-none',\r\n          )}>\r\n          <AppIconBtn smallBtn title={<IntlMessages id='common.moveTo' />}>\r\n            <HiOutlineFolderRemove />\r\n          </AppIconBtn>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu onClick={onChangeMailFolder}>\r\n          {folderList.map((folder) => {\r\n            return <Dropdown.Item key={folder.id}>{folder.name}</Dropdown.Item>;\r\n          })}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckedMailActions;\r\n\r\nCheckedMailActions.defaultProps = {\r\n  checkedMails: [],\r\n};\r\n\r\nCheckedMailActions.propTypes = {\r\n  checkedMails: PropTypes.array.isRequired,\r\n  setCheckedMails: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  onUpdateMailReadStatus,\r\n  onUpdateMailStarredStatus,\r\n} from '../../../../../redux/actions/MailApp';\r\nimport PropTypes from 'prop-types';\r\nimport {FiMoreVertical} from 'react-icons/fi';\r\nimport {Dropdown} from 'react-bootstrap';\r\nimport AppIconBtn from '@crema/core/AppIconBtn';\r\nimport clsx from 'clsx';\r\nimport styles from '../index.module.scss';\r\nconst MoreOptions = (props) => {\r\n  const {checkedMails, setCheckedMails, path} = props;\r\n\r\n  let unReadOption;\r\n  let readOption;\r\n  let starredOption;\r\n  let unStarredOption;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const mailList = useSelector(({mailApp}) => mailApp.mailList);\r\n\r\n  mailList.map((mail) => {\r\n    if (checkedMails.includes(mail.id) && mail.isRead) {\r\n      unReadOption = true;\r\n    }\r\n    if (checkedMails.includes(mail.id) && !mail.isRead) {\r\n      readOption = true;\r\n    }\r\n    if (checkedMails.includes(mail.id) && mail.isStarred) {\r\n      unStarredOption = true;\r\n    }\r\n    if (checkedMails.includes(mail.id) && !mail.isStarred) {\r\n      starredOption = true;\r\n    }\r\n    return null;\r\n  });\r\n\r\n  const onChangeReadStatus = (statusValue) => {\r\n    const status = !!statusValue;\r\n    dispatch(onUpdateMailReadStatus(checkedMails, status));\r\n    setCheckedMails([]);\r\n  };\r\n\r\n  const onChangeAllReadStatus = (statusValue) => {\r\n    const status = !!statusValue;\r\n    const checkedMails = mailList.map((mail) => mail.id);\r\n    dispatch(onUpdateMailReadStatus(checkedMails, status));\r\n    setCheckedMails([]);\r\n  };\r\n\r\n  const onChangeAllStarred = (status) => {\r\n    const checkedMails = mailList.map((mail) => mail.id);\r\n    dispatch(\r\n      onUpdateMailStarredStatus(checkedMails, status, path[path.length - 1]),\r\n    );\r\n    setCheckedMails([]);\r\n  };\r\n\r\n  const onChangeStarredStatus = (status) => {\r\n    dispatch(\r\n      onUpdateMailStarredStatus(checkedMails, status, path[path.length - 1]),\r\n    );\r\n    setCheckedMails([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {checkedMails.length > 0 ? (\r\n        <Dropdown align='start'>\r\n          <Dropdown.Toggle\r\n            className={clsx(\r\n              styles.dropdownToggleBtn,\r\n              'p-0 bg-transparent border-0 d-flex align-items-center shadow-none',\r\n            )}>\r\n            <AppIconBtn smallBtn>\r\n              <FiMoreVertical />\r\n            </AppIconBtn>\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            {readOption ? (\r\n              <Dropdown.Item onClick={() => onChangeReadStatus(1)}>\r\n                <IntlMessages id='mailApp.markAsRead' />\r\n              </Dropdown.Item>\r\n            ) : null}\r\n            {unReadOption ? (\r\n              <Dropdown.Item onClick={() => onChangeReadStatus(0)}>\r\n                <IntlMessages id='mailApp.markAsUnread' />\r\n              </Dropdown.Item>\r\n            ) : null}\r\n            {starredOption ? (\r\n              <Dropdown.Item onClick={() => onChangeStarredStatus(1)}>\r\n                <IntlMessages id='mailApp.markAsImportant' />\r\n              </Dropdown.Item>\r\n            ) : null}\r\n            {unStarredOption ? (\r\n              <Dropdown.Item onClick={() => onChangeStarredStatus(0)}>\r\n                <IntlMessages id='mailApp.markAsNotImportant' />\r\n              </Dropdown.Item>\r\n            ) : null}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      ) : (\r\n        <Dropdown align='start'>\r\n          <Dropdown.Toggle\r\n            className={clsx(\r\n              styles.dropdownToggleBtn,\r\n              'p-0 bg-transparent border-0 d-flex align-items-center shadow-none',\r\n            )}>\r\n            <AppIconBtn smallBtn>\r\n              <FiMoreVertical />\r\n            </AppIconBtn>\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item onClick={() => onChangeAllReadStatus(1)}>\r\n              <IntlMessages id='mailApp.markAllAsRead' />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => onChangeAllReadStatus(0)}>\r\n              <IntlMessages id='mailApp.markAllAsUnread' />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => onChangeAllStarred(1)}>\r\n              <IntlMessages id='mailApp.markAllAsImportant' />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => onChangeAllStarred(0)}>\r\n              <IntlMessages id='mailApp.markAllAsNotImportant' />\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoreOptions;\r\n\r\nMoreOptions.defaultProps = {\r\n  checkedMails: [],\r\n};\r\n\r\nMoreOptions.propTypes = {\r\n  checkedMails: PropTypes.array.isRequired,\r\n  setCheckedMails: PropTypes.func,\r\n  path: PropTypes.any.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport CheckedMailActions from './CheckedMailActions';\r\nimport AppsPagination from '@crema/core/AppsPagination';\r\nimport {Form, InputGroup, FormControl} from 'react-bootstrap';\r\nimport {Search} from 'react-bootstrap-icons';\r\nimport styles from '../index.module.scss';\r\nimport MoreOptions from './MoreOptions';\r\nimport {useIntl} from 'react-intl';\r\nimport clsx from 'clsx';\r\n\r\nconst MailContentHeader = (props) => {\r\n  const {path, checkedMails, setCheckedMails, page, onChange} = props;\r\n\r\n  const mailList = useSelector(({mailApp}) => mailApp.mailList);\r\n\r\n  const totalMails = useSelector(({mailApp}) => mailApp.totalMails);\r\n\r\n  const onHandleMasterCheckbox = (event) => {\r\n    if (event.target.checked) {\r\n      const mailIds = mailList.map((mail) => mail.id);\r\n      setCheckedMails(mailIds);\r\n    } else {\r\n      setCheckedMails([]);\r\n    }\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div className='d-flex flex-row align-items-center'>\r\n        <Form.Check\r\n          color='primary'\r\n          checked={\r\n            mailList.length > 0 && checkedMails.length === mailList.length\r\n          }\r\n          onChange={onHandleMasterCheckbox}\r\n        />\r\n\r\n        <InputGroup className={styles.mailSearch}>\r\n          <FormControl\r\n            className={styles.searchInput}\r\n            placeholder={\r\n              checkedMails.length > 0 ? null : messages['common.searchHere']\r\n            }\r\n            aria-label={\r\n              checkedMails.length > 0 ? null : messages['common.searchHere']\r\n            }\r\n            aria-describedby='basic-addon2'\r\n          />\r\n          <InputGroup.Text className={styles.searchBtn} id='basic-addon2'>\r\n            <Search />\r\n          </InputGroup.Text>\r\n        </InputGroup>\r\n        {checkedMails.length > 0 ? (\r\n          <CheckedMailActions\r\n            checkedMails={checkedMails}\r\n            setCheckedMails={setCheckedMails}\r\n          />\r\n        ) : null}\r\n\r\n        <MoreOptions\r\n          checkedMails={checkedMails}\r\n          setCheckedMails={setCheckedMails}\r\n          path={path}\r\n        />\r\n      </div>\r\n      {mailList.length > 0 ? (\r\n        <AppsPagination\r\n          className={clsx(\r\n            styles.mailContentHeaderPagination,\r\n            'ms-auto d-flex align-items-center',\r\n          )}\r\n          count={totalMails}\r\n          page={page}\r\n          onChange={onChange}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(MailContentHeader);\r\n\r\nMailContentHeader.defaultProps = {\r\n  checkedMails: [],\r\n  page: 0,\r\n};\r\n\r\nMailContentHeader.propTypes = {\r\n  checkedMails: PropTypes.array,\r\n  setCheckedMails: PropTypes.func,\r\n  page: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n  path: PropTypes.any,\r\n};\r\n","import React from 'react';\r\n\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport {Paperclip} from 'react-bootstrap-icons';\r\nimport styles from '../index.module.scss';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport AppIconBtn from '@crema/core/AppIconBtn';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {BiArchiveIn} from 'react-icons/bi';\r\nimport {AiOutlineDelete, AiOutlineInfoCircle} from 'react-icons/ai';\r\nimport {FiMail} from 'react-icons/fi';\r\nimport {\r\n  onUpdateMailFolders,\r\n  onUpdateSelectedMail,\r\n} from '../../../../../redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport {HiOutlineMailOpen} from 'react-icons/hi';\r\nimport {getStringFromHtml} from '@crema/utility/Utils';\r\nimport {MdLabelOutline} from 'react-icons/md';\r\nimport {Form} from 'react-bootstrap';\r\nconst MailListItem = (props) => {\r\n  const {\r\n    mail,\r\n    checkedMails,\r\n    onChangeCheckedMails,\r\n    onChangeStarred,\r\n    onViewMailDetail,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const messages = mail.messages.length;\r\n\r\n  const onGetMailDate = () => {\r\n    const date = mail.messages[messages - 1].sentOn;\r\n    if (\r\n      moment(date, 'ddd, MMM DD, YYYY').format() ===\r\n      moment('ddd, MMM DD, YYYY').format()\r\n    ) {\r\n      return moment(date).format('LT');\r\n    } else {\r\n      return date.split(',')[1];\r\n    }\r\n  };\r\n\r\n  const getSenderName = () => {\r\n    if (messages === 1) {\r\n      return mail.messages[0].sender.name;\r\n    } else if (messages === 2) {\r\n      return `${mail.messages[0].sender.name}, ${mail.messages[1].sender.name}(2)`;\r\n    } else {\r\n      return `${mail.messages[0].sender.name}, ${\r\n        mail.messages[messages - 2].sender.name\r\n      }, ${mail.messages[messages - 1].sender.name}(${messages}})`;\r\n    }\r\n  };\r\n\r\n  const getDescription = () => {\r\n    return mail.messages[messages - 1].description;\r\n  };\r\n\r\n  const onChangeMailFolder = (type) => {\r\n    mail.folderValue = type;\r\n    dispatch(onUpdateMailFolders([mail.id], type));\r\n  };\r\n\r\n  const onChangeReadStatus = () => {\r\n    mail.isRead = !mail.isRead;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n  };\r\n  return (\r\n    <div\r\n      key={mail.id}\r\n      className={clsx(\r\n        styles.mailListItem,\r\n        'd-flex flex-row align-items-center justify-content-start item-hover',\r\n        {\r\n          mailRead: mail.isRead,\r\n        },\r\n      )}\r\n      onClick={() => onViewMailDetail(mail)}>\r\n      <div\r\n        className={clsx(\r\n          styles.mailListContent,\r\n          'd-flex align-items-center w-100',\r\n        )}>\r\n        <span\r\n          className={clsx(styles.checkWrapper, 'd-inline-block pe-1 me-2')}\r\n          onClick={(event) => event.stopPropagation()}>\r\n          <Form.Check\r\n            checked={checkedMails.includes(mail.id)}\r\n            onChange={(event) => onChangeCheckedMails(event, mail.id)}\r\n            color='primary'\r\n          />\r\n        </span>\r\n        <span\r\n          className={styles.mailListStarred}\r\n          onClick={(event) => event.stopPropagation()}>\r\n          <AppsStarredIcon\r\n            item={mail}\r\n            onChange={() => onChangeStarred(!mail.isStarred, mail)}\r\n          />\r\n        </span>\r\n        <div\r\n          className={clsx(\r\n            styles.mailListAvatar,\r\n            'p-0 position-relative d-inline-block overflow-hidden text-center',\r\n          )}>\r\n          {getSenderName().charAt(0).toUpperCase()}\r\n        </div>\r\n        <p className={clsx(styles.mailListTitle, 'mb-0 text-truncate')}>\r\n          {getSenderName()}\r\n        </p>\r\n      </div>\r\n\r\n      <div\r\n        className={clsx(\r\n          styles.mailListAction,\r\n          'd-flex flex-row align-items-center position-relative',\r\n        )}>\r\n        <div\r\n          className={clsx(\r\n            styles.mailListSub,\r\n            'd-flex align-items-center mb-0 overflow-hidden',\r\n          )}>\r\n          <p className={clsx(styles.mailListSubTitle, 'mb-0')}>\r\n            {mail.subject}\r\n          </p>\r\n          <p className={clsx(styles.mailDescription, 'mb-0 text-truncate')}>\r\n            {getStringFromHtml(getDescription())}\r\n          </p>\r\n        </div>\r\n\r\n        {mail.label ? (\r\n          <span className={styles.mailTagView}>\r\n            <span className={styles.mailTag} style={{color: mail.label.color}}>\r\n              <MdLabelOutline />\r\n              <ReactTooltip>{mail.label.name}</ReactTooltip>\r\n            </span>\r\n          </span>\r\n        ) : null}\r\n\r\n        <span\r\n          className={clsx(\r\n            styles.mailListTime,\r\n            'ms-auto ps-2 d-flex justify-content-end align-items-center',\r\n          )}>\r\n          {mail.hasAttachments ? <Paperclip /> : null}\r\n          <span className={clsx(styles.mailListDate, 'ps-1')}>\r\n            {onGetMailDate()}\r\n          </span>\r\n        </span>\r\n        <div\r\n          className={clsx(\r\n            styles.mailListBtnAction,\r\n            'd-flex flex-row align-items-center overflow-hidden',\r\n          )}>\r\n          <AppIconBtn\r\n            smallBtn\r\n            title={<IntlMessages id='common.archive' />}\r\n            onClick={() => onChangeMailFolder(127)}>\r\n            <BiArchiveIn />\r\n          </AppIconBtn>\r\n\r\n          <AppIconBtn\r\n            smallBtn\r\n            title={<IntlMessages id='common.trash' />}\r\n            onClick={() => onChangeMailFolder(126)}>\r\n            <AiOutlineDelete />\r\n          </AppIconBtn>\r\n\r\n          <AppIconBtn\r\n            smallBtn\r\n            title={\r\n              mail.isRead ? (\r\n                <IntlMessages id='mailApp.markAsUnread' />\r\n              ) : (\r\n                <IntlMessages id='mailApp.markAsRead' />\r\n              )\r\n            }\r\n            onClick={onChangeReadStatus}>\r\n            {mail.isRead ? <FiMail /> : <HiOutlineMailOpen />}\r\n          </AppIconBtn>\r\n\r\n          <AppIconBtn\r\n            smallBtn\r\n            title={<IntlMessages id='common.reportSpam' />}\r\n            onClick={() => onChangeMailFolder(125)}>\r\n            <AiOutlineInfoCircle />\r\n          </AppIconBtn>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MailListItem;\r\n\r\nMailListItem.defaultProps = {\r\n  labelList: [],\r\n  checkedMails: [],\r\n};\r\n\r\nMailListItem.propTypes = {\r\n  mail: PropTypes.object.isRequired,\r\n  labelList: PropTypes.array,\r\n  checkedMails: PropTypes.array,\r\n  onChangeCheckedMails: PropTypes.func,\r\n  onChangeStarred: PropTypes.func,\r\n  onViewMailDetail: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nexport const MailItem = () => (\r\n  <ContentLoader viewBox='10 0 430 25'>\r\n    <rect x='15' y='10' rx='0' ry='0' width='10' height='10' />\r\n    <rect x='30' y='10' rx='10' ry='10' width='10' height='10' />\r\n    <rect x='50' y='10' rx='0' ry='0' width='40' height='10' />\r\n    <rect x='100' y='10' rx='0' ry='0' width='300' height='10' />\r\n    <rect x='410' y='10' rx='0' ry='0' width='20' height='10' />\r\n  </ContentLoader>\r\n);\r\nconst EmailListSkeleton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n      <MailItem />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EmailListSkeleton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mailListItemMobile\":\"MailListItemMobile_mailListItemMobile__ZwZQt\",\"mailListAvatarMobileView\":\"MailListItemMobile_mailListAvatarMobileView__bUm8L\",\"mailListAvatarMobile\":\"MailListItemMobile_mailListAvatarMobile__Nkl3D\",\"mailListContentMobile\":\"MailListItemMobile_mailListContentMobile__5zDBX\",\"mail-list-time\":\"MailListItemMobile_mail-list-time__bAOPh\",\"mailListMainContentMobile\":\"MailListItemMobile_mailListMainContentMobile__zOrI7\",\"mailListActionMobile\":\"MailListItemMobile_mailListActionMobile__yREAO\",\"mailListTimeMobile\":\"MailListItemMobile_mailListTimeMobile__DQ8ZD\",\"mailListTitleMobile\":\"MailListItemMobile_mailListTitleMobile__rGRuJ\",\"mailListSubTitleMobile\":\"MailListItemMobile_mailListSubTitleMobile__0UBSM\",\"mailDescriptionMobile\":\"MailListItemMobile_mailDescriptionMobile__JoJCw\",\"mailListDate\":\"MailListItemMobile_mailListDate__Ex18Y\"};","import React from 'react';\r\n\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport {getStringFromHtml} from '@crema/utility/Utils';\r\nimport {CheckLg} from 'react-bootstrap-icons';\r\n\r\nconst MailListItemMobile = (props) => {\r\n  const {\r\n    mail,\r\n    checkedMails,\r\n    onChangeCheckedMails,\r\n    onChangeStarred,\r\n    onViewMailDetail,\r\n  } = props;\r\n\r\n  const messages = mail.messages.length;\r\n\r\n  const onGetMailDate = () => {\r\n    const date = mail.messages[messages - 1].sentOn;\r\n    if (\r\n      moment(date, 'ddd, MMM DD, YYYY').format() ===\r\n      moment('ddd, MMM DD, YYYY').format()\r\n    ) {\r\n      return moment(date).format('LT');\r\n    } else {\r\n      return date.split(',')[1];\r\n    }\r\n  };\r\n\r\n  const getSenderName = () => {\r\n    if (messages === 1) {\r\n      return mail.messages[0].sender.name;\r\n    } else if (messages === 2) {\r\n      return `${mail.messages[0].sender.name}, ${mail.messages[1].sender.name}(2)`;\r\n    } else {\r\n      return `${mail.messages[0].sender.name}, ${\r\n        mail.messages[messages - 2].sender.name\r\n      }, ${mail.messages[messages - 1].sender.name}(${messages})`;\r\n    }\r\n  };\r\n\r\n  const getDescription = () => {\r\n    return mail.messages[messages - 1].description;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      key={mail.id}\r\n      className={clsx(\r\n        styles.mailListItemMobile,\r\n        'd-flex flex-row justify-content-start item-hover text-truncate',\r\n        {\r\n          mailRead: mail.isRead,\r\n        },\r\n      )}\r\n      onClick={() => onViewMailDetail(mail)}>\r\n      <div\r\n        className={clsx(\r\n          styles.mailListAvatarMobileView,\r\n          'me-2 d-block p-0 position-relative overflow-hidden text-center',\r\n          {\r\n            checked: checkedMails.includes(mail.id),\r\n          },\r\n        )}\r\n        onClick={(event) => {\r\n          event.stopPropagation();\r\n          onChangeCheckedMails(!checkedMails.includes(mail.id), mail.id);\r\n        }}>\r\n        {checkedMails.includes(mail.id) ? (\r\n          <CheckLg />\r\n        ) : (\r\n          <div\r\n            className={clsx(\r\n              styles.mailListAvatarMobile,\r\n              'me-2 d-block p-0 position-relative overflow-hidden text-center',\r\n            )}>\r\n            {getSenderName().charAt(0).toUpperCase()}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        className={clsx(\r\n          styles.mailListContentMobile,\r\n          'd-flex align-items-center',\r\n        )}>\r\n        <div\r\n          className={clsx(\r\n            styles.mailListMainContentMobile,\r\n            'pe-2 position-relative',\r\n          )}>\r\n          <p className={clsx(styles.mailListTitleMobile, 'mb-0 text-truncate')}>\r\n            {getSenderName()}\r\n          </p>\r\n          <p className={clsx(styles.mailListSubTitleMobile, 'text-truncate')}>\r\n            {mail.subject}\r\n          </p>\r\n          <p\r\n            className={clsx(\r\n              styles.mailDescriptionMobile,\r\n              'mb-0 text-truncate',\r\n            )}>\r\n            {getStringFromHtml(getDescription())}\r\n          </p>\r\n        </div>\r\n\r\n        <div\r\n          className={clsx(\r\n            styles.mailListActionMobile,\r\n            'd-flex flex-column align-items-end',\r\n          )}>\r\n          <span\r\n            className={clsx(styles.mailListTimeMobile, 'position-relative')}>\r\n            <span className={clsx(styles.mailListDate, 'ps-1')}>\r\n              {onGetMailDate(mail.sentOn)}\r\n            </span>\r\n          </span>\r\n\r\n          <span\r\n            className='position-relative mt-1'\r\n            onClick={(event) => event.stopPropagation()}>\r\n            <AppsStarredIcon\r\n              item={mail}\r\n              onChange={() => onChangeStarred(!mail.isStarred, mail)}\r\n            />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MailListItemMobile;\r\n\r\nMailListItemMobile.defaultProps = {\r\n  labelList: [],\r\n  checkedMails: [],\r\n};\r\n\r\nMailListItemMobile.propTypes = {\r\n  mail: PropTypes.object.isRequired,\r\n  labelList: PropTypes.array,\r\n  onChangeStarred: PropTypes.func,\r\n  onViewMailDetail: PropTypes.func,\r\n  checkedMails: PropTypes.array,\r\n  onChangeCheckedMails: PropTypes.func,\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useHistory, useLocation, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport MailContentHeader from './MailContentHeader';\r\nimport MailListItem from './MailListItem';\r\nimport {\r\n  onGetMailList,\r\n  onUpdateMailReadStatus,\r\n  onUpdateMailStarredStatus,\r\n} from '../../../../redux/actions/MailApp';\r\nimport AppsPagination from '@crema/core/AppsPagination';\r\nimport AppsContent from '@crema/core/AppsContainer/AppsContent';\r\nimport AppsHeader from '@crema/core/AppsContainer/AppsHeader';\r\nimport AppsFooter from '@crema/core/AppsContainer/AppsFooter';\r\nimport AppList from '@crema/core/AppList';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport EmailListSkeleton from '@crema/core/AppSkeleton/EmailListSkeleton';\r\nimport MailListItemMobile from './MailListItemMobile';\r\nimport styles from './index.module.scss';\r\n\r\nconst MailsList = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n\r\n  const mailApp = useSelector(({mailApp}) => mailApp);\r\n  const {mailList} = mailApp;\r\n  console.log('mailApp: ', mailApp);\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  const path = pathname.split('/');\r\n\r\n  const loading = useSelector(({common}) => common.loading);\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [pathname]);\r\n\r\n  useEffect(() => {\r\n    const path = pathname.split('/');\r\n    dispatch(onGetMailList(path[path.length - 2], path[path.length - 1], page));\r\n  }, [dispatch, page, pathname]);\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [pathname]);\r\n\r\n  const [checkedMails, setCheckedMails] = useState([]);\r\n\r\n  const onChange = (page) => {\r\n    setPage(page - 1);\r\n  };\r\n\r\n  const onChangeCheckedMails = (checked, id) => {\r\n    if (checked) {\r\n      setCheckedMails(checkedMails.concat(id));\r\n    } else {\r\n      setCheckedMails(checkedMails.filter((mailId) => mailId !== id));\r\n    }\r\n  };\r\n\r\n  const onViewMailDetail = (mail) => {\r\n    const changedMailList = [mail.id];\r\n    if (!mail.isRead)\r\n      dispatch(onUpdateMailReadStatus(changedMailList, true, false));\r\n    history.push(`/apps/mail/${params.name}/${mail.id}`);\r\n  };\r\n\r\n  const onChangeStarred = (checked, mail) => {\r\n    const selectedIdList = [mail.id];\r\n    dispatch(\r\n      onUpdateMailStarredStatus(selectedIdList, checked, path[path.length - 1]),\r\n    );\r\n  };\r\n\r\n  const totalMails = useSelector(({mailApp}) => mailApp.totalMails);\r\n\r\n  console.log('totalMails', totalMails, mailList);\r\n  return (\r\n    <>\r\n      <AppsHeader>\r\n        <MailContentHeader\r\n          checkedMails={checkedMails}\r\n          setCheckedMails={setCheckedMails}\r\n          onChange={onChange}\r\n          page={page}\r\n          path={path}\r\n        />\r\n      </AppsHeader>\r\n      <AppsContent>\r\n        <div className={styles.mailBody}>\r\n          <AppList\r\n            data={mailList}\r\n            ListEmptyComponent={\r\n              <ListEmptyResult\r\n                loading={loading}\r\n                placeholder={<EmailListSkeleton />}\r\n              />\r\n            }\r\n            renderItem={(mail) => (\r\n              <MailListItem\r\n                mail={mail}\r\n                key={mail.id}\r\n                labelList={labelList}\r\n                onChangeCheckedMails={onChangeCheckedMails}\r\n                checkedMails={checkedMails}\r\n                onViewMailDetail={onViewMailDetail}\r\n                onChangeStarred={onChangeStarred}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className={styles.mailBodyMobile}>\r\n          <AppList\r\n            data={mailList}\r\n            ListEmptyComponent={\r\n              <ListEmptyResult\r\n                loading={loading}\r\n                placeholder={<EmailListSkeleton />}\r\n              />\r\n            }\r\n            renderItem={(mail) => (\r\n              <MailListItemMobile\r\n                mail={mail}\r\n                key={mail.id}\r\n                labelList={labelList}\r\n                onViewMailDetail={onViewMailDetail}\r\n                onChangeStarred={onChangeStarred}\r\n                checkedMails={checkedMails}\r\n                onChangeCheckedMails={onChangeCheckedMails}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n      </AppsContent>\r\n      {mailList.length > 0 ? (\r\n        <div className='d-block d-sm-none'>\r\n          <AppsFooter>\r\n            <AppsPagination\r\n              count={totalMails}\r\n              page={page}\r\n              onChange={onChange}\r\n            />\r\n          </AppsFooter>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MailsList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mailModalScrollbar\":\"ComposeMail_mailModalScrollbar__fPtEK\",\"mailModalFooter\":\"ComposeMail_mailModalFooter__VRCqn\",\"mailModalBtn\":\"ComposeMail_mailModalBtn__3HRlU\",\"mailModalContent\":\"ComposeMail_mailModalContent__sMFmJ\",\"mailModalTextarea\":\"ComposeMail_mailModalTextarea__cE0rS\",\"btnCC\":\"ComposeMail_btnCC__GUpb1\",\"mailInput\":\"ComposeMail_mailInput__aCdpp\",\"btnBCC\":\"ComposeMail_btnBCC__zwwcL\",\"formGroup\":\"ComposeMail_formGroup__Owbk6\",\"closeBtn\":\"ComposeMail_closeBtn__pCzHl\"};","import React, {useState} from 'react';\r\nimport moment from 'moment';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Form, InputGroup, Modal} from 'react-bootstrap';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {Envelope} from 'react-bootstrap-icons';\r\nimport ReactQuill from 'react-quill';\r\nimport '../../../../shared/styles/vendors/ql-editor.css';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {onComposeMail} from '../../../../redux/actions';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport styles from './index.module.scss';\r\n\r\nexport const isValidEmail = (value) => {\r\n  return value && /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value);\r\n};\r\n\r\nconst ComposeMail = (props) => {\r\n  const {isComposeMail, onCloseComposeMail} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const [isShowBcc, onShowBcc] = useState(false);\r\n\r\n  const [isShowCC, onShowCC] = useState(false);\r\n\r\n  const {messages} = useIntl();\r\n  const {pathname} = useLocation();\r\n\r\n  const onFinish = (values) => {\r\n    const mail = {\r\n      id: Math.floor(Math.random()) * 1000,\r\n      isChecked: false,\r\n      isStarred: false,\r\n      label: {\r\n        id: 211,\r\n        name: 'Crema',\r\n        alias: 'crema',\r\n        icon: <Envelope />,\r\n      },\r\n      sender: {\r\n        name: values.displayName ? values.displayName : values.username,\r\n        email: values.username,\r\n        profilePic: '',\r\n      },\r\n      hasAttachments: false,\r\n      isRead: true,\r\n      folderValue: 122,\r\n      sentOn: moment().format('llll'),\r\n      description: values.content ? values.content : 'No Message',\r\n      subject: values.subject !== '' ? values.subject : 'No Subject',\r\n    };\r\n    console.log('Success:', values);\r\n    dispatch(onComposeMail(mail, pathname));\r\n    onCloseComposeMail(false);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size='lg'\r\n      show={isComposeMail}\r\n      onHide={() => onCloseComposeMail(false)}>\r\n      <Modal.Header className={styles.closeBtn} closeButton>\r\n        <Modal.Title>{<IntlMessages id='Compose Mail' />}</Modal.Title>\r\n      </Modal.Header>\r\n      <AppScrollbar className={styles.mailModalScrollbar}>\r\n        <Form\r\n          className='w-100 h-100 d-flex flex-column'\r\n          name='basic'\r\n          initialValues={{remember: true}}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}>\r\n          <div className={styles.mailModalContent}>\r\n            <InputGroup className={styles.formGroup} hasValidation>\r\n              <Form.Control\r\n                name='mail'\r\n                className={styles.mailInput}\r\n                placeholder={messages['common.to']}\r\n                aria-describedby='basic-addon2'\r\n              />\r\n              <InputGroup.Text\r\n                id='basic-addon2'\r\n                onClick={() => onShowCC(!isShowCC)}\r\n                className={styles.btnCC}>\r\n                <IntlMessages id='common.cc' />\r\n              </InputGroup.Text>\r\n              <InputGroup.Text\r\n                id='basic-addon2'\r\n                className={styles.btnBCC}\r\n                onClick={() => onShowBcc(!isShowBcc)}>\r\n                <IntlMessages id='common.bcc' />\r\n              </InputGroup.Text>\r\n              <Form.Control.Feedback type='invalid'>\r\n                Please input your username!\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n\r\n            {isShowCC ? (\r\n              <Form.Group hasValidation className={styles.formGroup}>\r\n                <Form.Control\r\n                  name='cc'\r\n                  type='email'\r\n                  placeholder={messages['common.cc']}\r\n                />\r\n                <Form.Control.Feedback type='invalid'>\r\n                  Please input your cc!\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            ) : null}\r\n\r\n            {isShowBcc ? (\r\n              <Form.Group hasValidation className={styles.formGroup}>\r\n                <Form.Control\r\n                  name='bcc'\r\n                  type='email'\r\n                  placeholder={messages['common.bcc']}\r\n                />\r\n                <Form.Control.Feedback type='invalid'>\r\n                  Please input your bcc!\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            ) : null}\r\n            <Form.Group hasValidation className={styles.formGroup}>\r\n              <Form.Control\r\n                name='subject'\r\n                placeholder={messages['common.subject']}></Form.Control>\r\n              <Form.Control.Feedback type='invalid'>\r\n                Please input your Subject!\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <ReactQuill\r\n              theme='snow'\r\n              className={styles.mailModalTextarea}\r\n              placeholder={messages['common.writeContent']}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.mailModalFooter}>\r\n            <Button\r\n              varient='primary'\r\n              className={styles.mailModalBtn}\r\n              htmlType='submit'>\r\n              <IntlMessages id='common.send' />\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </AppScrollbar>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ComposeMail;\r\n\r\nComposeMail.defaultProps = {\r\n  connection: null,\r\n};\r\n\r\nComposeMail.propTypes = {\r\n  isComposeMail: PropTypes.bool.isRequired,\r\n  onCloseComposeMail: PropTypes.func.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Launcher} from 'react-chat-window';\r\nimport PropTypes from 'prop-types';\r\nimport './chat-window.scss';\r\n\r\nconst ChatWindow = ({isOpenChat, setOpenChat, connection}) => {\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n  const onMessageWasSent = (message) => {\r\n    setMessageList([...messageList, message]);\r\n  };\r\n\r\n  const onFilesSelected = (fileList) => {\r\n    const objectURL = window.URL.createObjectURL(fileList[0]);\r\n    setMessageList([\r\n      messageList,\r\n      {\r\n        type: 'file',\r\n        author: 'me',\r\n        data: {\r\n          url: objectURL,\r\n          fileName: fileList[0].name,\r\n        },\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpenChat(false);\r\n  };\r\n\r\n  return (\r\n    <Launcher\r\n      agentProfile={{\r\n        teamName: connection.name,\r\n        imageUrl: connection.image,\r\n      }}\r\n      onMessageWasSent={onMessageWasSent}\r\n      onFilesSelected={onFilesSelected}\r\n      messageList={messageList}\r\n      handleClick={handleClick}\r\n      isOpen={isOpenChat}\r\n      showEmoji\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n\r\nChatWindow.defaultProps = {\r\n  connection: null,\r\n};\r\n\r\nChatWindow.propTypes = {\r\n  isOpenChat: PropTypes.bool.isRequired,\r\n  setOpenChat: PropTypes.func.isRequired,\r\n  connection: PropTypes.object,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mailSidebarHeader\":\"MailSideBar_mailSidebarHeader__KZyC2\",\"mailSidebarScrollbar\":\"MailSideBar_mailSidebarScrollbar__Q02S3\",\"mailSidebarContent\":\"MailSideBar_mailSidebarContent__pY3fr\",\"mailSidebarList\":\"MailSideBar_mailSidebarList__2QHbg\",\"mailSidebarTitle\":\"MailSideBar_mailSidebarTitle__A5g8h\",\"mailConnectionListItem\":\"MailSideBar_mailConnectionListItem__a4m+U\",\"mail-connection-avatar\":\"MailSideBar_mail-connection-avatar__DW93M\",\"mailConnectionTitle\":\"MailSideBar_mailConnectionTitle__3MjzG\",\"mailLabelItem\":\"MailSideBar_mailLabelItem__szldp\",\"active\":\"MailSideBar_active__2R8lC\",\"mailDots\":\"MailSideBar_mailDots__w3IWc\",\"avatar\":\"MailSideBar_avatar__VUZQN\"};","import React, {useState} from 'react';\r\nimport ChatWindow from './ChatWindow';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst ConnectionListItem = (props) => {\r\n  const {connection} = props;\r\n  const [isOpenChat, setOpenChat] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => setOpenChat(true)}\r\n        key={connection.id}\r\n        className={clsx(\r\n          styles.mailConnectionListItem,\r\n          'd-flex align-items-start justify-content-start',\r\n        )}>\r\n        <img\r\n          width='40'\r\n          height='40'\r\n          className={clsx(styles.avatar, 'bg-info rounded-circle')}\r\n          alt='Remy Sharp'\r\n          src={connection.image}\r\n        />\r\n        <div className='position-relative'>\r\n          <p className={clsx(styles.mailConnectionTitle, 'mb-0')}>\r\n            {connection.name}\r\n          </p>\r\n          <p>{connection.status}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {isOpenChat ? (\r\n        <ChatWindow\r\n          setOpenChat={setOpenChat}\r\n          isOpenChat={isOpenChat}\r\n          connection={connection}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConnectionListItem;\r\n\r\nConnectionListItem.defaultProps = {\r\n  connection: null,\r\n};\r\n\r\nConnectionListItem.propTypes = {\r\n  connection: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './index.module.scss';\r\n\r\nconst LabelItem = ({label}) => {\r\n  return (\r\n    <div key={label.id} className={styles.mailLabelItem}>\r\n      <NavLink to={`/apps/mail/label/${label.alias}`}>\r\n        <span\r\n          className={styles.mailDots}\r\n          style={{backgroundColor: label.color}}\r\n        />\r\n        {label.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LabelItem;\r\n\r\nLabelItem.propTypes = {\r\n  label: PropTypes.object.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {useSelector} from 'react-redux';\r\nimport ComposeMail from '../ComposeMail';\r\nimport ConnectionListItem from './ConnectionListItem';\r\nimport AppsSideBarFolderItem from '@crema/core/AppsSideBarFolderItem';\r\nimport LabelItem from './LabelItem';\r\nimport AppList from '@crema/core/AppList';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport SidebarPlaceholder from '@crema/core/AppSkeleton/SidebarListSkeleton';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport {Button, ListGroup} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\nimport {AiOutlinePlus} from \"react-icons/ai\";\r\n\r\nconst MailSidebar = () => {\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const connectionList = useSelector(({mailApp}) => mailApp.connectionList);\r\n\r\n  const folderList = useSelector(({mailApp}) => mailApp.folderList);\r\n\r\n  const [isComposeMail, setComposeMail] = useState(false);\r\n\r\n  const onOpenComposeMail = () => {\r\n    setComposeMail(true);\r\n  };\r\n\r\n  const onCloseComposeMail = () => {\r\n    setComposeMail(false);\r\n  };\r\n  console.log('folderList', folderList);\r\n  return (\r\n    <>\r\n      {labelList || connectionList || folderList ? (\r\n        <>\r\n          <div className={styles.mailSidebarHeader}>\r\n            <Button variant='outline-primary' onClick={onOpenComposeMail}>\r\n              <AiOutlinePlus/>\r\n              <IntlMessages id='common.compose'/>\r\n            </Button>\r\n          </div>\r\n\r\n          <AppScrollbar className={styles.mailSidebarScrollbar}>\r\n            <div className={clsx(styles.mailSidebarContent, 'pb-2')}>\r\n              <ListGroup\r\n                className={clsx(styles.mailSidebarList, 'mb-1')}\r\n                component='nav'\r\n                aria-label='main mailbox folders'>\r\n                <AppList\r\n                  data={folderList}\r\n                  ListEmptyComponent={\r\n                    <ListEmptyResult\r\n                      loading={true}\r\n                      placeholder={<SidebarPlaceholder/>}\r\n                    />\r\n                  }\r\n                  renderItem={(item) => (\r\n                    <AppsSideBarFolderItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      path={`/apps/mail/folder/${item.alias}`}\r\n                    />\r\n                  )}\r\n                />\r\n              </ListGroup>\r\n\r\n              <h5 className={styles.mailSidebarTitle}>\r\n                <IntlMessages id='common.labels'/>\r\n              </h5>\r\n\r\n              <ListGroup\r\n                className={clsx(styles.mailSidebarList, 'mb-1')}\r\n                component='nav'\r\n                aria-label='main mailbox folders'>\r\n                <AppList\r\n                  data={labelList}\r\n                  ListEmptyComponent={\r\n                    <ListEmptyResult\r\n                      loading={true}\r\n                      placeholder={<SidebarPlaceholder/>}\r\n                    />\r\n                  }\r\n                  renderItem={(label) => (\r\n                    <LabelItem key={label.id} label={label}/>\r\n                  )}\r\n                />\r\n              </ListGroup>\r\n              <h5 className={styles.mailSidebarTitle}>\r\n                <IntlMessages id='common.connections'/>\r\n              </h5>\r\n\r\n              <ListGroup>\r\n                <AppList\r\n                  data={connectionList}\r\n                  ListEmptyComponent={\r\n                    <ListEmptyResult\r\n                      loading={true}\r\n                      placeholder={<SidebarPlaceholder/>}\r\n                    />\r\n                  }\r\n                  renderItem={(connection) => {\r\n                    return (\r\n                      <ConnectionListItem\r\n                        connection={connection}\r\n                        key={connection.id}\r\n                      />\r\n                    );\r\n                  }}\r\n                />\r\n              </ListGroup>\r\n            </div>\r\n          </AppScrollbar>\r\n        </>\r\n      ) : null}\r\n\r\n      {isComposeMail ? (\r\n        <ComposeMail\r\n          isComposeMail={isComposeMail}\r\n          onCloseComposeMail={onCloseComposeMail}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MailSidebar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mailDetailBodyContent\":\"MailDetail_mailDetailBodyContent__IOX6l\",\"mailDetailMessageContent\":\"MailDetail_mailDetailMessageContent__OCSGw\",\"mailDetailBodyHeader\":\"MailDetail_mailDetailBodyHeader__Ig817\",\"mailDetailUser\":\"MailDetail_mailDetailUser__9lP+Z\",\"mailDetailUserContent\":\"MailDetail_mailDetailUserContent__7U1S9\",\"mailDetailUserDescription\":\"MailDetail_mailDetailUserDescription__oeLpq\",\"mailDetailAvatar\":\"MailDetail_mailDetailAvatar__UMKsl\",\"mailDetailBreakAll\":\"MailDetail_mailDetailBreakAll__jnbn-\",\"mailDetailBodyHeaderAction\":\"MailDetail_mailDetailBodyHeaderAction__+i1yA\",\"mailDetailDescription\":\"MailDetail_mailDetailDescription__iA+8N\",\"mailDetailSubjectHeaderAction\":\"MailDetail_mailDetailSubjectHeaderAction__9ADBw\",\"mailDetailForm\":\"MailDetail_mailDetailForm__Ru2Mr\",\"mailDetailTextarea\":\"MailDetail_mailDetailTextarea__9nkaZ\",\"mailDetailBtn\":\"MailDetail_mailDetailBtn__VpYpf\",\"mailDescriptionName\":\"MailDetail_mailDescriptionName__OCXhg\",\"mailDetailArrow\":\"MailDetail_mailDetailArrow__VI1JW\",\"dropdownToggleBtn\":\"MailDetail_dropdownToggleBtn__nVFJH\",\"btnCC\":\"MailDetail_btnCC__ehX7d\",\"formGroup\":\"MailDetail_formGroup__l8R64\",\"mailDetailHeader\":\"MailDetail_mailDetailHeader__uo3ZB\"};","import React from 'react';\r\nimport {\r\n  onUpdateMailFolders,\r\n  onUpdateSelectedMail,\r\n} from '../../../../../redux/actions/MailApp';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {useHistory} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {Dropdown} from 'react-bootstrap';\r\nimport {BiArchiveIn} from 'react-icons/bi';\r\nimport {BiArrowBack} from 'react-icons/bi';\r\nimport {HiOutlineMailOpen} from 'react-icons/hi';\r\nimport {FiMoreVertical} from 'react-icons/fi';\r\nimport {MdLabelOutline} from 'react-icons/md';\r\nimport {AiOutlineDelete, AiOutlineInfoCircle} from 'react-icons/ai';\r\nimport AppIconBtn from '@crema/core/AppIconBtn';\r\nimport styles from '../index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst MailDetailHeader = (props) => {\r\n  const {selectedMail} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const onClickBackButton = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const onSelectLabel = ({key}) => {\r\n    const mail = selectedMail;\r\n    const labelType = labelList.find(\r\n      (label) => label.id.toString() === key.toString(),\r\n    );\r\n    mail.label = labelType;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n  };\r\n\r\n  const onChangeMailFolder = (type) => {\r\n    dispatch(onUpdateMailFolders([selectedMail.id], type));\r\n  };\r\n\r\n  const onChangeReadStatus = () => {\r\n    const mail = selectedMail;\r\n    mail.isRead = false;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n    history.goBack();\r\n  };\r\n\r\n  const onChangeStarredStatus = () => {\r\n    const mail = selectedMail;\r\n    mail.isStarred = !mail.isStarred;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n  };\r\n\r\n  if (!selectedMail) return null;\r\n  return (\r\n    <>\r\n      <AppIconBtn\r\n        smallBtn\r\n        className={styles.mailDetailArrow}\r\n        title={<IntlMessages id='common.back' />}\r\n        onClick={onClickBackButton}>\r\n        <BiArrowBack />\r\n      </AppIconBtn>\r\n      <h5 className='mb-0 text-truncate'>\r\n        {selectedMail.subject ? selectedMail.subject : null}\r\n      </h5>\r\n      <div className={clsx(styles.mailDetailHeader, 'd-flex align-items-center')}>\r\n        <AppIconBtn\r\n          smallBtn\r\n          title={<IntlMessages id='common.archive' />}\r\n          onClick={() => onChangeMailFolder(127)}>\r\n          <BiArchiveIn />\r\n        </AppIconBtn>\r\n\r\n        <AppIconBtn\r\n          smallBtn\r\n          title={<IntlMessages id='common.reportSpam' />}\r\n          onClick={() => onChangeMailFolder(125)}>\r\n          <AiOutlineInfoCircle />\r\n        </AppIconBtn>\r\n\r\n        <AppIconBtn\r\n          smallBtn\r\n          title={<IntlMessages id='common.trash' />}\r\n          onClick={() => onChangeMailFolder(126)}>\r\n          <AiOutlineDelete />\r\n        </AppIconBtn>\r\n\r\n        <AppIconBtn\r\n          smallBtn\r\n          title={<IntlMessages id='mailApp.markAsUnread' />}\r\n          onClick={() => onChangeReadStatus()}>\r\n          <HiOutlineMailOpen />\r\n        </AppIconBtn>\r\n\r\n        <Dropdown>\r\n          <AppIconBtn\r\n            smallBtn title={<IntlMessages id='common.label' />}>\r\n            <MdLabelOutline />\r\n          </AppIconBtn>\r\n          <Dropdown.Menu onClick={onSelectLabel}>\r\n            {labelList.map((label) => {\r\n              return (\r\n                <Dropdown.Item value={label.id} key={label.id}>\r\n                  {label.name}\r\n                </Dropdown.Item>\r\n              );\r\n            })}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            className={clsx(\r\n              styles.dropdownToggleBtn,\r\n              'p-0 bg-transparent border-0 d-flex align-items-center shadow-none',\r\n            )}>\r\n            <AppIconBtn\r\n              smallBtn title={<IntlMessages id='common.more' />}>\r\n              <FiMoreVertical />\r\n            </AppIconBtn>\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item onClick={onChangeReadStatus}>\r\n              <IntlMessages id='mailApp.markAsUnread' />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={onChangeStarredStatus}>\r\n              {selectedMail.isStarred ? (\r\n                <IntlMessages id='mailApp.markAsNotImportant' />\r\n              ) : (\r\n                <IntlMessages id='mailApp.markAsImportant' />\r\n              )}\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MailDetailHeader;\r\n\r\nMailDetailHeader.propTypes = {\r\n  selectedMail: PropTypes.object.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport moment from 'moment';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Form, InputGroup} from 'react-bootstrap';\r\nimport {useIntl} from 'react-intl';\r\nimport ReactQuill from 'react-quill';\r\nimport '../../../../../shared/styles/vendors/ql-editor.css';\r\nimport {generateUniqueID} from '@crema/utility/Utils';\r\nimport {senders} from '@crema/services/db/apps/mail/mailList';\r\nimport AppIconBtn from '@crema/core/AppIconBtn';\r\nimport {AiOutlineDelete} from 'react-icons/ai';\r\nimport styles from '../index.module.scss';\r\n\r\nconst ReplyMail = (props) => {\r\n  const [isShowCC, onShowCC] = useState(false);\r\n  const [isShowBcc, onShowBcc] = useState(false);\r\n\r\n  const {messages} = useIntl();\r\n  const {message, isForward, index, onSubmitMail, onDeleteDraft} = props;\r\n\r\n  const onFinish = (values) => {\r\n    onSubmitMail(\r\n      {\r\n        messageId: generateUniqueID(),\r\n        sender: getSender(),\r\n        description: values.description,\r\n        to: [message.sender],\r\n        cc: values.cc,\r\n        bcc: values.bcc,\r\n        isStarred: false,\r\n        sentOn: moment().format('lll'),\r\n      },\r\n      index,\r\n    );\r\n  };\r\n\r\n  const getSender = () => {\r\n    if (message.sender.id === senders[0].id) {\r\n      return message.to[0];\r\n    } else {\r\n      return message.sender;\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      className={styles.mailDetailForm}\r\n      name='basic'\r\n      initialValues={{\r\n        username: isForward ? '' : getSender().email,\r\n        ...message,\r\n        description: '',\r\n      }}\r\n      onFinish={onFinish}>\r\n      <InputGroup className={styles.formGroup} hasValidation>\r\n        <Form.Control\r\n          name='mail'\r\n          placeholder={messages['common.to']}\r\n          aria-describedby='basic-addon2'\r\n        />\r\n        <InputGroup.Text\r\n          id='basic-addon2'\r\n          onClick={() => onShowCC(!isShowCC)}\r\n          className={styles.btnCC}>\r\n          <IntlMessages id='common.cc' />\r\n        </InputGroup.Text>\r\n        <InputGroup.Text\r\n          id='basic-addon2'\r\n          className={styles.btnCC}\r\n          onClick={() => onShowBcc(!isShowBcc)}>\r\n          <IntlMessages id='common.bcc' />\r\n        </InputGroup.Text>\r\n        <Form.Control.Feedback type='invalid'>\r\n          Please input your username!\r\n        </Form.Control.Feedback>\r\n      </InputGroup>\r\n      \r\n      {isShowCC ? (\r\n        <Form.Group hasValidation className={styles.formGroup}>\r\n          <Form.Control\r\n            name='cc'\r\n            type='email'\r\n            placeholder={messages['common.cc']}\r\n          />\r\n          <Form.Control.Feedback type='invalid'>\r\n            Please input your cc!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      ) : null}\r\n\r\n      {isShowBcc ? (\r\n        <Form.Group hasValidation className={styles.formGroup}>\r\n          <Form.Control\r\n            name='bcc'\r\n            type='email'\r\n            placeholder={messages['common.bcc']}\r\n          />\r\n          <Form.Control.Feedback type='invalid'>\r\n            Please input your bcc!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      ) : null}\r\n\r\n      <ReactQuill\r\n        theme='snow'\r\n        className={styles.mailDetailTextarea}\r\n        placeholder={messages['common.writeContent']}\r\n      />\r\n\r\n      <div className='d-flex align-items-center mt-3'>\r\n        <Button\r\n          variant='outline-primary'\r\n          htmlType='submit'\r\n          className={styles.mailDetailBtn}>\r\n          <IntlMessages id='common.send' />\r\n        </Button>\r\n        <div className='ms-auto'>\r\n          <AppIconBtn\r\n            title={<IntlMessages id='common.trash' />}\r\n            onClick={onDeleteDraft}\r\n          >\r\n            <AiOutlineDelete />\r\n          </AppIconBtn>\r\n        </div>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ReplyMail;\r\n\r\nReplyMail.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n  onSubmitMail: PropTypes.func,\r\n  onDeleteDraft: PropTypes.func,\r\n  isForward: PropTypes.bool,\r\n  index: PropTypes.number,\r\n};\r\n","import React, {useState} from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {HiOutlineReply} from 'react-icons/hi';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport {RiShareForwardLine} from 'react-icons/ri';\r\nimport renderHTML from 'react-render-html';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport ReplyMail from './ReplyMail';\r\nimport {BiChevronDown} from 'react-icons/bi';\r\nimport {getStringFromHtml} from '@crema/utility/Utils';\r\nimport {Tooltip, OverlayTrigger, Popover} from 'react-bootstrap';\r\nimport styles from '../index.module.scss';\r\nimport clsx from 'clsx';\r\nimport AppIconBtn from '@crema/core/AppIconBtn';\r\n\r\nconst MessageItem = ({\r\n  message,\r\n  mailLength,\r\n  index,\r\n  onSubmitMail,\r\n  onChangeStarred,\r\n}) => {\r\n  const [isExpanded, setExpanded] = useState(mailLength === index + 1);\r\n  console.log('message', message);\r\n  const [{isReply, isForward}, onSelectMethod] = useState({\r\n    isReply: false,\r\n    isForward: false,\r\n  });\r\n\r\n  const onGetMailDate = (date) => {\r\n    return moment(date).format('lll');\r\n  };\r\n\r\n  const mailDescription = (\r\n    <Popover id='popover-positioned-bottom'>\r\n      <Popover.Body>\r\n        <div className='position-relative'>\r\n          <div className='d-flex align-items-center'>\r\n            <span className={styles.mailDescriptionName}>from:</span>\r\n            <span className='d-flex align-items-center'>\r\n              <strong>{message.sender.name}</strong>\r\n              <span style={{fontSize: 12}}> {`<${message.sender.email}>`}</span>\r\n            </span>\r\n          </div>\r\n          <div className='d-flex align-items-center'>\r\n            <span className={styles.mailDescriptionName}>reply-to:</span>\r\n            <span>{message.to[0].email}</span>\r\n          </div>\r\n          <div className='d-flex align-items-center'>\r\n            <span className={styles.mailDescriptionName}>date:</span>\r\n            <span>{onGetMailDate()}</span>\r\n          </div>\r\n          <div className='d-flex align-items-center'>\r\n            <span className={styles.mailDescriptionName}>subject:</span>\r\n            <span>how you get new orders easily</span>\r\n          </div>\r\n        </div>\r\n      </Popover.Body>\r\n    </Popover>\r\n  );\r\n\r\n  const getHeaderDescription = () => {\r\n    if (isExpanded) {\r\n      return (\r\n        <div>\r\n          <OverlayTrigger\r\n            placement='bottom'\r\n            overlay={\r\n              <Tooltip id='button-tooltip-2'>\r\n                {message.to.map((user) => user.name)}\r\n              </Tooltip>\r\n            }>\r\n            <span\r\n              className='pointer'\r\n              style={{\r\n                display: 'inline-flex',\r\n                alignItems: 'center',\r\n                whiteSpace: 'nowrap',\r\n              }}>\r\n              {`to ${message.to.map((user) => user.email).toString()}`}\r\n            </span>\r\n          </OverlayTrigger>\r\n          <span style={{marginTop: 5, fontSize: 18}}>\r\n            <OverlayTrigger\r\n              trigger='click'\r\n              placement='bottom'\r\n              overlay={mailDescription}>\r\n              <BiChevronDown />\r\n            </OverlayTrigger>\r\n          </span>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <span\r\n          className={clsx(\r\n            styles.mailDetailUserDescription,\r\n            'text-truncate mb-0 d-block',\r\n          )}>\r\n          {getStringFromHtml(message.description)}\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.mailDetailMessageContent}>\r\n      <div\r\n        className={clsx(\r\n          styles.mailDetailBodyHeader,\r\n          'mb-3 d-flex align-items-center',\r\n        )}\r\n        onClick={() => {\r\n          if (mailLength !== index + 1) setExpanded(!isExpanded);\r\n        }}>\r\n        <div\r\n          className={clsx(styles.mailDetailUser, 'd-flex align-items-center')}>\r\n          <div className={clsx(styles.mailDetailAvatar)}>\r\n            {message.sender.name.charAt(0)}\r\n          </div>\r\n          <div\r\n            className={clsx(styles.mailDetailUserContent, 'position-relative')}>\r\n            <div className='d-flex align-items-center'>\r\n              <h3 className='mb-0'>{message.sender.name}</h3>\r\n              {isExpanded ? (\r\n                <span\r\n                  className={\r\n                    styles.mailDetailBreakAll\r\n                  }>{`<${message.sender.email}>`}</span>\r\n              ) : null}\r\n            </div>\r\n            <div>{getHeaderDescription()}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={styles.mailDetailBodyHeaderAction}>\r\n          <span className='mb-0 me-1'>{onGetMailDate(message.sentOn)}</span>\r\n          <div\r\n            className={clsx(\r\n              styles.mailDetailSubjectHeaderAction,\r\n              'd-flex align-items-center',\r\n            )}>\r\n            {isExpanded ? (\r\n              <AppIconBtn\r\n                smallBtn\r\n                title={<IntlMessages id='common.reply' />}\r\n                onClick={() =>\r\n                  onSelectMethod({isReply: true, isForward: false})\r\n                }>\r\n                <HiOutlineReply />\r\n              </AppIconBtn>\r\n            ) : null}\r\n\r\n            <AppsStarredIcon\r\n              smallBtn\r\n              title={<IntlMessages id='common.starred' />}\r\n              item={message}\r\n              onChange={(status, item, e) => {\r\n                e.stopPropagation();\r\n                onChangeStarred(item, status);\r\n              }}\r\n            />\r\n\r\n            {isExpanded ? (\r\n              <AppIconBtn\r\n                smallBtn\r\n                title={<IntlMessages id='common.forward' />}\r\n                onClick={() =>\r\n                  onSelectMethod({isReply: false, isForward: true})\r\n                }>\r\n                <RiShareForwardLine />\r\n              </AppIconBtn>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {isExpanded ? (\r\n        <div className={styles.mailDetailDescription}>\r\n          {renderHTML(message.description)}\r\n        </div>\r\n      ) : null}\r\n      {isReply || isForward ? (\r\n        <ReplyMail\r\n          isForward={isForward}\r\n          message={message}\r\n          index={index}\r\n          onDeleteDraft={() =>\r\n            onSelectMethod({\r\n              isReply: false,\r\n              isForward: false,\r\n            })\r\n          }\r\n          onSubmitMail={(message, index) => {\r\n            onSelectMethod({\r\n              isReply: false,\r\n              isForward: false,\r\n            });\r\n            onSubmitMail(message, index);\r\n          }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(MessageItem);\r\n\r\nMessageItem.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n  mailLength: PropTypes.number.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  onSubmitMail: PropTypes.func.isRequired,\r\n  onChangeStarred: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {onUpdateSelectedMail} from '../../../../../redux/actions/MailApp';\r\nimport PropTypes from 'prop-types';\r\nimport MessageItem from './MessageItem';\r\nimport styles from '../index.module.scss';\r\n\r\nconst MailDetailBody = (props) => {\r\n  const {selectedMail} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmitMail = (message, index) => {\r\n    let messages = selectedMail.messages;\r\n    messages.splice(index + 1, 0, message);\r\n    selectedMail.messages = messages;\r\n    dispatch(onUpdateSelectedMail(selectedMail));\r\n  };\r\n\r\n  const onChangeStarred = (message, isStarred) => {\r\n    message.isStarred = isStarred;\r\n    selectedMail.messages = selectedMail.messages.map((data) =>\r\n      data.messageId === message.messageId ? message : data,\r\n    );\r\n    dispatch(onUpdateSelectedMail(selectedMail));\r\n  };\r\n\r\n  return (\r\n    <div className='p-4'>\r\n      {selectedMail ? (\r\n        <div className={styles.mailDetailBodyContent}>\r\n          {selectedMail.messages.map((message, index) => (\r\n            <MessageItem\r\n              key={index}\r\n              index={index}\r\n              mailLength={selectedMail.messages.length}\r\n              message={message}\r\n              onSubmitMail={onSubmitMail}\r\n              onChangeStarred={onChangeStarred}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(MailDetailBody);\r\n\r\nMailDetailBody.propTypes = {\r\n  selectedMail: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nexport const MailDetailSkeleton = (props) => (\r\n  <ContentLoader\r\n    speed={2}\r\n    width={400}\r\n    height={160}\r\n    viewBox='0 0 400 160'\r\n    backgroundColor='#d9d9d9'\r\n    foregroundColor='#ecebeb'\r\n    {...props}>\r\n    <rect x='48' y='8' rx='3' ry='3' width='88' height='6' />\r\n    <rect x='48' y='26' rx='3' ry='3' width='52' height='6' />\r\n    <rect x='0' y='56' rx='3' ry='3' width='410' height='6' />\r\n    <rect x='0' y='72' rx='3' ry='3' width='380' height='6' />\r\n    <rect x='0' y='88' rx='3' ry='3' width='178' height='6' />\r\n    <circle cx='20' cy='20' r='20' />\r\n  </ContentLoader>\r\n);\r\n","import React, {createRef, useEffect} from 'react';\r\nimport MailDetailHeader from './MailDetailHeader';\r\nimport MailDetailBody from './MailDetailBody';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  onGetSelectedMail,\r\n  onNullifyMail,\r\n} from '../../../../redux/actions/MailApp';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport AppsContent from '@crema/core/AppsContainer/AppsContent';\r\nimport AppsHeader from '@crema/core/AppsContainer/AppsHeader';\r\nimport AppAnimateGroup from '@crema/core/AppAnimateGroup';\r\nimport {MailDetailSkeleton} from '@crema/core/AppSkeleton/MailDetailSkeleton';\r\n\r\nconst MailDetail = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const contentRef = createRef();\r\n\r\n  const {id} = useParams();\r\n  const selectedMail = useSelector(({mailApp}) => mailApp.selectedMail);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetSelectedMail(id));\r\n    return () => {\r\n      onNullifyMail();\r\n    };\r\n  }, [dispatch, id]);\r\n\r\n  if (!selectedMail) {\r\n    return <MailDetailSkeleton />;\r\n  }\r\n\r\n  return (\r\n    <div className='h-100 d-flex flex-column' ref={contentRef}>\r\n      <AppsHeader>\r\n        <MailDetailHeader history={history} selectedMail={selectedMail} />\r\n      </AppsHeader>\r\n      <AppsContent isDetailView>\r\n        <AppAnimateGroup type='bottom'>\r\n          <MailDetailBody\r\n            selectedMail={selectedMail}\r\n            history={history}\r\n            key={'mail_detail'}\r\n          />\r\n        </AppAnimateGroup>\r\n      </AppsContent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MailDetail;\r\n","import React, {useEffect} from 'react';\r\nimport MailsList from './MailsList';\r\nimport {\r\n  onGetConnectionList,\r\n  onGetMailFolderList,\r\n  onGetMailLabelList,\r\n} from '../../../redux/actions/MailApp';\r\nimport {useDispatch} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport AppsContainer from '@crema/core/AppsContainer';\r\nimport MailSidebar from './MailSideBar';\r\nimport {useIntl} from 'react-intl';\r\nimport AppPageMetadata from '@crema/core/AppPageMetadata';\r\nimport MailDetail from './MailDetail';\r\n\r\nconst Mail = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetMailLabelList());\r\n    dispatch(onGetMailFolderList());\r\n    dispatch(onGetConnectionList());\r\n  }, [dispatch]);\r\n\r\n  const onGetMainComponent = () => {\r\n    if (props.match.params.id) {\r\n      return <MailDetail />;\r\n    } else {\r\n      return <MailsList />;\r\n    }\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppsContainer\r\n      title={messages['mailApp.mail']}\r\n      sidebarContent={<MailSidebar />}>\r\n      <AppPageMetadata title='Mail App' />\r\n      {onGetMainComponent()}\r\n    </AppsContainer>\r\n  );\r\n};\r\n\r\nexport default Mail;\r\n\r\nMail.defaultProps = {\r\n  match: null,\r\n};\r\n\r\nMail.propTypes = {\r\n  match: PropTypes.object,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"listFooter\":\"AppList_listFooter__Sh7ys\",\"loaderProgress\":\"AppList_loaderProgress__rZEBy\",\"emptyListContainer\":\"AppList_emptyListContainer__PsPAD\"};","// extracted by mini-css-extract-plugin\nexport default {\"appsWrap\":\"AppsContainer_appsWrap__zvw-4\",\"appsWrapHeader\":\"AppsContainer_appsWrapHeader__szimU\",\"menuBtn\":\"AppsContainer_menuBtn__hKXrB\",\"appsContainer\":\"AppsContainer_appsContainer__ASz5t\",\"appMainFixedFooter\":\"AppsContainer_appMainFixedFooter__1JfeO\",\"appMainFooter\":\"AppsContainer_appMainFooter__qShEH\",\"appsMainContent\":\"AppsContainer_appsMainContent__59PsM\",\"appsMainContentFull\":\"AppsContainer_appsMainContentFull__WJWdT\",\"appsContentContainer\":\"AppsContainer_appsContentContainer__ild+C\",\"fullView\":\"AppsContainer_fullView__vSr4E\",\"scrum-absolute\":\"AppsContainer_scrum-absolute__VqjBV\",\"react-trello-board\":\"AppsContainer_react-trello-board__OycKh\",\"scrum-row\":\"AppsContainer_scrum-row__PRpkM\",\"smooth-dnd-container\":\"AppsContainer_smooth-dnd-container__pGBR-\",\"horizontal\":\"AppsContainer_horizontal__f1Ksg\",\"scrum-col\":\"AppsContainer_scrum-col__Gi57q\",\"react-trello-lane\":\"AppsContainer_react-trello-lane__sS-jH\",\"scrum-board-list-header-card\":\"AppsContainer_scrum-board-list-header-card__+vk2n\",\"scroll-scrum-item\":\"AppsContainer_scroll-scrum-item__JP4Va\",\"vertical\":\"AppsContainer_vertical__KLU+e\",\"appsFooter\":\"AppsContainer_appsFooter__hOjz4\",\"appsHeader\":\"AppsContainer_appsHeader__bf5mr\",\"appsSidebar\":\"AppsContainer_appsSidebar__ZPAXS\",\"card\":\"AppsContainer_card__tJ4dA\",\"heightFull\":\"AppsContainer_heightFull__GtgHE\",\"appsOffcanvas\":\"AppsContainer_appsOffcanvas__psiRa\"};"],"names":["useSelector","common","loading","error","displayMessage","ListEmptyResult","loader","placeholder","title","actionTitle","content","onClick","className","clsx","styles","emptyListContainer","percent","type","style","marginTop","minWidth","defaultProps","id","description","prototype","PropTypes","action","getEmptyContainer","ListEmptyComponent","React","getFooterContainer","ListFooterComponent","ListView","renderItem","onEndReached","data","interval","duration","delay","useBottomScrollListener","AppAnimateGroup","animateStyle","flexDirection","flexWrap","length","map","item","index","border","ListFooter","footerText","loaderProgress","ProgressBar","listFooter","AppList","footerProps","props","SidebarItem","viewBox","x","y","rx","ry","width","height","AppsContent","children","isDetailView","fullView","appsContentContainer","rest","appsFooter","AppsHeader","appsHeader","isAppDrawerOpen","setAppDrawerOpen","sidebarContent","appsSidebar","Offcanvas","appsOffcanvas","closeIcon","show","onHide","Body","Card","card","AppsContainer","useState","useLayoutContext","footer","navStyle","noContentAnimation","appsWrap","appsWrapHeader","appsWrapHeaderFull","Button","menuBtn","zIndex","overflow","appsContainer","appsMainContent","appsMainContentFull","cardStyle","minHeight","AppInfoView","AppsPagination","count","page","onChange","pageSize","component","total","backIconButtonProps","nextIconButtonProps","rowsPerPageOptions","getIconByName","iconName","path","to","icon","name","smallBtn","AppIconBtn","e","isStarred","CheckedMailActions","checkedMails","setCheckedMails","dispatch","useDispatch","labelList","mailApp","folderList","onChangeMailFolder","key","onUpdateMailFolders","IntlMessages","Dropdown","Toggle","variant","Menu","labelType","find","label","toString","onUpdateMailLabels","Item","href","value","folder","MoreOptions","unReadOption","readOption","starredOption","unStarredOption","mailList","mail","includes","isRead","onChangeReadStatus","statusValue","status","onUpdateMailReadStatus","onChangeAllReadStatus","onChangeAllStarred","onUpdateMailStarredStatus","onChangeStarredStatus","align","MailContentHeader","totalMails","messages","useIntl","Form","Check","color","checked","event","target","mailIds","InputGroup","FormControl","Text","withRouter","MailListItem","onChangeCheckedMails","onChangeStarred","onViewMailDetail","getSenderName","sender","folderValue","mailRead","stopPropagation","AppsStarredIcon","charAt","toUpperCase","subject","getStringFromHtml","hasAttachments","date","sentOn","moment","format","split","onGetMailDate","onUpdateSelectedMail","MailItem","MailListItemMobile","history","useHistory","params","useParams","console","log","setPage","pathname","useLocation","useEffect","onGetMailList","concat","filter","mailId","changedMailList","push","selectedIdList","AppsFooter","ComposeMail","isComposeMail","onCloseComposeMail","isShowBcc","onShowBcc","isShowCC","onShowCC","Modal","size","Header","closeButton","Title","AppScrollbar","initialValues","remember","onFinish","values","Math","floor","random","isChecked","alias","displayName","username","email","profilePic","onComposeMail","onFinishFailed","errorInfo","hasValidation","Control","Feedback","Group","theme","varient","htmlType","connection","ChatWindow","isOpenChat","setOpenChat","messageList","setMessageList","agentProfile","teamName","imageUrl","image","onMessageWasSent","message","onFilesSelected","fileList","objectURL","window","URL","createObjectURL","author","url","fileName","handleClick","isOpen","showEmoji","ConnectionListItem","alt","src","backgroundColor","connectionList","setComposeMail","ListGroup","AppsSideBarFolderItem","selectedMail","goBack","isForward","onSubmitMail","onDeleteDraft","getSender","senders","messageId","generateUniqueID","cc","bcc","MessageItem","mailLength","isExpanded","setExpanded","isReply","onSelectMethod","mailDescription","Popover","fontSize","OverlayTrigger","placement","overlay","Tooltip","user","display","alignItems","whiteSpace","trigger","renderHTML","splice","MailDetailSkeleton","speed","foregroundColor","cx","cy","r","contentRef","createRef","onGetSelectedMail","onNullifyMail","ref","Mail","onGetMailLabelList","onGetMailFolderList","onGetConnectionList","AppPageMetadata","match"],"sourceRoot":""}