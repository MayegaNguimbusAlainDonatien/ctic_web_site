{"version":3,"file":"static/js/3074.08a51849.chunk.js","mappings":"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","sources":["@crema/core/AppConfirmationModal/index.js","@crema/core/AppInfoView/index.js","@crema/core/AppList/ListEmptyResult.js","@crema/core/AppList/ListView.js","@crema/core/AppList/ListFooter.js","@crema/core/AppList/index.js","@crema/core/AppRowContainer/index.js","@crema/core/AppSkeleton/SidebarListSkeleton.js","@crema/core/AppsContainer/AppsContent.js","@crema/core/AppsContainer/AppsFooter.js","@crema/core/AppsContainer/AppsHeader.js","@crema/core/AppsContainer/AppSidebar.js","@crema/core/AppsContainer/index.js","@crema/core/AppsPagination/index.js","webpack://ctic/./src/@crema/core/AppsSideBarFolderItem/index.module.scss?27cc","@crema/core/AppsSideBarFolderItem/index.js","webpack://ctic/./src/@crema/core/AppsStarredIcon/index.module.scss?1915","@crema/core/AppsStarredIcon/index.js","webpack://ctic/./src/pages/apps/ToDo/AddNewTask/index.module.scss?c838","pages/apps/ToDo/AddNewTask/AddTaskForm.js","pages/apps/ToDo/AddNewTask/index.js","webpack://ctic/./src/pages/apps/ToDo/TaskSideBar/index.module.scss?455d","pages/apps/ToDo/TaskSideBar/LabelItem.js","pages/apps/ToDo/TaskSideBar/index.js","webpack://ctic/./src/pages/apps/ToDo/TasksList/index.module.scss?cec9","pages/apps/ToDo/TasksList/TaskContentHeader/SelectTasksDropdown.js","@crema/core/AppsDeleteIcon/index.js","pages/apps/ToDo/TasksList/TaskContentHeader/CheckedTasksActions.js","pages/apps/ToDo/TasksList/TaskContentHeader/ViewSelectButtons.js","pages/apps/ToDo/TasksList/TaskContentHeader/index.js","pages/apps/ToDo/TasksList/TaskListItem/Labels.js","pages/apps/ToDo/TasksList/TaskListItem/Priority.js","pages/apps/ToDo/TasksList/TaskListItem/index.js","webpack://ctic/./src/pages/apps/ToDo/TaskDetail/index.module.scss?7d5f","pages/apps/ToDo/TaskDetail/TaskDetailBody/ChangeStaff.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/AssignedStaff.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/DatePicker.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/TaskStatus.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/TaskPriority.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/TaskCreatedByInfo.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/TaskLabel.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/CommentsList/CommentsListItem.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/CommentsList/index.js","pages/apps/ToDo/TaskDetail/TaskDetailBody/index.js","webpack://ctic/./src/pages/apps/ToDo/TasksList/TaskCalendar/index.module.scss?83c8","pages/apps/ToDo/TasksList/TaskCalendar/ViewEditTodo.js","pages/apps/ToDo/TasksList/TaskCalendar/index.js","@crema/core/AppSkeleton/TodoListSkeleton.js","webpack://ctic/./src/pages/apps/ToDo/TasksList/TaskListItemMobile/index.module.scss?bd5b","pages/apps/ToDo/TasksList/TaskListItemMobile/Priority.js","pages/apps/ToDo/TasksList/TaskListItemMobile/index.js","pages/apps/ToDo/TasksList/index.js","pages/apps/ToDo/TaskDetail/TaskDetailHeader/StatusToggleButton.js","pages/apps/ToDo/TaskDetail/TaskDetailHeader/index.js","pages/apps/ToDo/TaskDetail/index.js","pages/apps/ToDo/index.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useUpdatedRef.js","webpack://ctic/./src/@crema/core/AppList/index.module.scss?d576","webpack://ctic/./src/@crema/core/AppRowContainer/index.module.scss?e727","webpack://ctic/./src/@crema/core/AppsContainer/index.module.scss?3797"],"sourcesContent":["import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Modal, Button} from 'react-bootstrap';\r\n\r\nconst AppConfirmationModal = ({open, onDeny, onConfirm, modalTitle, paragraph, title}) => {\r\n  return (\r\n    <Modal show={open} onHide={() => onDeny(false)} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{modalTitle}</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <p>{paragraph}</p>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button variant='outline-primary' onClick={() => onDeny(false)}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant='primary' onClick={onConfirm}>\r\n          Ok\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nAppConfirmationModal.propTypes = {\r\n  modalTitle: PropTypes.any.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onDeny: PropTypes.func.isRequired,\r\n  paragraph: PropTypes.any,\r\n  onConfirm: PropTypes.func.isRequired,\r\n};\r\n\r\nAppConfirmationModal.defaultProps = {\r\n  paragraph: 'Are you sure you want to delete?',\r\n};\r\nexport default AppConfirmationModal;\r\n","import React, {useEffect} from 'react';\r\n// import {message} from 'react-bootstrap';\r\nimport AppLoader from '@crema/core/AppLoader';\r\nimport {useSelector} from 'react-redux';\r\n// import {useDispatch} from 'react-redux';\r\n// import {hideMessage} from '../../../redux/actions';\r\n\r\nconst AppInfoView = () => {\r\n  const {loading, error, displayMessage} = useSelector(({common}) => common);\r\n  // const dispatch = useDispatch();\r\n  //\r\n  // useEffect(() => {\r\n  //   if (error) {\r\n  //     message.error(error);\r\n  //     dispatch(hideMessage());\r\n  //   }\r\n  // }, [error]);\r\n  //\r\n  // useEffect(() => {\r\n  //   if (displayMessage) {\r\n  //     message.success(displayMessage);\r\n  //     dispatch(hideMessage());\r\n  //   }\r\n  // }, [displayMessage]);\r\n\r\n  return <>{loading ? <AppLoader /> : null}</>;\r\n};\r\n\r\nexport default AppInfoView;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport IntlMessages from '../../utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, ProgressBar} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nconst ListEmptyResult = ({\r\n  loader,\r\n  placeholder,\r\n  loading,\r\n  title,\r\n  actionTitle,\r\n  content,\r\n  onClick,\r\n}) => {\r\n  if (loading || loader) {\r\n    return (\r\n      <React.Fragment>\r\n        {placeholder ? (\r\n          placeholder\r\n        ) : (\r\n          <div\r\n            className={clsx(\r\n              styles.emptyListContainer,\r\n              'd-flex align-items-center justify-content-center text-center flex-grow-1 h-100',\r\n            )}>\r\n            <ProgressBar percent={30} />\r\n            <span>Loading...</span>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        className={clsx(\r\n          styles.emptyListContainer,\r\n          'd-flex align-items-center justify-content-center flex-column text-center flex-grow-1 h-100',\r\n        )}>\r\n        {title ? <h4>{title}</h4> : null}\r\n        <p>{content}</p>\r\n\r\n        {actionTitle ? (\r\n          <Button\r\n            type='primary'\r\n            style={{marginTop: 30, minWidth: 150}}\r\n            onClick={onClick}>\r\n            {actionTitle}\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ListEmptyResult;\r\n\r\nListEmptyResult.defaultProps = {\r\n  title: <IntlMessages id='common.noRecordFound' />,\r\n  description: '',\r\n};\r\n\r\nListEmptyResult.prototype = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  actionTitle: PropTypes.string,\r\n  action: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport {useBottomScrollListener} from 'react-bottom-scroll-listener';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\n\r\nconst getEmptyContainer = (ListEmptyComponent) => {\r\n  if (ListEmptyComponent)\r\n    return React.isValidElement(ListEmptyComponent) ? (\r\n      ListEmptyComponent\r\n    ) : (\r\n      <ListEmptyComponent />\r\n    );\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = (ListFooterComponent) => {\r\n  if (ListFooterComponent)\r\n    return React.isValidElement(ListFooterComponent) ? (\r\n      ListFooterComponent\r\n    ) : (\r\n      <ListFooterComponent />\r\n    );\r\n  return null;\r\n};\r\nconst ListView = ({\r\n  renderItem,\r\n  onEndReached,\r\n  data,\r\n  ListFooterComponent,\r\n  ListEmptyComponent,\r\n  interval,\r\n  type,\r\n  duration,\r\n  className,\r\n  delay,\r\n}) => {\r\n  if (!onEndReached) {\r\n    onEndReached = () => {};\r\n  }\r\n\r\n  useBottomScrollListener(onEndReached, 200);\r\n  return (\r\n    <AppAnimateGroup\r\n      className={className}\r\n      animateStyle={{flexDirection: 'column', flexWrap: 'no-wrap'}}\r\n      interval={interval}\r\n      type={type}\r\n      delay={delay}\r\n      duration={duration}>\r\n      {data.length > 0\r\n        ? data.map((item, index) => renderItem(item, index))\r\n        : getEmptyContainer(ListEmptyComponent)}\r\n\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\nListView.propTypes = {\r\n  border: PropTypes.bool,\r\n  type: PropTypes.any,\r\n  interval: PropTypes.any,\r\n  containerStyle: PropTypes.object,\r\n  ListEmptyComponent: PropTypes.node,\r\n  ListFooterComponent: PropTypes.node,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderItem: PropTypes.func,\r\n  delay: PropTypes.any,\r\n  duration: PropTypes.any,\r\n  className: PropTypes.string,\r\n};\r\nListView.defaultProps = {\r\n  border: false,\r\n  data: [],\r\n  onEndReached: () => {},\r\n  type: 'top',\r\n  interval: 50,\r\n  delay: 0,\r\n  duration: 300,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport {ProgressBar} from 'react-bootstrap';\r\nimport clsx from 'clsx';\r\n\r\nconst ListFooter = ({loading, footerText}) => {\r\n  return loading ? (\r\n    <div\r\n      className={clsx(\r\n        styles.loaderProgress,\r\n        'd-flex align-items-center w-100 p-2',\r\n      )}>\r\n      <ProgressBar percent={30} />\r\n      <span>Loading...</span>\r\n    </div>\r\n  ) : (\r\n    <div className={clsx(styles.listFooter, 'd-flex align-items-center')}>\r\n      <p>{footerText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListFooter;\r\n\r\nListFooter.propTypes = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nListFooter.defaultProps = {\r\n  loading: false,\r\n};\r\n","import React from 'react';\r\nimport ListView from './ListView';\r\nimport PropTypes from 'prop-types';\r\nimport ListFooter from './ListFooter';\r\n\r\nconst AppList = ({footerProps, ...props}) => {\r\n  return (\r\n    <ListView\r\n      {...props}\r\n      ListFooterComponent={\r\n        footerProps ? (\r\n          <ListFooter\r\n            loading={footerProps.loading}\r\n            footerText={footerProps.footerText}\r\n          />\r\n        ) : null\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppList;\r\nAppList.propTypes = {\r\n  border: PropTypes.bool,\r\n  ListEmptyComponent: PropTypes.node,\r\n  ListFooterComponent: PropTypes.node,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderItem: PropTypes.func,\r\n  footerProps: PropTypes.string,\r\n  type: PropTypes.any,\r\n  delay: PropTypes.any,\r\n  duration: PropTypes.any,\r\n  interval: PropTypes.any,\r\n  className: PropTypes.string,\r\n};\r\nAppList.defaultProps = {\r\n  border: false,\r\n};\r\n","import React from 'react';\r\nimport styles from './index.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport {Row} from 'react-bootstrap';\r\n\r\nconst AppRow = (props) => <Row className={styles.row} {...props} />;\r\n\r\nconst AppRowContainer = ({children, ...others}) => {\r\n  return (\r\n    <AppAnimateGroup\r\n      animateStyle={{flexDirection: 'row'}}\r\n      component={AppRow}\r\n      type='bottom'\r\n      ease='easeInOutQuart'\r\n      height='auto'\r\n      {...others}>\r\n      {children}\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppRowContainer;\r\nAppRowContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst SidebarItem = () => (\r\n  <ContentLoader viewBox='0 0 200 45'>\r\n    <rect x='0' y='10' rx='0' ry='0' width='20' height='20' />\r\n    <rect x='35' y='12' rx='2' ry='2' width='100' height='15' />\r\n  </ContentLoader>\r\n);\r\nconst SidebarListSkeleton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SidebarListSkeleton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport AppScrollbar from '../AppScrollbar';\r\nimport styles from './index.module.scss';\r\n\r\nconst AppsContent = (props) => {\r\n  const {children, isDetailView, fullView} = props;\r\n\r\n  return (\r\n    <AppScrollbar\r\n      className={clsx(\r\n        styles.appsContentContainer,\r\n        'd-flex flex-column',\r\n        isDetailView && styles.isDetailView,\r\n        fullView && styles.fullView,\r\n      )}>\r\n      {children}\r\n    </AppScrollbar>\r\n  );\r\n};\r\n\r\nexport default AppsContent;\r\n\r\nAppsContent.defaultProps = {isDetailView: false};\r\n\r\nAppsContent.propTypes = {\r\n  children: PropTypes.node,\r\n  isDetailView: PropTypes.bool,\r\n  fullView: PropTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst AppsFooter = (props) => {\r\n  const {children, className, ...rest} = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(styles.appsFooter, 'apps-footer', className)}\r\n      {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsFooter;\r\n\r\nAppsFooter.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst AppsHeader = ({children}) => {\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.appsHeader,\r\n        'apps-header d-flex align-items-center',\r\n      )}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsHeader;\r\nAppsHeader.defaultProps = {};\r\n\r\nAppsHeader.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport {Card, Offcanvas} from 'react-bootstrap';\r\nimport clsx from 'clsx';\r\n\r\nconst AppSidebar = (props) => {\r\n  const {isAppDrawerOpen, setAppDrawerOpen, sidebarContent} = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.appsSidebar,\r\n        'd-flex flex-column',\r\n      )}>\r\n      <Offcanvas\r\n        className={styles.appsOffcanvas}\r\n        closeIcon={null}\r\n        show={isAppDrawerOpen}\r\n        onHide={() => setAppDrawerOpen(!isAppDrawerOpen)}>\r\n        <Offcanvas.Body className='p-0'>\r\n        {sidebarContent}\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n      <Card className={clsx(styles.card, 'd-none h-100 flex-lg-grow-1 d-lg-flex flex-lg-column')}>\r\n        {sidebarContent}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppSidebar;\r\nAppSidebar.propTypes = {\r\n  footer: PropTypes.node,\r\n  setAppDrawerOpen: PropTypes.func,\r\n  sidebarContent: PropTypes.node,\r\n  isAppDrawerOpen: PropTypes.bool,\r\n  fullView: PropTypes.bool,\r\n};\r\n","import React, {useState} from 'react';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport PropTypes from 'prop-types';\r\nimport AppSidebar from './AppSidebar';\r\nimport clsx from 'clsx';\r\nimport styles from './index.module.scss';\r\nimport QueueAnim from 'rc-queue-anim';\r\nimport {useLayoutContext} from '../../utility/AppContextProvider/LayoutContextProvider';\r\nimport {Button, Card} from 'react-bootstrap';\r\nimport {AiOutlineMenu} from 'react-icons/ai';\r\n\r\nconst AppsContainer = (props) => {\r\n  const [isAppDrawerOpen, setAppDrawerOpen] = useState(false);\r\n  const {footer, navStyle} = useLayoutContext();\r\n  const {title, noContentAnimation, sidebarContent, fullView, children} = props;\r\n  return (\r\n    <div className={clsx(styles.appsWrap, 'd-flex flex-column')}>\r\n      <div\r\n        className={clsx(styles.appsWrapHeader, 'd-flex align-items-center', {\r\n          appsWrapHeaderFull: fullView,\r\n        })}>\r\n        {fullView ? null : (\r\n          <Button\r\n            className={styles.menuBtn}\r\n            onClick={() => setAppDrawerOpen(!isAppDrawerOpen)}>\r\n            <AiOutlineMenu />\r\n          </Button>\r\n        )}\r\n        <QueueAnim style={{zIndex: 3, overflow: 'hidden'}} type='scale'>\r\n          <h2 className='text-truncate' key='title'>\r\n            {title}\r\n          </h2>\r\n        </QueueAnim>\r\n      </div>\r\n\r\n      <div className={clsx(styles.appsContainer, 'd-flex apps-container')}>\r\n        {sidebarContent ? (\r\n          <QueueAnim\r\n            style={{zIndex: 3}}\r\n            type={props.type ? props.type : 'left'}>\r\n            <AppSidebar\r\n              isAppDrawerOpen={isAppDrawerOpen}\r\n              setAppDrawerOpen={setAppDrawerOpen}\r\n              footer={footer}\r\n              fullView={fullView}\r\n              navStyle={navStyle}\r\n              sidebarContent={sidebarContent}\r\n              key='sidebar'\r\n            />\r\n          </QueueAnim>\r\n        ) : null}\r\n        <div\r\n          className={clsx(\r\n            styles.appsMainContent,\r\n            fullView ? styles.appsMainContentFull : '',\r\n            'd-flex flex-column',\r\n          )}>\r\n          {noContentAnimation ? (\r\n            <Card\r\n              key='content'\r\n              className={clsx(\r\n                styles.card,\r\n                'flex-grow-1 d-flex flex-column h-100 overflow-hidden',\r\n              )}\r\n              style={{\r\n                ...props.cardStyle,\r\n              }}>\r\n              {children}\r\n            </Card>\r\n          ) : (\r\n            <QueueAnim\r\n              type={props.type ? props.type : 'right'}\r\n              style={{minHeight: '100%'}}>\r\n              <Card\r\n                key='content'\r\n                className={clsx(\r\n                  styles.card,\r\n                  'flex-grow-1 d-flex flex-column h-100 overflow-hidden',\r\n                )}\r\n                style={{\r\n                  ...props.cardStyle,\r\n                }}>\r\n                {children}\r\n              </Card>\r\n            </QueueAnim>\r\n          )}\r\n\r\n          <AppInfoView />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsContainer;\r\n\r\nAppsContainer.defaultProps = {\r\n  title: '',\r\n  noContentAnimation: false,\r\n};\r\n\r\nAppsContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  cardStyle: PropTypes.object,\r\n  noContentAnimation: PropTypes.bool,\r\n  sidebarContent: PropTypes.node,\r\n  fullView: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  type: PropTypes.any,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Pagination} from 'react-bootstrap';\r\n\r\nconst AppsPagination = ({count, page, onChange, pageSize, className}) => {\r\n  return (\r\n    <Pagination\r\n      component='div'\r\n      total={count}\r\n      pageSize={pageSize}\r\n      className={className}\r\n      page={page}\r\n      backIconButtonProps={{'aria-label': 'Previous Page'}}\r\n      nextIconButtonProps={{'aria-label': 'Next Page'}}\r\n      onChange={onChange}\r\n      rowsPerPageOptions={[]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppsPagination;\r\n\r\nAppsPagination.defaultProps = {\r\n  className: '',\r\n  pageSize: 15,\r\n};\r\n\r\nAppsPagination.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func,\r\n  className: PropTypes.string,\r\n  pageSize: PropTypes.number,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"AppsSideBarFolderItem_listItem__bD+8V\",\"listItemIcon\":\"AppsSideBarFolderItem_listItemIcon__8mcNc\",\"listItemText\":\"AppsSideBarFolderItem_listItemText__ykAey\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {FaRegCheckCircle, FaRegEnvelope, FaRegEnvelopeOpen, FaRegStar} from 'react-icons/fa';\r\nimport {BiArchiveIn, BiCalendarMinus, BiUser, } from 'react-icons/bi';\r\nimport {AiOutlineDelete, AiOutlineSchedule, AiOutlineUnorderedList} from 'react-icons/ai';\r\nimport {FiInfo, FiRefreshCw} from 'react-icons/fi';\r\n\r\nimport styles from './index.module.scss';\r\nimport {HiOutlineRefresh} from 'react-icons/hi';\r\n\r\nconst getIconByName = (iconName) => {\r\n  switch (iconName) {\r\n    case 'check-circle':\r\n      return <FaRegCheckCircle />;\r\n    case 'envelope':\r\n      return <FaRegEnvelope />;\r\n    case 'star':\r\n      return <FaRegStar />;\r\n    case 'calendar-minus':\r\n      return <BiCalendarMinus />;\r\n    case 'user':\r\n      return <BiUser />;\r\n    case 'clock':\r\n      return <AiOutlineSchedule />;\r\n    case 'envelope-open':\r\n      return <FaRegEnvelopeOpen />;\r\n    case 'trash-alt':\r\n      return <AiOutlineDelete />;\r\n    case 'file-archive':\r\n      return <BiArchiveIn />;\r\n    case 'question-circle':\r\n      return <FiInfo />;\r\n    case 'clone':\r\n      return <FiRefreshCw />;\r\n    case 'all':\r\n      return <AiOutlineUnorderedList />;\r\n    case 'frequent':\r\n      return <HiOutlineRefresh />;\r\n  }\r\n};\r\n\r\nconst AppsSideBarFolderItem = ({item, path}) => {\r\n  return (\r\n    <div key={item.id} className={styles.listItem}>\r\n      <NavLink to={path}>\r\n        <span className={styles.listItemIcon}>{getIconByName(item.icon)}</span>\r\n        <span className={styles.listItemText}>{item.name}</span>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsSideBarFolderItem;\r\n\r\nAppsSideBarFolderItem.propTypes = {\r\n  item: PropTypes.object,\r\n  path: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"starIcon\":\"AppsStarredIcon_starIcon__wPdGq\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport AppIconBtn from '../AppIconBtn';\r\nimport {AiOutlineStar, AiFillStar} from 'react-icons/ai';\r\n\r\nconst AppsStarredIcon = ({item, title, smallBtn, onChange}) => {\r\n  return (\r\n    <AppIconBtn\r\n      smallBtn={smallBtn}\r\n      title={title}\r\n      onClick={(e) => onChange(!item.isStarred, item, e)}\r\n    >\r\n      {\r\n        <span className={styles.starIcon}>\r\n          {item.isStarred ? (\r\n            <AiFillStar />\r\n          ) : (\r\n            <AiOutlineStar />\r\n          )}\r\n        </span>\r\n      }\r\n    </AppIconBtn>\r\n  );\r\n};\r\n\r\nexport default AppsStarredIcon;\r\n\r\nAppsStarredIcon.propTypes = {\r\n  item: PropTypes.object,\r\n  onChange: PropTypes.func,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  smallBtn: PropTypes.bool,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"todoModal\":\"AddNewTask_todoModal__maWh+\",\"modal-dialog\":\"AddNewTask_modal-dialog__uzZEL\",\"todoModalScrollbar\":\"AddNewTask_todoModalScrollbar__IfN91\",\"todoAddTaskForm\":\"AddNewTask_todoAddTaskForm__4guNi\",\"todoModalContent\":\"AddNewTask_todoModalContent__Xz-ur\",\"formGroup\":\"AddNewTask_formGroup__AW-TU\",\"todoAddTaskInput\":\"AddNewTask_todoAddTaskInput__OTciJ\",\"todoSelectRow\":\"AddNewTask_todoSelectRow__I4Tuq\",\"todoSelectAvatar\":\"AddNewTask_todoSelectAvatar__ZM58t\",\"todoSelectName\":\"AddNewTask_todoSelectName__gdxNS\",\"todoAddTaskDivider\":\"AddNewTask_todoAddTaskDivider__r0ZGF\",\"todoModalFooter\":\"AddNewTask_todoModalFooter__DuhF3\",\"todoModalBtn\":\"AddNewTask_todoModalBtn__5v8js\",\"addTaskFormDate\":\"AddNewTask_addTaskFormDate__XX4Sl\",\"closeBtn\":\"AddNewTask_closeBtn__xZDCY\"};","import React, {useState} from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport AppRowContainer from '@crema/core/AppRowContainer';\r\nimport styles from './index.module.scss';\r\nimport {onCreateTask} from '../../../../redux/actions';\r\nimport moment from 'moment';\r\nimport {useAuthUser} from '@crema/utility/AuthHooks';\r\nimport {Button, Col, Form, Image} from \"react-bootstrap\";\r\nimport clsx from \"clsx\";\r\n\r\n//\r\n// const DatePicker = require(\"react-bootstrap-date-picker\");\r\nconst AddTaskForm = ({onCloseAddTask, selectedDate}) => {\r\n  const labelList = useSelector(({todoApp}) => todoApp.labelList);\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const priorityList = useSelector(({todoApp}) => todoApp.priorityList);\r\n\r\n  const staffList = useSelector(({todoApp}) => todoApp.staffList);\r\n  const {user} = useAuthUser();\r\n  const dispatch = useDispatch();\r\n\r\n  const onFinish = (values) => {\r\n    const staff = staffList.find((staff) => staff.id === +values.staffList);\r\n\r\n    const priority = priorityList.find(\r\n      (label) => +values.priorityList === label.id,\r\n    );\r\n    const label = labelList.filter((label) => +values.labelList === label.id);\r\n\r\n    const newTask = {\r\n      ...values,\r\n      id: Math.floor(Math.random() * 1000000),\r\n      isStarred: false,\r\n      hasAttachments: false,\r\n      sentAt: '10.30am',\r\n      isRead: true,\r\n      folderValue: 120,\r\n      createdBy: {\r\n        name: user.displayName ? user.displayName : 'user',\r\n        image: user.photoURL ? user.photoURL : '/assets/images/dummy2.jpg',\r\n      },\r\n      scheduleDate: moment(values.scheduleDate).format('lll'),\r\n      assignedTo: staff,\r\n      createdOn: moment().format('ll'),\r\n      status: 1,\r\n      comments: [],\r\n      label: label,\r\n      priority: priority,\r\n    };\r\n    console.log(newTask);\r\n    dispatch(onCreateTask(newTask));\r\n    onCloseAddTask();\r\n    setValidated(true);\r\n  };\r\n\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <Form noValidate validated={validated}\r\n      className={styles.todoAddTaskForm}\r\n      name='basic'\r\n      initialValues={{\r\n        scheduleDate: selectedDate ? moment(selectedDate, 'YYYY-MM-DD') : '',\r\n      }}\r\n          onSubmit={onFinish}>\r\n      <div className={styles.todoModalContent}>\r\n        <Form.Group className={styles.formGroup} controlId=\"validationCustom01\">\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            name='title'\r\n            className={styles.todoAddTaskInput}\r\n            placeholder={messages['todo.taskTitle']}\r\n            defaultValue=\"Mark\"\r\n          />\r\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <AppRowContainer>\r\n          <Col xs={12} sm={6} md={3}>\r\n            <Form.Group className={styles.formGroup}>\r\n              <Form.Select name='staffList' placeholder={messages['common.staff']}>\r\n                {staffList.map((staff) => {\r\n                  return (\r\n                    <option value={staff.id} key={staff.id}>\r\n                      <div className={styles.todoSelectRow}>\r\n                        {staff.image ? (\r\n                            <Image className={styles.todoSelectAvatar} src={staff.image} roundedCircle />\r\n                        ) : (\r\n                          <span className={styles.todoSelectAvatar}>\r\n                            {staff.name.toUpperCase()}\r\n                          </span>\r\n                        )}\r\n                        <span className={clsx(styles.todoSelectName, 'text-truncate')}>\r\n                          {staff.name}\r\n                        </span>\r\n                      </div>\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col xs={12} sm={6} md={3}>\r\n            <Form.Group className={styles.formGroup} name='scheduleDate'>\r\n              {/*<DatePicker className={styles.addTaskFormDate} />*/}\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col xs={12} sm={6} md={3}>\r\n            <Form.Group className={styles.formGroup} name='priorityList'>\r\n              <Form.Select placeholder={messages['common.priority']}>\r\n                {priorityList.map((priority) => {\r\n                  return (\r\n                    <option value={priority.id} key={priority.id}>\r\n                      {priority.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col xs={12} sm={6} md={3}>\r\n            <Form.Group className={styles.formGroup} name='labelList'>\r\n              <Form.Select\r\n                placeholder={messages['common.label']}\r\n                mode='multiple'\r\n                maxTagCount={2}>\r\n                {labelList.map((label) => {\r\n                  return (\r\n                    <option value={label.id} key={label.id}>\r\n                      {label.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Col>\r\n        </AppRowContainer>\r\n\r\n        <Form.Group className={styles.formGroup} name='description'>\r\n          <Form.Control as=\"textarea\"\r\n                        placeholder={messages['common.description']}\r\n                        autoSize={{minRows: 3, maxRows: 5}} />\r\n        </Form.Group>\r\n      </div>\r\n\r\n      <div className={styles.todoModalFooter}>\r\n        <Button className={styles.todoModalBtn} type='primary' htmlType='submit'>\r\n          <IntlMessages id='common.save' />\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n\r\nAddTaskForm.propTypes = {\r\n  values: PropTypes.object.isRequired,\r\n  setFieldValue: PropTypes.func,\r\n  taskLabels: PropTypes.array.isRequired,\r\n  setTaskLabels: PropTypes.func,\r\n  isSubmitting: PropTypes.bool,\r\n  onCloseAddTask: PropTypes.func,\r\n  selectedDate: PropTypes.any,\r\n};\r\n","import React from 'react';\r\nimport AddTaskForm from './AddTaskForm';\r\nimport PropTypes from 'prop-types';\r\nimport {useIntl} from 'react-intl';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport styles from './index.module.scss';\r\nimport {Modal} from 'react-bootstrap';\r\n\r\nconst AddNewTask = ({isAddTaskOpen, selectedDate, onCloseAddTask}) => {\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <Modal\r\n      size='lg'\r\n      show={isAddTaskOpen}\r\n      onHide={() => onCloseAddTask(false)}\r\n      className={styles.todoModal}>\r\n      <Modal.Header className={styles.closeBtn} closeButton>\r\n        <Modal.Title>{messages['todo.addNewTask']}</Modal.Title>\r\n      </Modal.Header>\r\n      <AppScrollbar className={styles.todoModalScrollbar}>\r\n        <AddTaskForm\r\n          onCloseAddTask={onCloseAddTask}\r\n          selectedDate={selectedDate}\r\n        />\r\n      </AppScrollbar>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewTask;\r\n\r\nAddNewTask.propTypes = {\r\n  isAddTaskOpen: PropTypes.bool.isRequired,\r\n  onCloseAddTask: PropTypes.func.isRequired,\r\n  selectedDate: PropTypes.any,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"todoSidebarHeader\":\"TaskSideBar_todoSidebarHeader__LVrEe\",\"todoSidebarScrollbar\":\"TaskSideBar_todoSidebarScrollbar__orgui\",\"todoSidebarContent\":\"TaskSideBar_todoSidebarContent__p4ogw\",\"todoSidebarList\":\"TaskSideBar_todoSidebarList__126I0\",\"todoSidebarTitle\":\"TaskSideBar_todoSidebarTitle__TBWSD\",\"todoLabelItem\":\"TaskSideBar_todoLabelItem__IptbS\",\"todoDots\":\"TaskSideBar_todoDots__8uhK5\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './index.module.scss';\r\n\r\nconst LabelItem = ({label}) => {\r\n  return (\r\n    <div key={label.id} className={styles.todoLabelItem}>\r\n      <NavLink to={`/apps/todo/label/${label.alias}`}>\r\n        <span className={styles.todoDots} style={{backgroundColor: label.color}} />\r\n        {label.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LabelItem;\r\n\r\nLabelItem.propTypes = {\r\n  label: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport AddNewTask from '../AddNewTask';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport AppsSideBarFolderItem from '@crema/core/AppsSideBarFolderItem';\r\nimport LabelItem from './LabelItem';\r\nimport AppList from '@crema/core/AppList';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport SidebarPlaceholder from '@crema/core/AppSkeleton/SidebarListSkeleton';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport styles from './index.module.scss';\r\nimport {Button, ListGroup} from \"react-bootstrap\";\r\nimport {AiOutlinePlus} from 'react-icons/ai';\r\n\r\nconst TaskSideBar = () => {\r\n  const labelList = useSelector(({todoApp}) => todoApp.labelList);\r\n\r\n  const folderList = useSelector(({todoApp}) => todoApp.folderList);\r\n\r\n  const [isAddTaskOpen, setAddTaskOpen] = React.useState(false);\r\n\r\n  const onOpenAddTask = () => {\r\n    setAddTaskOpen(true);\r\n  };\r\n\r\n  const onCloseAddTask = () => {\r\n    setAddTaskOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.todoSidebarHeader}>\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          onClick={onOpenAddTask}>\r\n          <AiOutlinePlus  />\r\n          <IntlMessages id='todo.addNewTask' />\r\n        </Button>\r\n      </div>\r\n\r\n      <AppScrollbar className={styles.todoSidebarScrollbar}>\r\n        <div className={styles.todoSidebarContent}>\r\n          <ListGroup className={styles.todoSidebarList}>\r\n            <AppList\r\n              data={folderList}\r\n              ListEmptyComponent={\r\n                <ListEmptyResult\r\n                  loading={true}\r\n                  placeholder={<SidebarPlaceholder />}\r\n                />\r\n              }\r\n              renderItem={(item) => (\r\n                <AppsSideBarFolderItem\r\n                  key={item.id}\r\n                  item={item}\r\n                  path={`/apps/todo/folder/${item.alias}`}\r\n                />\r\n              )}\r\n            />\r\n          </ListGroup>\r\n\r\n          <h5 className={styles.todoSidebarTitle}>Labels</h5>\r\n\r\n          <ListGroup className={styles.todoSidebarList} aria-label='main mailbox folders'>\r\n            <AppList\r\n              data={labelList}\r\n              ListEmptyComponent={\r\n                <ListEmptyResult\r\n                  loading={true}\r\n                  placeholder={<SidebarPlaceholder />}\r\n                />\r\n              }\r\n              renderItem={(label) => <LabelItem key={label.id} label={label} />}\r\n            />\r\n          </ListGroup>\r\n        </div>\r\n      </AppScrollbar>\r\n\r\n      {isAddTaskOpen ? (\r\n        <AddNewTask\r\n          isAddTaskOpen={isAddTaskOpen}\r\n          onCloseAddTask={onCloseAddTask}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskSideBar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"todoListDesktop\":\"TasksList_todoListDesktop__JGLvJ\",\"todoListMobile\":\"TasksList_todoListMobile__CEmKm\",\"todoListItem\":\"TasksList_todoListItem__G09Cf\",\"checked\":\"TasksList_checked__ooGnh\",\"todoListItemAction\":\"TasksList_todoListItemAction__j42Pq\",\"todoListItemLabelGroup\":\"TasksList_todoListItemLabelGroup__ax+Yc\",\"todoListItemRightContent\":\"TasksList_todoListItemRightContent__3WLg6\",\"todoDots\":\"TasksList_todoDots__YCfus\",\"todoListItemLeft\":\"TasksList_todoListItemLeft__IEZdZ\",\"todoListCheckboxView\":\"TasksList_todoListCheckboxView__sgSOw\",\"todoListTitle\":\"TasksList_todoListTitle__s+Y-C\",\"todoListItemHide\":\"TasksList_todoListItemHide__PeasR\",\"todoListItemRight\":\"TasksList_todoListItemRight__vikHf\",\"todoListImgView\":\"TasksList_todoListImgView__uoNGj\",\"todoListScheduleDate\":\"TasksList_todoListScheduleDate__UjPjB\",\"todoListStarView\":\"TasksList_todoListStarView__6Q4QD\",\"todoListImg\":\"TasksList_todoListImg__KaI6D\",\"todoContentHeader\":\"TasksList_todoContentHeader__khSjs\",\"todoContentHeaderCheckboxView\":\"TasksList_todoContentHeaderCheckboxView__mRN+H\",\"todoSelectTaskDropdownView\":\"TasksList_todoSelectTaskDropdownView__4kys4\",\"todoSelectTaskDropdown\":\"TasksList_todoSelectTaskDropdown__Ib1lo\",\"todoHeaderCheckedActionView\":\"TasksList_todoHeaderCheckedActionView__qs-HY\",\"todoHeaderCheckedAction\":\"TasksList_todoHeaderCheckedAction__-zWMq\",\"todoContentHeaderPagination\":\"TasksList_todoContentHeaderPagination__oZ-bH\",\"todoFooter\":\"TasksList_todoFooter__RYYXT\",\"todoSearch\":\"TasksList_todoSearch__7WpJL\",\"todoViewSelect\":\"TasksList_todoViewSelect__HcIYC\",\"appIconBtn\":\"TasksList_appIconBtn__uG-t4\",\"active\":\"TasksList_active__R7JzK\",\"todoListItemLabelGroupItem\":\"TasksList_todoListItemLabelGroupItem__aKMTO\",\"badgePriority\":\"TasksList_badgePriority__+z7xr\",\"dropdownToggleBtn\":\"TasksList_dropdownToggleBtn__om5LW\",\"labelItems\":\"TasksList_labelItems__9t3WR\",\"searchInput\":\"TasksList_searchInput__tT4AJ\",\"searchBtn\":\"TasksList_searchBtn__2esjR\"};","import React, {useState} from 'react';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport {Form} from \"react-bootstrap\";\r\nimport styles from '../index.module.scss';\r\n\r\nconst SelectTasksDropdown = ({onSelectTasks}) => {\r\n  const [selectedItems, setSelectedItems] = useState(0);\r\n\r\n  const onChangeSelectValue = (value) => {\r\n    setSelectedItems(value);\r\n    onSelectTasks(value);\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <span className={styles.todoSelectTaskDropdownView}>\r\n      <Form.Select\r\n        value={selectedItems}\r\n        onChange={onChangeSelectValue}\r\n        className={styles.todoSelectTaskDropdown}>\r\n        <option value='0'>{messages['common.all']}</option>\r\n        <option value='1'>{messages['common.none']}</option>\r\n        <option value='2'>{messages['common.starred']}</option>\r\n        <option value='3'>\r\n          {messages['common.attachments']}\r\n        </option>\r\n      </Form.Select>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default SelectTasksDropdown;\r\n\r\nSelectTasksDropdown.propTypes = {\r\n  onSelectTasks: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {AiOutlineDelete} from 'react-icons/ai';\r\nimport IntlMessages from '../../utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport ConfirmationModal from '../AppConfirmationModal';\r\nimport AppIconBtn from \"../AppIconBtn\";\r\n\r\nconst AppsDeleteIcon = ({deleteAction, smallBtn}) => {\r\n  const [isDeleteModalOpen, setDeleteModalOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <AppIconBtn smallBtn={smallBtn}\r\n        title='Trash'\r\n        onClick={() => {\r\n          console.log('mai hu');\r\n          setDeleteModalOpen(true);\r\n        }}\r\n      >\r\n        <AiOutlineDelete />\r\n      </AppIconBtn>\r\n      {isDeleteModalOpen ? (\r\n        <ConfirmationModal\r\n          open={isDeleteModalOpen}\r\n          paragraph={'Are you sure you want to delete this?'}\r\n          onDeny={setDeleteModalOpen}\r\n          onConfirm={deleteAction}\r\n          modalTitle={<IntlMessages id='common.deleteItem' />}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppsDeleteIcon;\r\nAppsDeleteIcon.propTypes = {\r\n  deleteAction: PropTypes.func,\r\n  deleteTitle: PropTypes.any,\r\n  smallBtn: PropTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {\r\n  onDeleteSelectedTasks,\r\n  onUpdateTaskLabels,\r\n} from '../../../../../redux/actions/ToDoApp';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport AppsDeleteIcon from '@crema/core/AppsDeleteIcon';\r\nimport PropTypes from 'prop-types';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {MdLabelOutline} from 'react-icons/md';\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport AppIconBtn from \"@crema/core/AppIconBtn\";\r\nimport styles from '../index.module.scss';\r\nimport clsx from \"clsx\";\r\n\r\nconst CheckedTasksActions = ({checkedTasks, setCheckedTasks, page}) => {\r\n  const {pathname} = useLocation();\r\n  const path = pathname.split('/');\r\n  const dispatch = useDispatch();\r\n\r\n  const labelList = useSelector(({todoApp}) => todoApp.labelList);\r\n\r\n  const onDeleteTasks = () => {\r\n    dispatch(\r\n      onDeleteSelectedTasks(\r\n        checkedTasks,\r\n        path[path.length - 2],\r\n        path[path.length - 1],\r\n        page,\r\n      ),\r\n    );\r\n    setCheckedTasks([]);\r\n  };\r\n\r\n  const onSelectLabel = ({key}) => {\r\n    dispatch(onUpdateTaskLabels(checkedTasks, key));\r\n    setCheckedTasks([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span className={styles.todoHeaderCheckedAction}>\r\n        <div className='mx-1'>\r\n          <AppsDeleteIcon\r\n            smallBtn\r\n            deleteAction={onDeleteTasks}\r\n            deleteTitle={<IntlMessages id='todo.deleteMessage' />}\r\n          />\r\n        </div>\r\n\r\n        <div className='mx-1'>\r\n          <Dropdown>\r\n            <Dropdown.Toggle\r\n              className={clsx(\r\n                styles.dropdownToggleBtn,\r\n                'p-0 bg-transparent border-0 d-flex align-items-center shadow-none',\r\n              )} variant=\"success\" id=\"dropdown-basic\">\r\n                <AppIconBtn\r\n                  smallBtn\r\n                  title={<IntlMessages id='common.label' />}\r\n                >\r\n                  <MdLabelOutline />\r\n                </AppIconBtn>\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu onClick={onSelectLabel}>\r\n                  {labelList.map((label) => {\r\n                    return (\r\n                      <Dropdown.Item className={styles.labelItems} href=\"#/action-1\" key={label.id} value={label.id}>\r\n                        {label.name}\r\n                      </Dropdown.Item>\r\n                    );\r\n                  })}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckedTasksActions;\r\n\r\nCheckedTasksActions.propTypes = {\r\n  checkedTasks: PropTypes.array.isRequired,\r\n  setCheckedTasks: PropTypes.func,\r\n  page: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {useIntl} from 'react-intl';\r\nimport AppIconBtn from \"@crema/core/AppIconBtn\";\r\nimport {AiOutlineCalendar, AiOutlineBars} from 'react-icons/ai';\r\nimport styles from '../index.module.scss';\r\n\r\nconst ViewSelectButtons = ({pageView, onChangePageView}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <div className={styles.todoViewSelect}>\r\n      <div className='mx-1'>\r\n        <AppIconBtn\r\n          smallBtn\r\n          className={clsx(styles.appIconBtn, pageView === 'calendar' ? styles.active : '', )}\r\n          onClick={() => onChangePageView('calendar')}\r\n          title={messages['sidebar.dataDisplay.calender']}\r\n        >\r\n          <AiOutlineCalendar />\r\n        </AppIconBtn>\r\n      </div>\r\n      <div className='mx-1'>\r\n        <AppIconBtn\r\n          smallBtn\r\n          title={messages['sidebar.ecommerce.listView']}\r\n          className={clsx(styles.appIconBtn, pageView === 'list' ? styles.active : '', )}\r\n          onClick={() => onChangePageView('list')}\r\n        >\r\n          <AiOutlineBars />\r\n        </AppIconBtn>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewSelectButtons;\r\n\r\nViewSelectButtons.propTypes = {\r\n  pageView: PropTypes.string.isRequired,\r\n  onChangePageView: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport SelectTasksDropdown from './SelectTasksDropdown';\r\nimport CheckedTasksActions from './CheckedTasksActions';\r\nimport AppsPagination from '@crema/core/AppsPagination';\r\nimport ViewSelectButtons from './ViewSelectButtons';\r\nimport {Form, FormControl, InputGroup} from 'react-bootstrap';\r\nimport {AiOutlineSearch} from 'react-icons/ai';\r\nimport styles from '../index.module.scss';\r\n\r\nconst TaskContentHeader = (props) => {\r\n  const {\r\n    checkedTasks,\r\n    setCheckedTasks,\r\n    filterText,\r\n    onSetFilterText,\r\n    onChange,\r\n    page,\r\n    pageView,\r\n    onChangePageView,\r\n  } = props;\r\n\r\n  const taskList = useSelector(({todoApp}) => todoApp.taskList);\r\n\r\n  const totalTasks = useSelector(({todoApp}) => todoApp.totalTasks);\r\n\r\n  const onHandleMasterCheckbox = (event) => {\r\n    if (event.target.checked) {\r\n      const taskIds = taskList.map((task) => task.id);\r\n      setCheckedTasks(taskIds);\r\n    } else {\r\n      setCheckedTasks([]);\r\n    }\r\n  };\r\n\r\n  const onSelectTasks = (value) => {\r\n    switch (value) {\r\n      case 0:\r\n        setCheckedTasks(taskList.map((task) => task.id));\r\n        break;\r\n      case 1:\r\n        setCheckedTasks([]);\r\n        break;\r\n\r\n      case 2:\r\n        setCheckedTasks(\r\n          taskList.filter((task) => task.isStarred).map((task) => task.id),\r\n        );\r\n        break;\r\n\r\n      case 3:\r\n        setCheckedTasks(\r\n          taskList.filter((task) => task.hasAttachments).map((task) => task.id),\r\n        );\r\n        break;\r\n\r\n      default:\r\n        setCheckedTasks([]);\r\n    }\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.todoContentHeader}>\r\n        <span className={styles.todoContentHeaderCheckboxView}>\r\n          <Form.Check\r\n            color='primary'\r\n            checked={\r\n              taskList.length > 0 && checkedTasks.length === taskList.length\r\n            }\r\n            onChange={onHandleMasterCheckbox}\r\n          />\r\n        </span>\r\n\r\n        <SelectTasksDropdown onSelectTasks={onSelectTasks} />\r\n\r\n        <span className={styles.todoHeaderCheckedActionView}>\r\n          {checkedTasks.length > 0 ? (\r\n            <CheckedTasksActions\r\n              checkedTasks={checkedTasks}\r\n              setCheckedTasks={setCheckedTasks}\r\n              page={page}\r\n            />\r\n          ) : null}\r\n        </span>\r\n        <InputGroup className={styles.todoSearch}>\r\n          <FormControl\r\n            className={styles.searchInput}\r\n            placeholder={messages['common.searchHere']}\r\n            aria-label='Username'\r\n            aria-describedby='basic-addon1'\r\n            value={filterText}\r\n            onChange={(event) => onSetFilterText(event.target.value)}\r\n          />\r\n          <InputGroup.Text id='basic-addon1' className={styles.searchBtn}>\r\n            <AiOutlineSearch />\r\n          </InputGroup.Text>\r\n        </InputGroup>\r\n        <ViewSelectButtons\r\n          pageView={pageView}\r\n          onChangePageView={onChangePageView}\r\n        />\r\n      </div>\r\n      {pageView === 'list' && taskList.length > 0 ? (\r\n        <AppsPagination\r\n          className={styles.todoContentHeaderPagination}\r\n          count={totalTasks}\r\n          page={page}\r\n          onChange={onChange}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskContentHeader;\r\n\r\nTaskContentHeader.defaultProps = {\r\n  checkedTasks: [],\r\n  filterText: '',\r\n  page: 0,\r\n};\r\n\r\nTaskContentHeader.propTypes = {\r\n  checkedTasks: PropTypes.array,\r\n  setCheckedTasks: PropTypes.func,\r\n  filterText: PropTypes.string,\r\n  onSetFilterText: PropTypes.func,\r\n  page: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n  pageView: PropTypes.string.isRequired,\r\n  onChangePageView: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {MdLabelOutline} from 'react-icons/md';\r\nimport styles from '../index.module.scss';\r\n\r\nconst Labels = ({labels}) => {\r\n  return (\r\n    <div className={styles.todoListItemLabelGroup}>\r\n      {labels.map((label, index) => {\r\n        return (\r\n            <span key={index}\r\n              className={styles.todoListItemLabelGroupItem}\r\n              style={{color: label.color}}>\r\n              <MdLabelOutline />\r\n            </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Labels;\r\n\r\nLabels.propTypes = {\r\n  labels: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../index.module.scss';\r\n\r\nconst Priority = ({priority}) => {\r\n  return (\r\n    <span className={styles.badgePriority} style={{color: priority.color, backgroundColor: `${priority.color}20`}}>\r\n      {priority.name}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Priority;\r\n\r\nPriority.propTypes = {\r\n  priority: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {useHistory, withRouter} from 'react-router-dom';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport Labels from './Labels';\r\nimport Priority from './Priority';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport {AiOutlineDelete} from 'react-icons/ai';\r\nimport {MdLabelOutline} from 'react-icons/md';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Form, Image} from \"react-bootstrap\";\r\nimport AppIconBtn from \"@crema/core/AppIconBtn\";\r\nimport styles from '../index.module.scss';\r\n\r\nconst TaskListItem = ({\r\n  task,\r\n  onChangeCheckedTasks,\r\n  checkedTasks,\r\n  match,\r\n  onChangeStarred,\r\n}) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const onViewTaskDetail = (task) => {\r\n    history.push(`/apps/todo/${match.params.name}/${task.id}`);\r\n  };\r\n\r\n  const onDeleteTask = () => {\r\n    task.folderValue = 126;\r\n    dispatch(onUpdateSelectedTask(task));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      key={task.id}\r\n      className={clsx(styles.todoListItem, checkedTasks.includes(task.id) ? styles.checked : '',)}\r\n      onClick={() => onViewTaskDetail(task)}>\r\n      <div className={styles.todoListItemLeft}>\r\n        <span\r\n          className={styles.todoListCheckboxView}\r\n          onClick={(event) => event.stopPropagation()}>\r\n          <Form.Check\r\n            checked={checkedTasks.includes(task.id)}\r\n            onChange={(event) => onChangeCheckedTasks(event, task.id)}\r\n            color='primary'\r\n          />\r\n        </span>\r\n\r\n        <div className={styles.todoListImgView}>\r\n          <span\r\n            className={styles.todoListStarView}\r\n            onClick={(event) => event.stopPropagation()}>\r\n            <AppsStarredIcon smallBtn item={task} onChange={onChangeStarred} />\r\n          </span>\r\n          <span className={styles.todoListImg}>\r\n            <Image src={task?.assignedTo?.image} roundedCircle />\r\n          </span>\r\n        </div>\r\n\r\n        <span className={clsx(styles.todoListTitle, 'text-truncate')}>{task.title}</span>\r\n\r\n        {task.priority ? (\r\n          <span className={styles.todoListItemHide}>\r\n            <Priority priority={task.priority} />\r\n          </span>\r\n        ) : null}\r\n      </div>\r\n\r\n      <div className={styles.todoListItemRight}>\r\n        {task.label ? <Labels labels={task.label} /> : null}\r\n\r\n        <div className={styles.todoListItemRightContent}>\r\n          <span className={clsx(styles.todoListItemHide, styles.todoListScheduleDate, 'text-truncate')} >\r\n            <IntlMessages id='todo.scheduleFor' /> {task.scheduleDate}\r\n          </span>\r\n        </div>\r\n\r\n        <div className={styles.todoListItemAction}>\r\n            <AppIconBtn\r\n              smallBtn\r\n              onClick={onDeleteTask}\r\n              title={<IntlMessages id='common.delete' />}\r\n            >\r\n              <AiOutlineDelete />\r\n            </AppIconBtn>\r\n            <AppIconBtn\r\n              smallBtn\r\n              title={<IntlMessages id='common.label' />}\r\n            >\r\n              <MdLabelOutline />\r\n            </AppIconBtn>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(TaskListItem);\r\n\r\nTaskListItem.defaultProps = {\r\n  checkedTasks: [],\r\n};\r\n\r\nTaskListItem.propTypes = {\r\n  task: PropTypes.object.isRequired,\r\n  onChangeCheckedTasks: PropTypes.func,\r\n  checkedTasks: PropTypes.array,\r\n  onChangeStarred: PropTypes.func,\r\n  match: PropTypes.object,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"todoDetailHeaderStarIcon\":\"TaskDetail_todoDetailHeaderStarIcon__sPzSd\",\"todoDetailHeaderDeleteIcon\":\"TaskDetail_todoDetailHeaderDeleteIcon__m4pP5\",\"todoDetailStatusBtn\":\"TaskDetail_todoDetailStatusBtn__mDHe+\",\"bgColor\":\"TaskDetail_bgColor__86YCr\",\"checkIcon\":\"TaskDetail_checkIcon__YzHdy\",\"todoAssignedStaff\":\"TaskDetail_todoAssignedStaff__W5GFl\",\"todoAvatar36\":\"TaskDetail_todoAvatar36__A3L4K\",\"todoAvatarName\":\"TaskDetail_todoAvatarName__aynLt\",\"todoAvatar30\":\"TaskDetail_todoAvatar30__-uKk5\",\"todoAssignedStaffInfo\":\"TaskDetail_todoAssignedStaffInfo__Ymkut\",\"todoAssignedStaffTitle\":\"TaskDetail_todoAssignedStaffTitle__OJGuR\",\"todoChStaffAvatar\":\"TaskDetail_todoChStaffAvatar__bA1rR\",\"todoComment\":\"TaskDetail_todoComment__r5cx3\",\"todoCommentTitle\":\"TaskDetail_todoCommentTitle__fpD9y\",\"todoCommentBody\":\"TaskDetail_todoCommentBody__+oGqp\",\"todoCommentScroll\":\"TaskDetail_todoCommentScroll__TnL-y\",\"todoCommentArea\":\"TaskDetail_todoCommentArea__mwB3L\",\"todoCommentItem\":\"TaskDetail_todoCommentItem__31ety\",\"hideUserInfo\":\"TaskDetail_hideUserInfo__Ic--0\",\"todoCommentTime\":\"TaskDetail_todoCommentTime__aztjQ\",\"todoCommentUser\":\"TaskDetail_todoCommentUser__Oy+mI\",\"todoCommentView\":\"TaskDetail_todoCommentView__iADUh\",\"lastChatMessage\":\"TaskDetail_lastChatMessage__E-0hd\",\"todoCommentMsg\":\"TaskDetail_todoCommentMsg__VZsMH\",\"todoName\":\"TaskDetail_todoName__smD7W\",\"todoCommentMsgView\":\"TaskDetail_todoCommentMsgView__-5uc+\",\"todoDetailDatepicker\":\"TaskDetail_todoDetailDatepicker__9DxQZ\",\"todoDetailStaff\":\"TaskDetail_todoDetailStaff__kIO6s\",\"todoDetailContent\":\"TaskDetail_todoDetailContent__faRbV\",\"todoDetailContentHeader\":\"TaskDetail_todoDetailContentHeader__j2xQm\",\"todoDetailContentHeaderLabel\":\"TaskDetail_todoDetailContentHeaderLabel__isz0a\",\"todoDetailContentHeaderTag\":\"TaskDetail_todoDetailContentHeaderTag__1TlqU\",\"todoDetailContentHeaderTagBtn\":\"TaskDetail_todoDetailContentHeaderTagBtn__07vzC\",\"todoDetailContentHeaderLeft\":\"TaskDetail_todoDetailContentHeaderLeft__HuUbJ\",\"todoDetailStaffRow\":\"TaskDetail_todoDetailStaffRow__bCU2r\",\"todoDetailStaffEdit\":\"TaskDetail_todoDetailStaffEdit__dlqds\",\"todoDetailStaffEditBtnView\":\"TaskDetail_todoDetailStaffEditBtnView__YeWZb\",\"todoDetailDivider\":\"TaskDetail_todoDetailDivider__1m6HR\",\"todoDetailPara\":\"TaskDetail_todoDetailPara__0tSfa\",\"todoDetailStatusPri\":\"TaskDetail_todoDetailStatusPri__wvlpL\",\"todoDetailStatus\":\"TaskDetail_todoDetailStatus__BP8A0\",\"todoDetailTextareaForm\":\"TaskDetail_todoDetailTextareaForm__s7vVY\",\"todoDetailFooter\":\"TaskDetail_todoDetailFooter__WiGXL\",\"todoDetailBtn\":\"TaskDetail_todoDetailBtn__belhz\",\"todoTaskCrByInfo\":\"TaskDetail_todoTaskCrByInfo__qtHIi\",\"todoTaskCrByInfoContent\":\"TaskDetail_todoTaskCrByInfoContent__wAbNT\",\"todoCrOn\":\"TaskDetail_todoCrOn__nAsoP\",\"todoCrByName\":\"TaskDetail_todoCrByName__dREgu\",\"todoDetailSelectBox\":\"TaskDetail_todoDetailSelectBox__7P5hd\",\"todoDetailSelectOption\":\"TaskDetail_todoDetailSelectOption__Az-J7\",\"todoDetailArrow\":\"TaskDetail_todoDetailArrow__DO3pE\"};","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {useIntl} from 'react-intl';\r\nimport {Form, Image} from \"react-bootstrap\";\r\nimport styles from '../index.module.scss';\r\n\r\n\r\nconst ChangeStaff = ({handleStaffChange, selectedStaff}) => {\r\n  const staffList = useSelector(({todoApp}) => todoApp.staffList);\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n      <Form.Select\r\n        value={selectedStaff?.id}\r\n        placeholder={messages['common.staff']}\r\n        onSelect={handleStaffChange}\r\n        style={{minWidth: 150}}>\r\n        {staffList.map((staff) => {\r\n          return (\r\n            <option value={staff.id.toString()} key={staff.id}>\r\n              <div className='d-flex align-items-center'>\r\n                {staff.image ? (\r\n                  <Image className={styles.todoChStaffAvatar} src={staff.image} roundedCircle />\r\n                ) : (\r\n                  <span className={styles.todoChStaffAvatar}>\r\n                    {staff.name.toUpperCase()}\r\n                  </span>\r\n                )}\r\n                <span>{staff.name}</span>\r\n              </div>\r\n            </option>\r\n          );\r\n        })}\r\n      </Form.Select>\r\n  );\r\n};\r\n\r\nexport default ChangeStaff;\r\n\r\nChangeStaff.defaultProps = {\r\n  inputLabel: null,\r\n  labelWidth: 0,\r\n};\r\n\r\nChangeStaff.propTypes = {\r\n  handleStaffChange: PropTypes.func,\r\n  selectedStaff: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Image} from \"react-bootstrap\";\r\nimport styles from '../index.module.scss';\r\nimport clsx from \"clsx\";\r\n\r\nconst AssignedStaff = ({assignedStaff}) => {\r\n  return (\r\n    <>\r\n      {assignedStaff ? (\r\n        <div className={styles.todoAssignedStaff}>\r\n          {assignedStaff.image ? (\r\n            <Image  className={styles.todoAvatar36} src={assignedStaff.image} roundedCircle />\r\n          ) : (\r\n            <span className={clsx(styles.todoAvatar36, styles.todoAvatarName,)}>\r\n              {assignedStaff?.name.charAt(0)}\r\n            </span>\r\n          )}\r\n          <div className={styles.todoAssignedStaffInfo}>\r\n            <p>\r\n              <IntlMessages id='todo.assignedTo' />\r\n            </p>\r\n            <p className={styles.todoAssignedStaffTitle}>{assignedStaff.name}</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={styles.todoAssignedStaff}>\r\n          <Image  className={styles.todoAvatar36} src={'/assets/images/placeholder.jpg'} roundedCircle />\r\n          <div className={styles.todoAssignedStaffInfo}>\r\n            <p className={styles.todoAssignedStaffTitle}>\r\n              <IntlMessages id='todo.currentlyUnassigned' />\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignedStaff;\r\n\r\nAssignedStaff.defaultProps = {\r\n  assignedStaff: null,\r\n};\r\n\r\nAssignedStaff.propTypes = {\r\n  assignedStaff: PropTypes.object,\r\n};\r\n","import React from 'react';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport {Form} from \"react-bootstrap\";\r\nimport clsx from \"clsx\";\r\nimport styles from '../index.module.scss';\r\n\r\n// const DatePicker = require(\"react-bootstrap-date-picker\");\r\n\r\nconst DatePickers = (props) => {\r\n  // const {scheduleDate, setScheduleDate} = props;\r\n\r\n  return (\r\n    <Form.Group className={clsx(styles.todoDetailDatepicker, 'mb-3')}>\r\n      {/*<DatePicker*/}\r\n      {/*  defaultValue={moment(scheduleDate, 'YYYY-MM-DD')}*/}\r\n      {/*  onChange={(value) =>*/}\r\n      {/*    setScheduleDate(moment(value).format('YYYY/MM/DD'))*/}\r\n      {/*  }*/}\r\n      {/*/>*/}\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default DatePickers;\r\n\r\nDatePickers.propTypes = {\r\n  scheduleDate: PropTypes.any,\r\n  setScheduleDate: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport {Form} from \"react-bootstrap\";\r\nimport styles from '../index.module.scss';\r\n\r\nconst TaskStatus = ({selectedTask}) => {\r\n  const statusList = useSelector(({todoApp}) => todoApp.statusList);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeStatus = (value) => {\r\n    selectedTask.status = value;\r\n    dispatch(onUpdateSelectedTask(selectedTask));\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <Form.Select\r\n      className={styles.todoDetailSelectBox}\r\n      onChange={(value) => onChangeStatus(value)}\r\n      value={selectedTask.status}\r\n      placeholder={messages['common.status']}>\r\n      {statusList.map((status) => {\r\n        return (\r\n          <option className={styles.todoDetailSelectOption} key={status.type} value={status.type}>\r\n            {status.name}\r\n          </option>\r\n        );\r\n      })}\r\n    </Form.Select>\r\n  );\r\n};\r\n\r\nexport default TaskStatus;\r\n\r\nTaskStatus.propTypes = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport {Form} from \"react-bootstrap\";\r\nimport styles from '../index.module.scss';\r\n\r\nconst TaskPriority = ({selectedTask}) => {\r\n  const dispatch = useDispatch();\r\n  const priorityList = useSelector(({todoApp}) => todoApp.priorityList);\r\n\r\n  const onChangePriority = (value) => {\r\n    selectedTask.priority = priorityList.find(\r\n      (priority) => priority.type === value,\r\n    );\r\n    dispatch(onUpdateSelectedTask(selectedTask));\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <Form.Select\r\n      className={styles.todoDetailSelectBox}\r\n      defaultValue={selectedTask.priority?.type}\r\n      placeholder={messages['common.priority']}\r\n      onChange={(value) => onChangePriority(value)}>\r\n      {priorityList.map((priority) => {\r\n        return (\r\n          <option className={styles.todoDetailSelectOption} key={priority.id} value={priority.type}>\r\n            {priority.name}\r\n          </option>\r\n        );\r\n      })}\r\n    </Form.Select>\r\n  );\r\n};\r\n\r\nexport default TaskPriority;\r\n\r\nTaskPriority.propTypes = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Image} from \"react-bootstrap\";\r\nimport styles from '../index.module.scss';\r\nimport clsx from \"clsx\";\r\n\r\nconst TaskCreatedByInfo = ({createdBy, createdOn}) => {\r\n  return (\r\n    <div className={styles.todoTaskCrByInfo}>\r\n      {createdBy.image ? (\r\n        <Image src={createdBy.image} className={styles.todoAvatar30} roundedCircle />\r\n      ) : (\r\n        <span className={clsx(styles.todoAvatar30, styles.todoAvatarName, )}>\r\n          {createdBy.name[0]}\r\n        </span>\r\n      )}\r\n      <div className={styles.todoTaskCrByInfoContent}>\r\n        <span className={styles.todoCrByName}>{createdBy.name}</span>\r\n        <p className='mb-0'>\r\n          <span>\r\n            <IntlMessages id='todo.createdThisTask' />\r\n          </span>\r\n          <span className={styles.todoCrOn}>{createdOn}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskCreatedByInfo;\r\n\r\nTaskCreatedByInfo.propTypes = {\r\n  createdBy: PropTypes.object.isRequired,\r\n  createdOn: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport {Form} from \"react-bootstrap\";\r\nimport styles from \"../index.module.scss\";\r\n\r\nconst TaskLabel = ({selectedTask}) => {\r\n  const dispatch = useDispatch();\r\n  const labelList = useSelector(({todoApp}) => todoApp.labelList);\r\n\r\n  const onChangePriority = (value) => {\r\n    selectedTask.label = labelList.filter((label) => value.includes(label.id));\r\n    dispatch(onUpdateSelectedTask(selectedTask));\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <Form.Select\r\n      className={styles.todoDetailSelectBox}\r\n      placeholder={messages['common.label']}\r\n      maxTagCount={2}\r\n      style={{minWidth: 100}}\r\n      mode='multiple'\r\n      defaultValue={selectedTask.label.map((label) => label.id)}\r\n      onChange={onChangePriority}>\r\n      {labelList.map((label) => {\r\n        return (\r\n          <option className={styles.todoDetailSelectOption} value={label.id} key={label.id}>\r\n            {label.name}\r\n          </option>\r\n        );\r\n      })}\r\n    </Form.Select>\r\n  );\r\n};\r\n\r\nexport default TaskLabel;\r\n\r\nTaskLabel.propTypes = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {Image} from \"react-bootstrap\";\r\nimport styles from '../../index.module.scss';\r\n\r\nconst CommentsListItem = ({item, isPreviousSender, isLast}) => {\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.todoCommentItem,\r\n        isPreviousSender ? styles.hideUserInfo : '',\r\n        isLast ? styles.lastChatMessage : '',\r\n      )}>\r\n      <div className={styles.todoCommentView}>\r\n        <div className={styles.todoCommentUser}>\r\n          {item.image ? (\r\n            <Image src={item.image} className={styles.todoAvatar36} roundedCircle />\r\n          ) : (\r\n            <span className={clsx(styles.todoAvatar36, styles.todoAvatarName)}>\r\n              {item.name[0]}\r\n            </span>\r\n          )}\r\n          <span className={styles.todoName}>{item.name}</span>\r\n        </div>\r\n        <div className={styles.todoCommentMsgView}>\r\n          <span className={styles.todoCommentTime}>{item.date}</span>\r\n          <div className={styles.todoCommentMsg}>\r\n            <p>{item.comment}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentsListItem;\r\n\r\nCommentsListItem.propTypes = {\r\n  item: PropTypes.object,\r\n  isPreviousSender: PropTypes.bool,\r\n  isLast: PropTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport AppList from '@crema/core/AppList';\r\nimport CommentsListItem from './CommentsListItem';\r\nimport styles from '../../index.module.scss';\r\n\r\nconst CommentsList = ({comments}) => {\r\n  return (\r\n    <>\r\n      {comments.length > 0 ? (\r\n        <div className={styles.todoComment}>\r\n          <h4 className={styles.todoCommentTitle}>\r\n            <IntlMessages id='common.comments' />\r\n          </h4>\r\n          <div className={styles.todoCommentBody}>\r\n            <AppScrollbar className={styles.todoCommentScroll}>\r\n              <div className={styles.todoCommentArea}>\r\n                <AppList\r\n                  data={comments}\r\n                  renderItem={(item, index) => (\r\n                    <CommentsListItem\r\n                      item={item}\r\n                      key={index}\r\n                      isPreviousSender={\r\n                        index > 0 &&\r\n                        comments.sender === comments[index - 1].sender\r\n                      }\r\n                      isLast={\r\n                        (index + 1 < comments.length &&\r\n                          comments.sender !== comments[index + 1].sender) ||\r\n                        index + 1 === comments.length\r\n                      }\r\n                    />\r\n                  )}\r\n                />\r\n              </div>\r\n            </AppScrollbar>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentsList;\r\n\r\nCommentsList.defaultProps = {\r\n  comments: [],\r\n};\r\n\r\nCommentsList.propTypes = {\r\n  comments: PropTypes.array,\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions/ToDoApp';\r\nimport moment from 'moment';\r\nimport {useAuthUser} from '@crema/utility/AuthHooks';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport Labels from '../../TasksList/TaskListItem/Labels';\r\nimport ChangeStaff from './ChangeStaff';\r\nimport AssignedStaff from './AssignedStaff';\r\nimport DatePicker from './DatePicker';\r\nimport TaskStatus from './TaskStatus';\r\nimport TaskPriority from './TaskPriority';\r\nimport TaskCreatedByInfo from './TaskCreatedByInfo';\r\nimport TaskLabel from './TaskLabel';\r\nimport {FiSend} from 'react-icons/fi';\r\nimport {AiOutlineCheckCircle, AiOutlineEdit} from 'react-icons/ai';\r\nimport CommentsList from './CommentsList';\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport AppIconBtn from \"@crema/core/AppIconBtn\";\r\nimport styles from '../index.module.scss';\r\nimport clsx from \"clsx\";\r\n\r\nconst TaskDetailBody = (props) => {\r\n  const {selectedTask} = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {user} = useAuthUser();\r\n\r\n  const staffList = useSelector(({todoApp}) => todoApp.staffList);\r\n\r\n  const [isEdit, setEdit] = useState(false);\r\n\r\n  const [title, setTitle] = useState(selectedTask.title);\r\n  const [content, setContent] = useState(selectedTask.content);\r\n\r\n  const [comment, setComment] = useState('');\r\n\r\n  const [scheduleDate, setScheduleDate] = useState(\r\n    moment(selectedTask.scheduleDate).format('YYYY/MM/DD'),\r\n  );\r\n\r\n  const [selectedStaff, setStaff] = useState(selectedTask.assignedTo);\r\n\r\n  const inputLabel = React.useRef(null);\r\n\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    setLabelWidth(60);\r\n  }, []);\r\n\r\n  const onClickEditButton = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const onDoneEditing = () => {\r\n    const task = selectedTask;\r\n    task.content = content;\r\n    task.title = title;\r\n    task.scheduleDate = scheduleDate;\r\n    task.assignedTo = selectedStaff;\r\n    dispatch(onUpdateSelectedTask(task));\r\n    console.log('onDoneEditing: ', task);\r\n    setEdit(!isEdit);\r\n  };\r\n\r\n  const onAddComments = () => {\r\n    let task = selectedTask;\r\n    task.comments = task.comments.concat({\r\n      comment: comment,\r\n      name: user.displayName ? user.displayName : 'User',\r\n      image: user.photoURL,\r\n      date: moment().format('ll'),\r\n    });\r\n    dispatch(onUpdateSelectedTask(task));\r\n    setComment('');\r\n  };\r\n\r\n  const handleStaffChange = (value) => {\r\n    const newStaff = staffList.find((staff) => staff.id === value);\r\n    setStaff((staff) => {\r\n      return {...staff, ...newStaff};\r\n    });\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <div className={styles.todoDetailContent}>\r\n      <div className={styles.todoDetailContentHeader}>\r\n        <div className={styles.todoDetailContentHeaderLeft}>\r\n          {isEdit ? (\r\n            <Form.Control type=\"text\"\r\n                          style={{maxWidth: 200, marginRight: 20, marginBottom: 10,}}\r\n                          placeholder={messages['todo.taskTitle']}\r\n                          onChange={({target: {value}}) => setTitle(value)} />\r\n          ) : (\r\n            <h2 className='text-truncate'>{selectedTask.title}</h2>\r\n          )}\r\n\r\n          <div className={clsx(styles.todoDetailContentHeaderLabel, 'd-flex align-items-center')}>\r\n            {selectedTask.label ? <Labels labels={selectedTask.label} /> : null}\r\n          </div>\r\n\r\n          <div className={styles.todoDetailContentHeaderTag}>\r\n            <span\r\n              className={styles.todoDetailContentHeaderTagBtn}\r\n              style={{\r\n                color: selectedTask.priority.color,\r\n                backgroundColor: selectedTask.priority.color + '10',\r\n              }}>\r\n              {selectedTask.priority.name}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <TaskCreatedByInfo\r\n          createdBy={selectedTask.createdBy}\r\n          createdOn={selectedTask.createdOn}\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.todoDetailStaffEdit}>\r\n        <div className={styles.todoDetailStaffRow}>\r\n          {isEdit ? (\r\n            <>\r\n              <div className={styles.todoDetailStaff}>\r\n                <ChangeStaff\r\n                  inputLabel={inputLabel}\r\n                  labelWidth={labelWidth}\r\n                  selectedStaff={selectedStaff}\r\n                  handleStaffChange={handleStaffChange}\r\n                />\r\n              </div>\r\n              <DatePicker\r\n                scheduleDate={scheduleDate}\r\n                setScheduleDate={setScheduleDate}\r\n              />\r\n            </>\r\n          ) : (\r\n            <AssignedStaff assignedStaff={selectedTask.assignedTo} />\r\n          )}\r\n        </div>\r\n\r\n        <div className={styles.todoDetailStaffEditBtnView}>\r\n          {!isEdit ? (\r\n            <AppIconBtn\r\n              smallBtn\r\n              onClick={onClickEditButton}\r\n            >\r\n              <AiOutlineEdit />\r\n            </AppIconBtn>\r\n          ) : (\r\n            <AppIconBtn\r\n              smallBtn\r\n              onClick={onDoneEditing}\r\n            >\r\n              <AiOutlineCheckCircle />\r\n            </AppIconBtn>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.todoDetailDivider} />\r\n\r\n      {!isEdit ? (\r\n        <p className={styles.todoDetailPara}>{content}</p>\r\n      ) : (\r\n        <div className={styles.todoDetailTextareaForm}>\r\n          <Form.Control as=\"textarea\" rows={3}\r\n                        placeholder={messages['common.description']}\r\n                        onChange={({target: {value}}) => setContent(value)} />\r\n        </div>\r\n      )}\r\n\r\n      <div className={styles.todoDetailStatusPri}>\r\n        <div className={styles.todoDetailStatus}>\r\n          <TaskStatus selectedTask={selectedTask} />\r\n        </div>\r\n\r\n        <div className={styles.todoDetailStatus}>\r\n          <TaskPriority selectedTask={selectedTask} />\r\n        </div>\r\n        <div className={styles.todoDetailStatus}>\r\n          <TaskLabel selectedTask={selectedTask} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.todoDetailDivider} />\r\n\r\n      <CommentsList comments={selectedTask.comments} />\r\n\r\n      <div className={clsx(styles.todoDetailTextareaForm, styles.todoDetailFooter,)}>\r\n        <Form.Control as=\"textarea\"\r\n                      placeholder={messages['common.writeComment']}\r\n                      value={comment}\r\n                      onChange={({target: {value}}) => setComment(value)} />\r\n        <Button\r\n          shape='circle'\r\n          type='primary'\r\n          className={styles.todoDetailBtn}\r\n          disabled={!comment}\r\n          onClick={onAddComments}>\r\n          <FiSend />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetailBody;\r\n\r\nTaskDetailBody.propTypes = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"events\":\"TaskCalendar_events__3ZcHa\",\"ant-badge-status\":\"TaskCalendar_ant-badge-status__F-7MD\",\"notes-month\":\"TaskCalendar_notes-month__Bts1p\",\"taskCalenderModal\":\"TaskCalendar_taskCalenderModal__EcAC9\"};","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TaskDetailBody from '../../TaskDetail/TaskDetailBody';\r\nimport {Modal} from \"react-bootstrap\";\r\nimport styles from './index.module.scss'\r\n\r\nconst ViewEditTodo = ({taskList, toDoId, showModal}) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(showModal);\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const todo = taskList.find((task) => {\r\n    return task.id === toDoId;\r\n  });\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  return (\r\n    <Modal\r\n      className={styles.taskCalenderModal}\r\n      visible={isModalVisible}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      width={800}>\r\n      <TaskDetailBody selectedTask={todo} />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nViewEditTodo.propTypes = {\r\n  taskList: PropTypes.any,\r\n  showModal: PropTypes.any,\r\n  toDoId: PropTypes.any,\r\n};\r\n\r\nexport default ViewEditTodo;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport ViewEditTodo from './ViewEditTodo';\r\nimport AddNewTask from '../../AddNewTask';\r\nimport styles from './index.module.scss';\r\nimport {Badge} from \"react-bootstrap\";\r\nimport Calendar from \"react-calendar\";\r\n\r\nconst getListData = (value, data) => {\r\n  let listData = [];\r\n  data.map((task) => {\r\n    if (\r\n      value.format('MM-DD-YYYY') ===\r\n      moment(task.scheduleDate).format('MM-DD-YYYY')\r\n    ) {\r\n      listData = listData.concat({\r\n        color: task.priority ? task.priority.color : '#7c7c7c',\r\n        title: task.title,\r\n        id: task.id,\r\n      });\r\n    }\r\n  });\r\n\r\n  return listData || [];\r\n};\r\n\r\nconst TaskCalender = ({taskList}) => {\r\n  const [isViewTodo, setIsViewToDo] = useState(false);\r\n  const [toDoId, setToDoId] = useState('');\r\n  const [isAddTaskOpen, setAddTaskOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(moment(new Date()));\r\n\r\n  const onSelectDate = (value) => {\r\n    setSelectedDate(value);\r\n  };\r\n\r\n  const onPanelChange = () => {\r\n    onCloseAddTask();\r\n  };\r\n  const onOpenAddTask = () => {\r\n    if (selectedDate) {\r\n      setAddTaskOpen(true);\r\n    } else {\r\n      setAddTaskOpen(false);\r\n    }\r\n  };\r\n\r\n  const onCloseAddTask = () => {\r\n    setAddTaskOpen(false);\r\n  };\r\n\r\n  const onChangeViewToDo = (id) => {\r\n    setIsViewToDo(!isViewTodo);\r\n    setToDoId(id);\r\n  };\r\n\r\n  const dateCellRender = (value) => {\r\n    const listData = getListData(value, taskList);\r\n    return (\r\n      <ul className={styles.events}>\r\n        {listData.map((item) => (\r\n          <li key={item.title}>\r\n            <Badge\r\n              color={item.color ? item.color : '#7c7c7c'}\r\n              text={item.title}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                onChangeViewToDo(item.id);\r\n              }}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Calendar\r\n        dateCellRender={dateCellRender}\r\n        onSelect={(value) => {\r\n          onSelectDate(value);\r\n          onOpenAddTask();\r\n        }}\r\n        value={selectedDate}\r\n        onPanelChange={onPanelChange}\r\n      />\r\n      {isViewTodo ? (\r\n        <ViewEditTodo\r\n          toDoId={toDoId}\r\n          taskList={taskList}\r\n          showModal={isViewTodo}\r\n        />\r\n      ) : null}\r\n      {isAddTaskOpen ? (\r\n        <AddNewTask\r\n          selectedDate={selectedDate}\r\n          onOpenAddTask={onOpenAddTask}\r\n          onCloseAddTask={onCloseAddTask}\r\n          isAddTaskOpen={isAddTaskOpen}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nTaskCalender.propTypes = {\r\n  taskList: PropTypes.any,\r\n};\r\n\r\nexport default TaskCalender;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nexport const TodoItem = (props) => (\r\n  <ContentLoader viewBox='0 0 400 25' {...props}>\r\n    <rect height='10' rx='0' ry='0' width='10' x='10' y='10' />\r\n    <rect height='10' rx='1' ry='0' width='100' x='30' y='10' />\r\n    <rect height='10' rx='5' ry='5' width='30' x='145' y='10' />\r\n    <rect height='10' rx='1' ry='0' width='150' x='215' y='10' />\r\n    <rect height='10' rx='0' ry='0' width='10' x='370' y='10' />\r\n    <circle cx='390' cy='15' r='5' />\r\n  </ContentLoader>\r\n);\r\nconst TodoListSkeleton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n      <TodoItem />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TodoListSkeleton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"todoListMobileItem\":\"TaskListItemMobile_todoListMobileItem__h6V+S\",\"checked\":\"TaskListItemMobile_checked__kHvxz\",\"todoListMobileMainContent\":\"TaskListItemMobile_todoListMobileMainContent__TnrG4\",\"todoListMobileContent\":\"TaskListItemMobile_todoListMobileContent__cMSR3\",\"todoListMobileView\":\"TaskListItemMobile_todoListMobileView__Mhi92\",\"todoListMobileAvatar\":\"TaskListItemMobile_todoListMobileAvatar__EzuUF\",\"todoListMobileAction\":\"TaskListItemMobile_todoListMobileAction__pH1Xi\",\"todoListMobileTitle\":\"TaskListItemMobile_todoListMobileTitle__KgQnj\",\"todoListMobilePriority\":\"TaskListItemMobile_todoListMobilePriority__jY-Db\",\"todoListStarMobile\":\"TaskListItemMobile_todoListStarMobile__Jp1Di\",\"todoListMobileDate\":\"TaskListItemMobile_todoListMobileDate__Hy+sz\",\"badgePriority\":\"TaskListItemMobile_badgePriority__2i6Wo\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\n\r\nconst Priority = ({priority}) => {\r\n  return (\r\n    <span className={styles.badgePriority} style={{color: priority.color, backgroundColor: `${priority.color}20`}}>\r\n      {priority.name}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Priority;\r\n\r\nPriority.propTypes = {\r\n  priority: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {useHistory, withRouter} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport Priority from './Priority';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport styles from './index.module.scss';\r\nimport moment from 'moment';\r\nimport {AiOutlineCheck} from 'react-icons/ai';\r\nimport {Image} from \"react-bootstrap\";\r\n\r\nconst TaskListItemMobile = ({\r\n  task,\r\n  checkedTasks,\r\n  onChangeCheckedTasks,\r\n  match,\r\n  onChangeStarred,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  const onViewTaskDetail = (task) => {\r\n    history.push(`/apps/todo/${match.params.name}/${task.id}`);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      key={task.id}\r\n      className={clsx(styles.todoListMobileItem, checkedTasks.includes(task.id) ? styles.checked : '',)}\r\n      onClick={() => onViewTaskDetail(task)}>\r\n      <div className={styles.todoListMobileMainContent}>\r\n        <div\r\n          className={clsx(styles.todoListMobileView, checkedTasks.includes(task.id) ? styles.checked : '', )}\r\n          onClick={(event) => {\r\n            event.stopPropagation();\r\n            onChangeCheckedTasks(!checkedTasks.includes(task.id), task.id);\r\n          }}>\r\n          {checkedTasks.includes(task.id) ? (\r\n            <AiOutlineCheck />\r\n          ) : (\r\n            <Image  className={styles.todoListMobileAvatar}\r\n                    src={task?.assignedTo?.image} roundedCircle />\r\n          )}\r\n        </div>\r\n\r\n        <div className={styles.todoListMobileContent}>\r\n          <span className={styles.todoListMobileTitle}>\r\n            <span className='text-truncate'>{task.title}</span>\r\n\r\n            {task.priority ? (\r\n              <span className={styles.todoListMobilePriority}>\r\n                <Priority priority={task.priority} />\r\n              </span>\r\n            ) : null}\r\n          </span>\r\n          <p className='text-truncate'>{task.content}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.todoListMobileAction}>\r\n        <span className={styles.todoListMobileDate}>\r\n          {moment(task.scheduleDate).format('HH:mm A')}\r\n        </span>\r\n        <span\r\n          className={styles.todoListStarMobile}\r\n          onClick={(event) => event.stopPropagation()}>\r\n          <AppsStarredIcon smallBtn item={task} onChange={onChangeStarred} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(TaskListItemMobile);\r\n\r\nTaskListItemMobile.defaultProps = {\r\n  checkedTasks: [],\r\n};\r\n\r\nTaskListItemMobile.propTypes = {\r\n  task: PropTypes.object.isRequired,\r\n  checkedTasks: PropTypes.array,\r\n  onChangeStarred: PropTypes.func,\r\n  match: PropTypes.object,\r\n  onChangeCheckedTasks: PropTypes.func,\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  onGetTaskList,\r\n  onUpdateTaskStarredStatus,\r\n} from '../../../../redux/actions/ToDoApp';\r\nimport TaskContentHeader from './TaskContentHeader';\r\nimport TaskListItem from './TaskListItem';\r\nimport TaskCalender from './TaskCalendar';\r\nimport {useLocation} from 'react-router-dom';\r\nimport AddNewTask from '../AddNewTask';\r\nimport AppsPagination from '@crema/core/AppsPagination';\r\nimport AppsHeader from '@crema/core/AppsContainer/AppsHeader';\r\nimport AppsContent from '@crema/core/AppsContainer/AppsContent';\r\nimport AppsFooter from '@crema/core/AppsContainer/AppsFooter';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport TodoListSkeleton from '@crema/core/AppSkeleton/TodoListSkeleton';\r\nimport AppList from '@crema/core/AppList';\r\nimport styles from './index.module.scss';\r\nimport TaskListItemMobile from './TaskListItemMobile';\r\n\r\nconst TasksList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  const taskList = useSelector(({todoApp}) => todoApp.taskList);\r\n\r\n  const totalTasks = useSelector(({todoApp}) => todoApp.totalTasks);\r\n\r\n  const labelList = useSelector(({todoApp}) => todoApp.labelList);\r\n\r\n  const loading = useSelector(({common}) => common.loading);\r\n\r\n  const [filterText, onSetFilterText] = useState('');\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [checkedTasks, setCheckedTasks] = useState([]);\r\n\r\n  const [isAddTaskOpen, setAddTaskOpen] = React.useState(false);\r\n\r\n  const [pageView, setPageView] = useState('list');\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [pathname]);\r\n\r\n  useEffect(() => {\r\n    const path = pathname.split('/');\r\n    dispatch(onGetTaskList(path[path.length - 2], path[path.length - 1], page));\r\n  }, [dispatch, page, pageView, pathname]);\r\n\r\n  const onOpenAddTask = () => {\r\n    setAddTaskOpen(true);\r\n  };\r\n\r\n  const onCloseAddTask = () => {\r\n    setAddTaskOpen(false);\r\n  };\r\n\r\n  const onChange = (page) => {\r\n    setPage(page - 1);\r\n  };\r\n\r\n  const onChangeCheckedTasks = (checked, id) => {\r\n    if (checked) {\r\n      setCheckedTasks(checkedTasks.concat(id));\r\n    } else {\r\n      setCheckedTasks(checkedTasks.filter((taskId) => taskId !== id));\r\n    }\r\n  };\r\n\r\n  const onChangeStarred = (checked, task) => {\r\n    const status = checked;\r\n    const selectedIdList = [task.id];\r\n    const path = pathname.split('/');\r\n    dispatch(\r\n      onUpdateTaskStarredStatus(selectedIdList, status, path[path.length - 1]),\r\n    );\r\n  };\r\n\r\n  const onGetFilteredItems = () => {\r\n    if (filterText === '') {\r\n      return taskList;\r\n    } else {\r\n      return taskList.filter((task) =>\r\n        task.title.toUpperCase().includes(filterText.toUpperCase()),\r\n      );\r\n    }\r\n  };\r\n\r\n  const onChangePageView = (view) => {\r\n    setPageView(view);\r\n  };\r\n\r\n  const list = onGetFilteredItems();\r\n  return (\r\n    <>\r\n      <AppsHeader>\r\n        <TaskContentHeader\r\n          checkedTasks={checkedTasks}\r\n          setCheckedTasks={setCheckedTasks}\r\n          filterText={filterText}\r\n          onSetFilterText={onSetFilterText}\r\n          onChange={onChange}\r\n          page={page}\r\n          onChangePageView={onChangePageView}\r\n          pageView={pageView}\r\n        />\r\n      </AppsHeader>\r\n      <AppsContent>\r\n        {pageView === 'list' ? (\r\n          <>\r\n            <div className={styles.todoListDesktop}>\r\n              <AppList\r\n                data={list}\r\n                renderItem={(task) => (\r\n                  <TaskListItem\r\n                    key={task.id}\r\n                    task={task}\r\n                    labelList={labelList}\r\n                    onChangeCheckedTasks={onChangeCheckedTasks}\r\n                    checkedTasks={checkedTasks}\r\n                    onChangeStarred={onChangeStarred}\r\n                  />\r\n                )}\r\n                ListEmptyComponent={\r\n                  <ListEmptyResult\r\n                    loading={loading}\r\n                    actionTitle='Add Task'\r\n                    onClick={onOpenAddTask}\r\n                    placeholder={<TodoListSkeleton />}\r\n                  />\r\n                }\r\n              />\r\n            </div>\r\n            <div className={styles.todoListMobile}>\r\n              <AppList\r\n                data={list}\r\n                renderItem={(task) => (\r\n                  <TaskListItemMobile\r\n                    key={task.id}\r\n                    task={task}\r\n                    labelList={labelList}\r\n                    checkedTasks={checkedTasks}\r\n                    onChangeStarred={onChangeStarred}\r\n                    onChangeCheckedTasks={onChangeCheckedTasks}\r\n                  />\r\n                )}\r\n                ListEmptyComponent={\r\n                  <ListEmptyResult\r\n                    loading={loading}\r\n                    actionTitle='Add Task'\r\n                    onClick={onOpenAddTask}\r\n                    placeholder={<TodoListSkeleton />}\r\n                  />\r\n                }\r\n              />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <TaskCalender taskList={list} />\r\n        )}\r\n      </AppsContent>\r\n\r\n      {taskList.length > 0 ? (\r\n        <AppsFooter className={styles.todoFooter}>\r\n          <AppsPagination count={totalTasks} page={page} onChange={onChange} />\r\n        </AppsFooter>\r\n      ) : null}\r\n\r\n      {isAddTaskOpen ? (\r\n        <AddNewTask\r\n          isAddTaskOpen={isAddTaskOpen}\r\n          onCloseAddTask={onCloseAddTask}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TasksList;\r\n","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions/ToDoApp';\r\nimport {useDispatch} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {CgCheckO} from 'react-icons/cg';\r\nimport styles from '../index.module.scss';\r\nimport clsx from \"clsx\";\r\n\r\nconst StatusToggleButton = ({selectedTask}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeTaskStatus = (status) => {\r\n    const task = selectedTask;\r\n    task.status = status;\r\n    dispatch(onUpdateSelectedTask(task));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedTask.status === 3 ? (\r\n        <span\r\n          className={clsx(styles.todoDetailStatusBtn, styles.bgColor)}\r\n          onClick={() => onChangeTaskStatus(1)}>\r\n          <CgCheckO className={styles.checkIcon} />\r\n          <IntlMessages id='todo.completed' />\r\n        </span>\r\n      ) : (\r\n        <span\r\n          className={styles.todoDetailStatusBtn}\r\n          onClick={() => onChangeTaskStatus(3)}>\r\n          <CgCheckO className={styles.checkIcon} />\r\n          <IntlMessages id='todo.markAsCompleted' />\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatusToggleButton;\r\n\r\nStatusToggleButton.propTypes = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport {useHistory} from 'react-router-dom';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport StatusToggleButton from './StatusToggleButton';\r\nimport AppsDeleteIcon from '@crema/core/AppsDeleteIcon';\r\nimport {BiArrowBack} from 'react-icons/bi';\r\nimport AppIconBtn from \"@crema/core/AppIconBtn\";\r\nimport styles from '../index.module.scss';\r\n\r\nconst TaskDetailHeader = (props) => {\r\n  const {selectedTask} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const onClickBackButton = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const onChangeStarred = (checked) => {\r\n    const task = selectedTask;\r\n    task.isStarred = checked;\r\n    dispatch(onUpdateSelectedTask(task));\r\n  };\r\n\r\n  const onDeleteTask = () => {\r\n    const task = selectedTask;\r\n    task.folderValue = 126;\r\n    dispatch(onUpdateSelectedTask(task));\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppIconBtn\r\n        smallBtn\r\n        className={styles.todoDetailArrow}\r\n        title={<IntlMessages id='common.back' />}\r\n        onClick={onClickBackButton}\r\n      >\r\n        <BiArrowBack />\r\n      </AppIconBtn>\r\n\r\n      <StatusToggleButton selectedTask={selectedTask} />\r\n\r\n      <span className={styles.todoDetailHeaderStarIcon}>\r\n        <AppsStarredIcon smallBtn item={selectedTask} onChange={onChangeStarred} />\r\n      </span>\r\n\r\n      <div className={styles.todoDetailHeaderDeleteIcon}>\r\n        <AppsDeleteIcon\r\n          smallBtn\r\n          deleteAction={onDeleteTask}\r\n          deleteTitle={<IntlMessages id='todo.deleteMessage' />}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskDetailHeader;\r\n\r\nTaskDetailHeader.propTypes = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport TaskDetailHeader from './TaskDetailHeader';\r\nimport TaskDetailBody from './TaskDetailBody';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onGetSelectedTask} from '../../../../redux/actions/ToDoApp';\r\nimport {useParams} from 'react-router-dom';\r\nimport AppsHeader from '@crema/core/AppsContainer/AppsHeader';\r\nimport AppsContent from '@crema/core/AppsContainer/AppsContent';\r\n\r\nconst TaskDetail = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {id} = useParams();\r\n  useEffect(() => {\r\n    dispatch(onGetSelectedTask(id));\r\n  }, [dispatch, id]);\r\n\r\n  const selectedTask = useSelector(({todoApp}) => todoApp.selectedTask);\r\n  if (!selectedTask) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      <AppsHeader>\r\n        <TaskDetailHeader selectedTask={selectedTask} />\r\n      </AppsHeader>\r\n      <AppsContent isDetailView>\r\n        <TaskDetailBody selectedTask={selectedTask} />\r\n      </AppsContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskDetail;\r\n","import React, {useEffect} from 'react';\r\nimport TaskSideBar from './TaskSideBar/index';\r\nimport TasksList from './TasksList';\r\nimport TaskDetail from './TaskDetail';\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n  onGetToDoFolderList,\r\n  onGetToDoLabelList,\r\n  onGetToDoPriorityList,\r\n  onGetToDoStaffList,\r\n  onGetToDoStatusList,\r\n} from '../../../redux/actions/ToDoApp';\r\nimport PropTypes from 'prop-types';\r\nimport {useIntl} from 'react-intl';\r\nimport AppsContainer from '@crema/core/AppsContainer';\r\nimport AppPageMetadata from '@crema/core/AppPageMetadata';\r\n\r\nconst ToDo = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoLabelList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoFolderList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoPriorityList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoStaffList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoStatusList());\r\n  }, [dispatch]);\r\n\r\n  const onGetMainComponent = () => {\r\n    if (props.match.params.id) {\r\n      return <TaskDetail />;\r\n    } else {\r\n      return <TasksList />;\r\n    }\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppsContainer\r\n      title={messages['todo.todoApp']}\r\n      sidebarContent={<TaskSideBar />}>\r\n      <AppPageMetadata title='Todo App' />\r\n      {onGetMainComponent()}\r\n    </AppsContainer>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n\r\nToDo.defaultProps = {\r\n  match: null,\r\n};\r\n\r\nToDo.propTypes = {\r\n  match: PropTypes.object,\r\n};\r\n","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active,\n  disabled,\n  className,\n  style,\n  activeLabel,\n  children,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : Anchor;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: \"page-link\",\n      disabled: disabled,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label = name) {\n  function Button({\n    children,\n    ...props\n  }) {\n    return /*#__PURE__*/_jsxs(PageItem, { ...props,\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        \"aria-hidden\": \"true\",\n        children: children || defaultValue\n      }), /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: label\n      })]\n    });\n  }\n\n  Button.displayName = name;\n  return Button;\n}\n\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","// extracted by mini-css-extract-plugin\nexport default {\"listFooter\":\"AppList_listFooter__Sh7ys\",\"loaderProgress\":\"AppList_loaderProgress__rZEBy\",\"emptyListContainer\":\"AppList_emptyListContainer__PsPAD\"};","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"AppRowContainer_row__lSYCd\"};","// extracted by mini-css-extract-plugin\nexport default {\"appsWrap\":\"AppsContainer_appsWrap__zvw-4\",\"appsWrapHeader\":\"AppsContainer_appsWrapHeader__szimU\",\"menuBtn\":\"AppsContainer_menuBtn__hKXrB\",\"appsContainer\":\"AppsContainer_appsContainer__ASz5t\",\"appMainFixedFooter\":\"AppsContainer_appMainFixedFooter__1JfeO\",\"appMainFooter\":\"AppsContainer_appMainFooter__qShEH\",\"appsMainContent\":\"AppsContainer_appsMainContent__59PsM\",\"appsMainContentFull\":\"AppsContainer_appsMainContentFull__WJWdT\",\"appsContentContainer\":\"AppsContainer_appsContentContainer__ild+C\",\"fullView\":\"AppsContainer_fullView__vSr4E\",\"scrum-absolute\":\"AppsContainer_scrum-absolute__VqjBV\",\"react-trello-board\":\"AppsContainer_react-trello-board__OycKh\",\"scrum-row\":\"AppsContainer_scrum-row__PRpkM\",\"smooth-dnd-container\":\"AppsContainer_smooth-dnd-container__pGBR-\",\"horizontal\":\"AppsContainer_horizontal__f1Ksg\",\"scrum-col\":\"AppsContainer_scrum-col__Gi57q\",\"react-trello-lane\":\"AppsContainer_react-trello-lane__sS-jH\",\"scrum-board-list-header-card\":\"AppsContainer_scrum-board-list-header-card__+vk2n\",\"scroll-scrum-item\":\"AppsContainer_scroll-scrum-item__JP4Va\",\"vertical\":\"AppsContainer_vertical__KLU+e\",\"appsFooter\":\"AppsContainer_appsFooter__hOjz4\",\"appsHeader\":\"AppsContainer_appsHeader__bf5mr\",\"appsSidebar\":\"AppsContainer_appsSidebar__ZPAXS\",\"card\":\"AppsContainer_card__tJ4dA\",\"heightFull\":\"AppsContainer_heightFull__GtgHE\",\"appsOffcanvas\":\"AppsContainer_appsOffcanvas__psiRa\"};"],"names":["AppConfirmationModal","open","onDeny","onConfirm","modalTitle","paragraph","title","show","onHide","centered","Header","closeButton","Title","Body","Footer","variant","onClick","defaultProps","useSelector","common","loading","error","displayMessage","ListEmptyResult","loader","placeholder","actionTitle","content","className","clsx","styles","emptyListContainer","percent","type","style","marginTop","minWidth","id","description","prototype","PropTypes","action","getEmptyContainer","ListEmptyComponent","React","getFooterContainer","ListFooterComponent","ListView","renderItem","onEndReached","data","interval","duration","delay","useBottomScrollListener","AppAnimateGroup","animateStyle","flexDirection","flexWrap","length","map","item","index","border","ListFooter","footerText","loaderProgress","ProgressBar","listFooter","AppList","footerProps","props","AppRow","row","children","others","component","ease","height","SidebarItem","viewBox","x","y","rx","ry","width","AppsContent","isDetailView","fullView","appsContentContainer","rest","appsFooter","AppsHeader","appsHeader","isAppDrawerOpen","setAppDrawerOpen","sidebarContent","appsSidebar","Offcanvas","appsOffcanvas","closeIcon","Card","card","AppsContainer","useState","useLayoutContext","footer","navStyle","noContentAnimation","appsWrap","appsWrapHeader","appsWrapHeaderFull","Button","menuBtn","zIndex","overflow","appsContainer","appsMainContent","appsMainContentFull","cardStyle","minHeight","AppInfoView","AppsPagination","count","page","onChange","pageSize","total","backIconButtonProps","nextIconButtonProps","rowsPerPageOptions","getIconByName","iconName","path","to","icon","name","smallBtn","AppIconBtn","e","isStarred","onCloseAddTask","selectedDate","labelList","todoApp","validated","setValidated","priorityList","staffList","user","useAuthUser","dispatch","useDispatch","messages","useIntl","Form","noValidate","initialValues","scheduleDate","moment","onSubmit","values","staff","find","priority","label","filter","newTask","Math","floor","random","hasAttachments","sentAt","isRead","folderValue","createdBy","displayName","image","photoURL","format","assignedTo","createdOn","status","comments","console","log","onCreateTask","Group","controlId","Control","required","defaultValue","Feedback","AppRowContainer","Col","xs","sm","md","Select","value","Image","src","roundedCircle","toUpperCase","mode","maxTagCount","as","autoSize","minRows","maxRows","htmlType","IntlMessages","isAddTaskOpen","Modal","size","AppScrollbar","alias","backgroundColor","color","folderList","setAddTaskOpen","ListGroup","AppsSideBarFolderItem","onSelectTasks","selectedItems","setSelectedItems","deleteAction","isDeleteModalOpen","setDeleteModalOpen","checkedTasks","setCheckedTasks","useLocation","pathname","split","onDeleteSelectedTasks","deleteTitle","Dropdown","Toggle","Menu","key","onUpdateTaskLabels","Item","href","pageView","onChangePageView","TaskContentHeader","filterText","onSetFilterText","taskList","totalTasks","Check","checked","event","target","taskIds","task","InputGroup","FormControl","Text","labels","TaskListItem","onChangeCheckedTasks","match","onChangeStarred","history","useHistory","includes","push","params","onViewTaskDetail","stopPropagation","AppsStarredIcon","onUpdateSelectedTask","withRouter","ChangeStaff","handleStaffChange","selectedStaff","onSelect","toString","inputLabel","labelWidth","AssignedStaff","assignedStaff","charAt","selectedTask","statusList","onChangeStatus","onChangePriority","isPreviousSender","isLast","date","comment","CommentsList","sender","isEdit","setEdit","setTitle","setContent","setComment","setScheduleDate","setStaff","setLabelWidth","useEffect","maxWidth","marginRight","marginBottom","newStaff","DatePicker","rows","shape","disabled","concat","toDoId","showModal","isModalVisible","setIsModalVisible","todo","visible","onOk","onCancel","isViewTodo","setIsViewToDo","setToDoId","Date","setSelectedDate","onOpenAddTask","dateCellRender","listData","getListData","Badge","text","preventDefault","onSelectDate","onPanelChange","TodoItem","cx","cy","r","TaskListItemMobile","setPage","setPageView","onGetTaskList","taskId","selectedIdList","onUpdateTaskStarredStatus","list","view","AppsFooter","onChangeTaskStatus","goBack","useParams","onGetSelectedTask","ToDo","onGetToDoLabelList","onGetToDoFolderList","onGetToDoPriorityList","onGetToDoStaffList","onGetToDoStatusList","AppPageMetadata","PageItem","ref","active","activeLabel","Component","Anchor","_jsx","classNames","_jsxs","createButton","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","decoratedBsPrefix","useBootstrapPrefix","Object","assign","useWillUnmount","fn","onUnmount","valueRef","useRef","current","useUpdatedRef"],"sourceRoot":""}