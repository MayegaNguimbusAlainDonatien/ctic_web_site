{"version":3,"file":"static/js/8753.30d648e8.chunk.js","mappings":"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","sources":["@crema/core/AppConfirmationModal/index.js","@crema/core/AppInfoView/index.js","@crema/core/AppList/ListEmptyResult.js","@crema/core/AppList/ListView.js","@crema/core/AppList/ListFooter.js","@crema/core/AppList/index.js","@crema/core/AppRowContainer/index.js","@crema/core/AppSkeleton/SidebarListSkeleton.js","@crema/core/AppsContainer/AppsContent.js","@crema/core/AppsContainer/AppsFooter.js","@crema/core/AppsContainer/AppsHeader.js","@crema/core/AppsContainer/AppSidebar.js","@crema/core/AppsContainer/index.js","@crema/core/AppsPagination/index.js","webpack://ctic/./src/@crema/core/AppsSideBarFolderItem/index.module.scss?27cc","@crema/core/AppsSideBarFolderItem/index.js","webpack://ctic/./src/@crema/core/AppsStarredIcon/index.module.scss?1915","@crema/core/AppsStarredIcon/index.js","webpack://ctic/./src/pages/apps/Contact/ContactListing/index.module.scss?bd6b","pages/apps/Contact/ContactListing/ContactHeader/CheckBox.js","pages/apps/Contact/ContactListing/ContactHeader/ContactCheckedActions.js","pages/apps/Contact/ContactListing/ContactHeader/ViewSelectButtons.js","pages/apps/Contact/ContactListing/ContactHeader/index.js","webpack://ctic/./src/pages/apps/Contact/CreateContact/index.module.scss?0309","pages/apps/Contact/CreateContact/AddContactForm.js","pages/apps/Contact/CreateContact/index.js","pages/apps/Contact/ContactListing/ContactViewContent/ItemMenu.js","pages/apps/Contact/ContactListing/ContactViewContent/ActionBtnHover.js","pages/apps/Contact/ContactListing/ContactViewContent/ContactListItem.js","pages/apps/Contact/ContactListing/ContactViewContent/ContactGridItem.js","@crema/core/AppSkeleton/ContactListSkeleton.js","pages/apps/Contact/ContactListing/ContactViewContent/ContactListItemMobile.js","pages/apps/Contact/ContactListing/ContactViewContent/index.js","webpack://ctic/./src/pages/apps/Contact/ContactDetail/index.module.scss?f505","pages/apps/Contact/ContactDetail/ContactActions.js","pages/apps/Contact/ContactDetail/PersonalDetails.js","pages/apps/Contact/ContactDetail/OtherDetails.js","pages/apps/Contact/ContactDetail/index.js","pages/apps/Contact/ContactListing/index.js","webpack://ctic/./src/pages/apps/Contact/ContactSideBar/index.module.scss?cb56","pages/apps/Contact/ContactSideBar/LabelItem.js","pages/apps/Contact/ContactSideBar/index.js","pages/apps/Contact/index.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useUpdatedRef.js","webpack://ctic/./src/@crema/core/AppList/index.module.scss?d576","webpack://ctic/./src/@crema/core/AppRowContainer/index.module.scss?e727","webpack://ctic/./src/@crema/core/AppsContainer/index.module.scss?3797"],"sourcesContent":["import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Modal, Button} from 'react-bootstrap';\r\n\r\nconst AppConfirmationModal = ({open, onDeny, onConfirm, modalTitle, paragraph, title}) => {\r\n  return (\r\n    <Modal show={open} onHide={() => onDeny(false)} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{modalTitle}</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <p>{paragraph}</p>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button variant='outline-primary' onClick={() => onDeny(false)}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant='primary' onClick={onConfirm}>\r\n          Ok\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nAppConfirmationModal.propTypes = {\r\n  modalTitle: PropTypes.any.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onDeny: PropTypes.func.isRequired,\r\n  paragraph: PropTypes.any,\r\n  onConfirm: PropTypes.func.isRequired,\r\n};\r\n\r\nAppConfirmationModal.defaultProps = {\r\n  paragraph: 'Are you sure you want to delete?',\r\n};\r\nexport default AppConfirmationModal;\r\n","import React, {useEffect} from 'react';\r\n// import {message} from 'react-bootstrap';\r\nimport AppLoader from '@crema/core/AppLoader';\r\nimport {useSelector} from 'react-redux';\r\n// import {useDispatch} from 'react-redux';\r\n// import {hideMessage} from '../../../redux/actions';\r\n\r\nconst AppInfoView = () => {\r\n  const {loading, error, displayMessage} = useSelector(({common}) => common);\r\n  // const dispatch = useDispatch();\r\n  //\r\n  // useEffect(() => {\r\n  //   if (error) {\r\n  //     message.error(error);\r\n  //     dispatch(hideMessage());\r\n  //   }\r\n  // }, [error]);\r\n  //\r\n  // useEffect(() => {\r\n  //   if (displayMessage) {\r\n  //     message.success(displayMessage);\r\n  //     dispatch(hideMessage());\r\n  //   }\r\n  // }, [displayMessage]);\r\n\r\n  return <>{loading ? <AppLoader /> : null}</>;\r\n};\r\n\r\nexport default AppInfoView;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport IntlMessages from '../../utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, ProgressBar} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nconst ListEmptyResult = ({\r\n  loader,\r\n  placeholder,\r\n  loading,\r\n  title,\r\n  actionTitle,\r\n  content,\r\n  onClick,\r\n}) => {\r\n  if (loading || loader) {\r\n    return (\r\n      <React.Fragment>\r\n        {placeholder ? (\r\n          placeholder\r\n        ) : (\r\n          <div\r\n            className={clsx(\r\n              styles.emptyListContainer,\r\n              'd-flex align-items-center justify-content-center text-center flex-grow-1 h-100',\r\n            )}>\r\n            <ProgressBar percent={30} />\r\n            <span>Loading...</span>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        className={clsx(\r\n          styles.emptyListContainer,\r\n          'd-flex align-items-center justify-content-center flex-column text-center flex-grow-1 h-100',\r\n        )}>\r\n        {title ? <h4>{title}</h4> : null}\r\n        <p>{content}</p>\r\n\r\n        {actionTitle ? (\r\n          <Button\r\n            type='primary'\r\n            style={{marginTop: 30, minWidth: 150}}\r\n            onClick={onClick}>\r\n            {actionTitle}\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ListEmptyResult;\r\n\r\nListEmptyResult.defaultProps = {\r\n  title: <IntlMessages id='common.noRecordFound' />,\r\n  description: '',\r\n};\r\n\r\nListEmptyResult.prototype = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  actionTitle: PropTypes.string,\r\n  action: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport {useBottomScrollListener} from 'react-bottom-scroll-listener';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\n\r\nconst getEmptyContainer = (ListEmptyComponent) => {\r\n  if (ListEmptyComponent)\r\n    return React.isValidElement(ListEmptyComponent) ? (\r\n      ListEmptyComponent\r\n    ) : (\r\n      <ListEmptyComponent />\r\n    );\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = (ListFooterComponent) => {\r\n  if (ListFooterComponent)\r\n    return React.isValidElement(ListFooterComponent) ? (\r\n      ListFooterComponent\r\n    ) : (\r\n      <ListFooterComponent />\r\n    );\r\n  return null;\r\n};\r\nconst ListView = ({\r\n  renderItem,\r\n  onEndReached,\r\n  data,\r\n  ListFooterComponent,\r\n  ListEmptyComponent,\r\n  interval,\r\n  type,\r\n  duration,\r\n  className,\r\n  delay,\r\n}) => {\r\n  if (!onEndReached) {\r\n    onEndReached = () => {};\r\n  }\r\n\r\n  useBottomScrollListener(onEndReached, 200);\r\n  return (\r\n    <AppAnimateGroup\r\n      className={className}\r\n      animateStyle={{flexDirection: 'column', flexWrap: 'no-wrap'}}\r\n      interval={interval}\r\n      type={type}\r\n      delay={delay}\r\n      duration={duration}>\r\n      {data.length > 0\r\n        ? data.map((item, index) => renderItem(item, index))\r\n        : getEmptyContainer(ListEmptyComponent)}\r\n\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\nListView.propTypes = {\r\n  border: PropTypes.bool,\r\n  type: PropTypes.any,\r\n  interval: PropTypes.any,\r\n  containerStyle: PropTypes.object,\r\n  ListEmptyComponent: PropTypes.node,\r\n  ListFooterComponent: PropTypes.node,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderItem: PropTypes.func,\r\n  delay: PropTypes.any,\r\n  duration: PropTypes.any,\r\n  className: PropTypes.string,\r\n};\r\nListView.defaultProps = {\r\n  border: false,\r\n  data: [],\r\n  onEndReached: () => {},\r\n  type: 'top',\r\n  interval: 50,\r\n  delay: 0,\r\n  duration: 300,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport {ProgressBar} from 'react-bootstrap';\r\nimport clsx from 'clsx';\r\n\r\nconst ListFooter = ({loading, footerText}) => {\r\n  return loading ? (\r\n    <div\r\n      className={clsx(\r\n        styles.loaderProgress,\r\n        'd-flex align-items-center w-100 p-2',\r\n      )}>\r\n      <ProgressBar percent={30} />\r\n      <span>Loading...</span>\r\n    </div>\r\n  ) : (\r\n    <div className={clsx(styles.listFooter, 'd-flex align-items-center')}>\r\n      <p>{footerText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListFooter;\r\n\r\nListFooter.propTypes = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nListFooter.defaultProps = {\r\n  loading: false,\r\n};\r\n","import React from 'react';\r\nimport ListView from './ListView';\r\nimport PropTypes from 'prop-types';\r\nimport ListFooter from './ListFooter';\r\n\r\nconst AppList = ({footerProps, ...props}) => {\r\n  return (\r\n    <ListView\r\n      {...props}\r\n      ListFooterComponent={\r\n        footerProps ? (\r\n          <ListFooter\r\n            loading={footerProps.loading}\r\n            footerText={footerProps.footerText}\r\n          />\r\n        ) : null\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppList;\r\nAppList.propTypes = {\r\n  border: PropTypes.bool,\r\n  ListEmptyComponent: PropTypes.node,\r\n  ListFooterComponent: PropTypes.node,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderItem: PropTypes.func,\r\n  footerProps: PropTypes.string,\r\n  type: PropTypes.any,\r\n  delay: PropTypes.any,\r\n  duration: PropTypes.any,\r\n  interval: PropTypes.any,\r\n  className: PropTypes.string,\r\n};\r\nAppList.defaultProps = {\r\n  border: false,\r\n};\r\n","import React from 'react';\r\nimport styles from './index.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport {Row} from 'react-bootstrap';\r\n\r\nconst AppRow = (props) => <Row className={styles.row} {...props} />;\r\n\r\nconst AppRowContainer = ({children, ...others}) => {\r\n  return (\r\n    <AppAnimateGroup\r\n      animateStyle={{flexDirection: 'row'}}\r\n      component={AppRow}\r\n      type='bottom'\r\n      ease='easeInOutQuart'\r\n      height='auto'\r\n      {...others}>\r\n      {children}\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppRowContainer;\r\nAppRowContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst SidebarItem = () => (\r\n  <ContentLoader viewBox='0 0 200 45'>\r\n    <rect x='0' y='10' rx='0' ry='0' width='20' height='20' />\r\n    <rect x='35' y='12' rx='2' ry='2' width='100' height='15' />\r\n  </ContentLoader>\r\n);\r\nconst SidebarListSkeleton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n      <SidebarItem />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SidebarListSkeleton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport AppScrollbar from '../AppScrollbar';\r\nimport styles from './index.module.scss';\r\n\r\nconst AppsContent = (props) => {\r\n  const {children, isDetailView, fullView} = props;\r\n\r\n  return (\r\n    <AppScrollbar\r\n      className={clsx(\r\n        styles.appsContentContainer,\r\n        'd-flex flex-column',\r\n        isDetailView && styles.isDetailView,\r\n        fullView && styles.fullView,\r\n      )}>\r\n      {children}\r\n    </AppScrollbar>\r\n  );\r\n};\r\n\r\nexport default AppsContent;\r\n\r\nAppsContent.defaultProps = {isDetailView: false};\r\n\r\nAppsContent.propTypes = {\r\n  children: PropTypes.node,\r\n  isDetailView: PropTypes.bool,\r\n  fullView: PropTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst AppsFooter = (props) => {\r\n  const {children, className, ...rest} = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(styles.appsFooter, 'apps-footer', className)}\r\n      {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsFooter;\r\n\r\nAppsFooter.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport clsx from 'clsx';\r\n\r\nconst AppsHeader = ({children}) => {\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.appsHeader,\r\n        'apps-header d-flex align-items-center',\r\n      )}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsHeader;\r\nAppsHeader.defaultProps = {};\r\n\r\nAppsHeader.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport {Card, Offcanvas} from 'react-bootstrap';\r\nimport clsx from 'clsx';\r\n\r\nconst AppSidebar = (props) => {\r\n  const {isAppDrawerOpen, setAppDrawerOpen, sidebarContent} = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        styles.appsSidebar,\r\n        'd-flex flex-column',\r\n      )}>\r\n      <Offcanvas\r\n        className={styles.appsOffcanvas}\r\n        closeIcon={null}\r\n        show={isAppDrawerOpen}\r\n        onHide={() => setAppDrawerOpen(!isAppDrawerOpen)}>\r\n        <Offcanvas.Body className='p-0'>\r\n        {sidebarContent}\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n      <Card className={clsx(styles.card, 'd-none h-100 flex-lg-grow-1 d-lg-flex flex-lg-column')}>\r\n        {sidebarContent}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppSidebar;\r\nAppSidebar.propTypes = {\r\n  footer: PropTypes.node,\r\n  setAppDrawerOpen: PropTypes.func,\r\n  sidebarContent: PropTypes.node,\r\n  isAppDrawerOpen: PropTypes.bool,\r\n  fullView: PropTypes.bool,\r\n};\r\n","import React, {useState} from 'react';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport PropTypes from 'prop-types';\r\nimport AppSidebar from './AppSidebar';\r\nimport clsx from 'clsx';\r\nimport styles from './index.module.scss';\r\nimport QueueAnim from 'rc-queue-anim';\r\nimport {useLayoutContext} from '../../utility/AppContextProvider/LayoutContextProvider';\r\nimport {Button, Card} from 'react-bootstrap';\r\nimport {AiOutlineMenu} from 'react-icons/ai';\r\n\r\nconst AppsContainer = (props) => {\r\n  const [isAppDrawerOpen, setAppDrawerOpen] = useState(false);\r\n  const {footer, navStyle} = useLayoutContext();\r\n  const {title, noContentAnimation, sidebarContent, fullView, children} = props;\r\n  return (\r\n    <div className={clsx(styles.appsWrap, 'd-flex flex-column')}>\r\n      <div\r\n        className={clsx(styles.appsWrapHeader, 'd-flex align-items-center', {\r\n          appsWrapHeaderFull: fullView,\r\n        })}>\r\n        {fullView ? null : (\r\n          <Button\r\n            className={styles.menuBtn}\r\n            onClick={() => setAppDrawerOpen(!isAppDrawerOpen)}>\r\n            <AiOutlineMenu />\r\n          </Button>\r\n        )}\r\n        <QueueAnim style={{zIndex: 3, overflow: 'hidden'}} type='scale'>\r\n          <h2 className='text-truncate' key='title'>\r\n            {title}\r\n          </h2>\r\n        </QueueAnim>\r\n      </div>\r\n\r\n      <div className={clsx(styles.appsContainer, 'd-flex apps-container')}>\r\n        {sidebarContent ? (\r\n          <QueueAnim\r\n            style={{zIndex: 3}}\r\n            type={props.type ? props.type : 'left'}>\r\n            <AppSidebar\r\n              isAppDrawerOpen={isAppDrawerOpen}\r\n              setAppDrawerOpen={setAppDrawerOpen}\r\n              footer={footer}\r\n              fullView={fullView}\r\n              navStyle={navStyle}\r\n              sidebarContent={sidebarContent}\r\n              key='sidebar'\r\n            />\r\n          </QueueAnim>\r\n        ) : null}\r\n        <div\r\n          className={clsx(\r\n            styles.appsMainContent,\r\n            fullView ? styles.appsMainContentFull : '',\r\n            'd-flex flex-column',\r\n          )}>\r\n          {noContentAnimation ? (\r\n            <Card\r\n              key='content'\r\n              className={clsx(\r\n                styles.card,\r\n                'flex-grow-1 d-flex flex-column h-100 overflow-hidden',\r\n              )}\r\n              style={{\r\n                ...props.cardStyle,\r\n              }}>\r\n              {children}\r\n            </Card>\r\n          ) : (\r\n            <QueueAnim\r\n              type={props.type ? props.type : 'right'}\r\n              style={{minHeight: '100%'}}>\r\n              <Card\r\n                key='content'\r\n                className={clsx(\r\n                  styles.card,\r\n                  'flex-grow-1 d-flex flex-column h-100 overflow-hidden',\r\n                )}\r\n                style={{\r\n                  ...props.cardStyle,\r\n                }}>\r\n                {children}\r\n              </Card>\r\n            </QueueAnim>\r\n          )}\r\n\r\n          <AppInfoView />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsContainer;\r\n\r\nAppsContainer.defaultProps = {\r\n  title: '',\r\n  noContentAnimation: false,\r\n};\r\n\r\nAppsContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  cardStyle: PropTypes.object,\r\n  noContentAnimation: PropTypes.bool,\r\n  sidebarContent: PropTypes.node,\r\n  fullView: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  type: PropTypes.any,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Pagination} from 'react-bootstrap';\r\n\r\nconst AppsPagination = ({count, page, onChange, pageSize, className}) => {\r\n  return (\r\n    <Pagination\r\n      component='div'\r\n      total={count}\r\n      pageSize={pageSize}\r\n      className={className}\r\n      page={page}\r\n      backIconButtonProps={{'aria-label': 'Previous Page'}}\r\n      nextIconButtonProps={{'aria-label': 'Next Page'}}\r\n      onChange={onChange}\r\n      rowsPerPageOptions={[]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppsPagination;\r\n\r\nAppsPagination.defaultProps = {\r\n  className: '',\r\n  pageSize: 15,\r\n};\r\n\r\nAppsPagination.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func,\r\n  className: PropTypes.string,\r\n  pageSize: PropTypes.number,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"AppsSideBarFolderItem_listItem__bD+8V\",\"listItemIcon\":\"AppsSideBarFolderItem_listItemIcon__8mcNc\",\"listItemText\":\"AppsSideBarFolderItem_listItemText__ykAey\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {FaRegCheckCircle, FaRegEnvelope, FaRegEnvelopeOpen, FaRegStar} from 'react-icons/fa';\r\nimport {BiArchiveIn, BiCalendarMinus, BiUser, } from 'react-icons/bi';\r\nimport {AiOutlineDelete, AiOutlineSchedule, AiOutlineUnorderedList} from 'react-icons/ai';\r\nimport {FiInfo, FiRefreshCw} from 'react-icons/fi';\r\n\r\nimport styles from './index.module.scss';\r\nimport {HiOutlineRefresh} from 'react-icons/hi';\r\n\r\nconst getIconByName = (iconName) => {\r\n  switch (iconName) {\r\n    case 'check-circle':\r\n      return <FaRegCheckCircle />;\r\n    case 'envelope':\r\n      return <FaRegEnvelope />;\r\n    case 'star':\r\n      return <FaRegStar />;\r\n    case 'calendar-minus':\r\n      return <BiCalendarMinus />;\r\n    case 'user':\r\n      return <BiUser />;\r\n    case 'clock':\r\n      return <AiOutlineSchedule />;\r\n    case 'envelope-open':\r\n      return <FaRegEnvelopeOpen />;\r\n    case 'trash-alt':\r\n      return <AiOutlineDelete />;\r\n    case 'file-archive':\r\n      return <BiArchiveIn />;\r\n    case 'question-circle':\r\n      return <FiInfo />;\r\n    case 'clone':\r\n      return <FiRefreshCw />;\r\n    case 'all':\r\n      return <AiOutlineUnorderedList />;\r\n    case 'frequent':\r\n      return <HiOutlineRefresh />;\r\n  }\r\n};\r\n\r\nconst AppsSideBarFolderItem = ({item, path}) => {\r\n  return (\r\n    <div key={item.id} className={styles.listItem}>\r\n      <NavLink to={path}>\r\n        <span className={styles.listItemIcon}>{getIconByName(item.icon)}</span>\r\n        <span className={styles.listItemText}>{item.name}</span>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsSideBarFolderItem;\r\n\r\nAppsSideBarFolderItem.propTypes = {\r\n  item: PropTypes.object,\r\n  path: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"starIcon\":\"AppsStarredIcon_starIcon__wPdGq\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport AppIconBtn from '../AppIconBtn';\r\nimport {AiOutlineStar, AiFillStar} from 'react-icons/ai';\r\n\r\nconst AppsStarredIcon = ({item, title, smallBtn, onChange}) => {\r\n  return (\r\n    <AppIconBtn\r\n      smallBtn={smallBtn}\r\n      title={title}\r\n      onClick={(e) => onChange(!item.isStarred, item, e)}\r\n    >\r\n      {\r\n        <span className={styles.starIcon}>\r\n          {item.isStarred ? (\r\n            <AiFillStar />\r\n          ) : (\r\n            <AiOutlineStar />\r\n          )}\r\n        </span>\r\n      }\r\n    </AppIconBtn>\r\n  );\r\n};\r\n\r\nexport default AppsStarredIcon;\r\n\r\nAppsStarredIcon.propTypes = {\r\n  item: PropTypes.object,\r\n  onChange: PropTypes.func,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  smallBtn: PropTypes.bool,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListDesktop\":\"ContactListing_contactListDesktop__sDwa8\",\"contactListMobile\":\"ContactListing_contactListMobile__YZPPR\",\"contactFooter\":\"ContactListing_contactFooter__lUBI-\",\"contactHeaderPagination\":\"ContactListing_contactHeaderPagination__wJswj\",\"contactContentHeader\":\"ContactListing_contactContentHeader__zfgwi\",\"contactHeaderCheckboxView\":\"ContactListing_contactHeaderCheckboxView__YpGpA\",\"contactCheckedAction\":\"ContactListing_contactCheckedAction__9DxQ6\",\"dropdownToggleBtn\":\"ContactListing_dropdownToggleBtn__wzibq\",\"contactViewSelect\":\"ContactListing_contactViewSelect__YOkps\",\"contactGridView\":\"ContactListing_contactGridView__NGuNJ\",\"contactGridCard\":\"ContactListing_contactGridCard__BXtgj\",\"contactListItemActionHover\":\"ContactListing_contactListItemActionHover__xsFY4\",\"contactGridCardHeaderAction\":\"ContactListing_contactGridCardHeaderAction__1gX96\",\"contactGridCardHeader\":\"ContactListing_contactGridCardHeader__d7HZl\",\"contactGridCardHeaderCheckbox\":\"ContactListing_contactGridCardHeaderCheckbox__i2KwW\",\"contactGridCardAvatar\":\"ContactListing_contactGridCardAvatar__otr0V\",\"contactGridCardContent\":\"ContactListing_contactGridCardContent__m3PRa\",\"contactGridCardTitle\":\"ContactListing_contactGridCardTitle__IFHFB\",\"contactGridCardAction\":\"ContactListing_contactGridCardAction__D6gQA\",\"contactGridCardActionItem\":\"ContactListing_contactGridCardActionItem__+rCj3\",\"contactGridCardIcon\":\"ContactListing_contactGridCardIcon__sIz23\",\"contactListItem\":\"ContactListing_contactListItem__wDpWq\",\"contactListItemAction\":\"ContactListing_contactListItemAction__mu+jz\",\"contactListItemCompany\":\"ContactListing_contactListItemCompany__xMBKk\",\"contactListItemCheckboxView\":\"ContactListing_contactListItemCheckboxView__U+8sm\",\"contactListItemStar\":\"ContactListing_contactListItemStar__5kvw+\",\"contactListAvatarMobileView\":\"ContactListing_contactListAvatarMobileView__IqaFl\",\"contactListItemAvatarView\":\"ContactListing_contactListItemAvatarView__NkCoo\",\"contactListItemAvatar\":\"ContactListing_contactListItemAvatar__VB5+V\",\"contactListItemTitle\":\"ContactListing_contactListItemTitle__o-WpB\",\"contactListItemCol\":\"ContactListing_contactListItemCol__KzuFx\",\"contactListItemEmail\":\"ContactListing_contactListItemEmail__1OU5N\",\"contactListExportIcon\":\"ContactListing_contactListExportIcon__yQiWl\",\"contactListItemMenuView\":\"ContactListing_contactListItemMenuView__V1Vtd\",\"contactSearch\":\"ContactListing_contactSearch__rMqdq\",\"contactListItemMobile\":\"ContactListing_contactListItemMobile__5Ux-x\",\"contactListItemMainContentMobile\":\"ContactListing_contactListItemMainContentMobile__aS+fN\",\"contactListItemContentMobile\":\"ContactListing_contactListItemContentMobile__wBPb8\",\"contactListItemActionMobile\":\"ContactListing_contactListItemActionMobile__LFKXa\",\"contactListItemStarMobile\":\"ContactListing_contactListItemStarMobile__LCBuK\",\"contactListExportMobileIcon\":\"ContactListing_contactListExportMobileIcon__kcvWW\",\"contactListItemMobileTitle\":\"ContactListing_contactListItemMobileTitle__+F1tU\",\"searchInput\":\"ContactListing_searchInput__xnIH1\",\"searchBtn\":\"ContactListing_searchBtn__PgVeD\"};","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {Form} from \"react-bootstrap\";\r\nimport styles from '../index.module.scss';\r\n\r\nconst CheckBox = ({checkedContacts, setCheckedContacts}) => {\r\n  const contactList = useSelector(({contactApp}) => contactApp.contactList);\r\n\r\n  const onHandleMasterCheckbox = (event) => {\r\n    if (event.target.checked) {\r\n      const contactIds = contactList.map((contact) => contact.id);\r\n      setCheckedContacts(contactIds);\r\n    } else {\r\n      setCheckedContacts([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.contactHeaderCheckboxView}>\r\n      <Form.Check type=\"checkbox\"\r\n                  color='primary'\r\n                  checked={\r\n                    contactList.length > 0 &&\r\n                    checkedContacts.length === contactList.length\r\n                  }\r\n                  onChange={onHandleMasterCheckbox}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n\r\nCheckBox.propTypes = {\r\n  checkedContacts: PropTypes.array.isRequired,\r\n  setCheckedContacts: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {onUpdateContactLabel} from '../../../../../redux/actions/ContactApp';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useLocation} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {AiOutlineDelete} from 'react-icons/ai';\r\nimport {MdLabelOutline} from 'react-icons/md';\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport AppIconBtn from \"@crema/core/AppIconBtn\";\r\nimport styles from '../index.module.scss';\r\nimport clsx from \"clsx\";\r\n\r\nconst ContactCheckedActions = (props) => {\r\n  const {checkedContacts, setCheckedContacts, onSelectContactsForDelete} =\r\n    props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  const [isLabelOpen, onOpenLabel] = useState(false);\r\n\r\n  const onLabelOpen = () => {\r\n    onOpenLabel(true);\r\n  };\r\n\r\n  const onLabelClose = () => {\r\n    onOpenLabel(false);\r\n  };\r\n\r\n  const onSelectLabel = ({key}) => {\r\n    const path = pathname.split('/');\r\n    dispatch(onUpdateContactLabel(checkedContacts, key, path[path.length - 2]));\r\n    setCheckedContacts([]);\r\n    onLabelClose();\r\n  };\r\n\r\n  return (\r\n    <span className={styles.contactCheckedAction}>\r\n        <div className='mx-1'>\r\n          <AppIconBtn\r\n            smallBtn\r\n            title={<IntlMessages id='common.delete'/>}\r\n            onClick={() => onSelectContactsForDelete(checkedContacts)}\r\n          >\r\n            <AiOutlineDelete/>\r\n          </AppIconBtn>\r\n        </div>\r\n\r\n        <div className='mx-1'>\r\n          <Dropdown>\r\n            <Dropdown.Toggle\r\n              className={clsx(\r\n                styles.dropdownToggleBtn,\r\n                'p-0 bg-transparent border-0 d-flex align-items-center shadow-none',\r\n              )} onClick={onLabelOpen} variant=\"success\" id=\"dropdown-basic\">\r\n               <AppIconBtn\r\n                 title={<IntlMessages id='common.label'/>}\r\n               >\r\n                 <MdLabelOutline/>\r\n               </AppIconBtn>\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu\r\n              open={isLabelOpen}\r\n              onClick={onSelectLabel}\r\n              onClose={onLabelClose}>\r\n              <Dropdown.Item value={311} key={311} href=\"#/action-1\">\r\n            <IntlMessages id='common.crema'/>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item value={312} key={312} href=\"#/action-2\">\r\n            <IntlMessages id='common.personal'/>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item value={313} key={313} href=\"#/action-3\">\r\n            <IntlMessages id='common.work'/>\r\n              </Dropdown.Item>\r\n\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ContactCheckedActions;\r\n\r\nContactCheckedActions.propTypes = {\r\n  checkedContacts: PropTypes.array.isRequired,\r\n  setCheckedContacts: PropTypes.func,\r\n  onSelectContactsForDelete: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {useIntl} from 'react-intl';\r\nimport AppIconBtn from \"@crema/core/AppIconBtn\";\r\nimport {AiOutlineAppstore} from 'react-icons/ai';\r\nimport {FaBars} from 'react-icons/fa';\r\nimport styles from '../index.module.scss';\r\n\r\nconst ViewSelectButtons = ({pageView, onChangePageView}) => {\r\n  const {messages} = useIntl();\r\n  return (\r\n    <div className={styles.contactViewSelect}>\r\n      <div className='mx-1'>\r\n        <AppIconBtn\r\n          smallBtn\r\n          title={messages['sidebar.ecommerce.gridView']}\r\n          className={clsx({\r\n            active: pageView === 'grid',\r\n          })}\r\n          onClick={() => onChangePageView('grid')}\r\n        >\r\n          <AiOutlineAppstore/>\r\n        </AppIconBtn>\r\n      </div>\r\n\r\n      <div className='mx-1'>\r\n        <AppIconBtn\r\n          smallBtn\r\n          title={messages['sidebar.ecommerce.listView']}\r\n          className={clsx({\r\n            active: pageView === 'list',\r\n          })}\r\n          onClick={() => onChangePageView('list')}\r\n        >\r\n          <FaBars/>\r\n        </AppIconBtn>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewSelectButtons;\r\n\r\nViewSelectButtons.propTypes = {\r\n  pageView: PropTypes.string.isRequired,\r\n  onChangePageView: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {useIntl} from 'react-intl';\r\nimport CheckBox from './CheckBox';\r\nimport ContactCheckedActions from './ContactCheckedActions';\r\nimport ViewSelectButtons from './ViewSelectButtons';\r\nimport AppsPagination from '@crema/core/AppsPagination';\r\nimport {FormControl, InputGroup} from 'react-bootstrap';\r\nimport {AiOutlineSearch} from 'react-icons/ai';\r\nimport styles from '../index.module.scss';\r\n\r\nconst ContactHeader = (props) => {\r\n  const {\r\n    checkedContacts,\r\n    setCheckedContacts,\r\n    filterText,\r\n    onSetFilterText,\r\n    onChangePageView,\r\n    onSelectContactsForDelete,\r\n    page,\r\n    onChange,\r\n    pageView,\r\n  } = props;\r\n\r\n  const contactList = useSelector(({contactApp}) => contactApp.contactList);\r\n\r\n  const totalContacts = useSelector(({contactApp}) => contactApp.totalContacts);\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.contactContentHeader}>\r\n        <CheckBox\r\n          checkedContacts={checkedContacts}\r\n          setCheckedContacts={setCheckedContacts}\r\n        />\r\n\r\n        {checkedContacts.length > 0 ? (\r\n          <ContactCheckedActions\r\n            onSelectContactsForDelete={onSelectContactsForDelete}\r\n            checkedContacts={checkedContacts}\r\n            setCheckedContacts={setCheckedContacts}\r\n          />\r\n        ) : null}\r\n\r\n        <InputGroup className={styles.contactSearch}>\r\n          <FormControl\r\n            value={filterText}\r\n            onChange={(event) => onSetFilterText(event.target.value)}\r\n            placeholder={messages['common.searchHere']}\r\n            aria-label='Username'\r\n            className={styles.searchInput}\r\n            aria-describedby='basic-addon1'\r\n          />\r\n          <InputGroup.Text id='basic-addon1' className={styles.searchBtn}>\r\n            <AiOutlineSearch />\r\n          </InputGroup.Text>\r\n        </InputGroup>\r\n\r\n        <ViewSelectButtons\r\n          pageView={pageView}\r\n          onChangePageView={onChangePageView}\r\n        />\r\n      </div>\r\n      {contactList.length > 0 ? (\r\n        <AppsPagination\r\n          className={styles.contactHeaderPagination}\r\n          count={totalContacts}\r\n          page={page}\r\n          onChange={onChange}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactHeader;\r\n\r\nContactHeader.defaultProps = {\r\n  checkedContacts: [],\r\n  filterText: '',\r\n  page: 0,\r\n};\r\n\r\nContactHeader.propTypes = {\r\n  checkedContacts: PropTypes.array,\r\n  setCheckedContacts: PropTypes.func,\r\n  filterText: PropTypes.string,\r\n  onSetFilterText: PropTypes.func,\r\n  onSelectContactsForDelete: PropTypes.func,\r\n  page: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n  pageView: PropTypes.string.isRequired,\r\n  onChangePageView: PropTypes.func,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modalHeader\":\"CreateContact_modalHeader__q74Y2\",\"contactModalScrollbar\":\"CreateContact_contactModalScrollbar__AFY29\",\"contactForm\":\"CreateContact_contactForm__If1-F\",\"contactFormHeader\":\"CreateContact_contactFormHeader__CDmIg\",\"dropzone\":\"CreateContact_dropzone__3qXPp\",\"contactFormAvatar\":\"CreateContact_contactFormAvatar__61uAy\",\"contactFormHeaderTitle\":\"CreateContact_contactFormHeaderTitle__Mdtt9\",\"contactFormContent\":\"CreateContact_contactFormContent__5HoGt\",\"contactFormContentItem\":\"CreateContact_contactFormContentItem__anRio\",\"contactFormContentItemTitle\":\"CreateContact_contactFormContentItemTitle__93tTk\",\"contactFormContentField\":\"CreateContact_contactFormContentField__nHxNB\",\"contactFormFooter\":\"CreateContact_contactFormFooter__-GJWH\",\"contactFormBtn\":\"CreateContact_contactFormBtn__a67cf\"};","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport moment from 'moment';\r\nimport {\r\n  onCreateContact,\r\n  onUpdateSelectedContact,\r\n} from '../../../../redux/actions/ContactApp';\r\nimport styles from './index.module.scss';\r\nimport {Button, Form, Image} from \"react-bootstrap\";\r\n\r\nconst AddContactForm = (props) => {\r\n  const {\r\n    userImage,\r\n    selectContact,\r\n    setUserImage,\r\n    handleAddContactClose,\r\n    onUpdateContact,\r\n  } = props;\r\n  const labelList = useSelector(({contactApp}) => contactApp.labelList);\r\n\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    accept: 'image/*',\r\n    onDrop: (acceptedFiles) => {\r\n      setUserImage(URL.createObjectURL(acceptedFiles[0]));\r\n    },\r\n  });\r\n\r\n  const {messages} = useIntl();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onFinish = (values) => {\r\n    if (values.birthday)\r\n      values.birthday = moment(values.birthday).format('DD-MM-YYYY');\r\n    if (selectContact) {\r\n      const newContact = {\r\n        id: selectContact.id,\r\n        isStarred: selectContact.isStarred,\r\n        isFrequent: selectContact.isFrequent,\r\n        image: userImage,\r\n        ...values,\r\n      };\r\n      dispatch(onUpdateSelectedContact(newContact));\r\n      if (onUpdateContact) onUpdateContact(newContact);\r\n    } else {\r\n      const newContact = {\r\n        id: Math.floor(Math.random() * 1000),\r\n        isStarred: false,\r\n        isFrequent: Math.random() > 0.5,\r\n        image: userImage,\r\n        ...values,\r\n      };\r\n      dispatch(onCreateContact(newContact));\r\n      handleAddContactClose();\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  console.log('selectContact: ', selectContact);\r\n  return (\r\n    <Form\r\n      className={styles.contactForm}\r\n      name='basic'\r\n      initialValues={\r\n        selectContact\r\n          ? {\r\n              ...selectContact,\r\n              birthday: selectContact.birthday\r\n                ? moment(selectContact.birthday, 'YYYY-MM-DD')\r\n                : '',\r\n            }\r\n          : {}\r\n      }\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}>\r\n      <div className={styles.contactFormHeader}>\r\n        <div {...getRootProps({className: 'dropzone'})}>\r\n          <input {...getInputProps()} />\r\n          <label htmlFor='icon-button-file'>\r\n            <Image className={styles.contactFormAvatar} src={userImage} roundedCircle />\r\n          </label>\r\n        </div>\r\n        {selectContact ? (\r\n          <h4 className={styles.contactFormHeaderTitle}>{selectContact.name}</h4>\r\n        ) : null}\r\n      </div>\r\n\r\n      <AppScrollbar className={styles.contactModalScrollbar}>\r\n        <div className={styles.contactFormContent}>\r\n          <div className={styles.contactFormContentItem}>\r\n            <h6 className={styles.contactFormContentItemTitle}>\r\n              <IntlMessages id='contactApp.personalDetails' />\r\n            </h6>\r\n\r\n            <div className={styles.contactFormContentField}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  name='name' type=\"text\" placeholder={messages['common.name']} />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  name='email' type=\"email\" placeholder={messages['common.email']} />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  name='contact' type=\"text\" placeholder={messages['common.phone']} />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                {/*<DatePicker />*/}\r\n              </Form.Group>\r\n\r\n              <Form.Select className=\"mb-3\" aria-label=\"Default select example\" name='label'>\r\n                {labelList.map((label) => {\r\n                  return (\r\n                    <option value={label.id} key={label.id}>\r\n                      {label.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Form.Select>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  name='website' type=\"text\" placeholder={messages['common.website']} />\r\n              </Form.Group>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.contactFormContentItem}>\r\n            <h6 className={styles.contactFormContentItemTitle}>\r\n              <IntlMessages id='common.otherDetails' />\r\n            </h6>\r\n\r\n            <div className={styles.contactFormContentField}>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  name='company' type=\"text\" placeholder={messages['common.company']} />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  name='address' type=\"text\" placeholder={messages['common.address']} />\r\n              </Form.Group>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.contactFormContentItem}>\r\n            <h6 className={styles.contactFormContentItemTitle}>\r\n              <IntlMessages id='common.socialMedia' />\r\n            </h6>\r\n\r\n            <div className={styles.contactFormContentField}>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  name='facebookId' type=\"text\" placeholder={messages['common.facebookId']} />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  name='twitterId' type=\"text\" placeholder={messages['common.twitterId']} />\r\n              </Form.Group>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.contactFormContentItem}>\r\n            <h6 className={styles.contactFormContentItemTitle}>\r\n              <IntlMessages id='common.notes' />\r\n            </h6>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Control name='notes' as=\"textarea\" rows={3} placeholder={messages['common.notes']} />\r\n            </Form.Group>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.contactFormFooter}>\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            className={styles.contactFormBtn}\r\n            onClick={handleAddContactClose}>\r\n            <IntlMessages id='common.cancel' />\r\n          </Button>\r\n          <Button variant='primary' className={styles.contactFormBtn} htmlType='submit'>\r\n            <IntlMessages id='common.save' />\r\n          </Button>\r\n        </div>\r\n      </AppScrollbar>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddContactForm;\r\n\r\nAddContactForm.propTypes = {\r\n  userImage: PropTypes.string.isRequired,\r\n  setUserImage: PropTypes.func,\r\n  handleAddContactClose: PropTypes.func,\r\n  selectContact: PropTypes.object,\r\n  onUpdateContact: PropTypes.any,\r\n};\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AddContactForm from './AddContactForm';\r\nimport styles from './index.module.scss';\r\nimport {Modal} from \"react-bootstrap\";\r\n\r\nconst CreateContact = ({\r\n  isAddContact,\r\n  handleAddContactClose,\r\n  selectContact,\r\n  onUpdateContact,\r\n}) => {\r\n  const [userImage, setUserImage] = useState(\r\n    selectContact && selectContact.image\r\n      ? selectContact.image\r\n      : '/assets/images/placeholder.jpg',\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      show={isAddContact}\r\n      onHide={handleAddContactClose}>\r\n      <Modal.Header className={styles.modalHeader} closeButton />\r\n      <AddContactForm\r\n        selectContact={selectContact}\r\n        setUserImage={setUserImage}\r\n        userImage={userImage}\r\n        onUpdateContact={onUpdateContact}\r\n        handleAddContactClose={handleAddContactClose}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateContact;\r\n\r\nCreateContact.defaultProps = {\r\n  selectContact: null,\r\n};\r\n\r\nCreateContact.propTypes = {\r\n  isAddContact: PropTypes.bool.isRequired,\r\n  handleAddContactClose: PropTypes.func.isRequired,\r\n  onUpdateContact: PropTypes.func.isRequired,\r\n  selectContact: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport AppIconBtn from \"@crema/core/AppIconBtn\";\r\nimport {FiMoreVertical} from 'react-icons/fi';\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport clsx from \"clsx\";\r\nimport styles from \"../index.module.scss\";\r\n\r\nconst ItemMenu = (props) => {\r\n  const {\r\n    onSelectContactsForDelete,\r\n    contact,\r\n    onChangeStarred,\r\n    onOpenEditContact,\r\n  } = props;\r\n\r\n  const onDeleteContact = () => {\r\n    onSelectContactsForDelete([contact.id]);\r\n  };\r\n\r\n  const onChangeStarredStatus = () => {\r\n    onChangeStarred(!contact.isStarred, contact);\r\n  };\r\n\r\n  const onClickEditOption = () => {\r\n    onOpenEditContact(contact);\r\n  };\r\n\r\n  return (\r\n  <Dropdown>\r\n    <Dropdown.Toggle\r\n      className={clsx(\r\n        styles.dropdownToggleBtn,\r\n        'p-0 bg-transparent border-0 d-flex align-items-center shadow-none',\r\n      )} variant=\"success\" id=\"dropdown-basic\">\r\n      <AppIconBtn\r\n        smallBtn\r\n        title={<IntlMessages id='common.more' />}\r\n      >\r\n        <FiMoreVertical />\r\n      </AppIconBtn>\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item onClick={onChangeStarredStatus} href=\"#/action-1\">\r\n        {contact.isStarred ? (\r\n          <IntlMessages id='common.unstarred' />\r\n        ) : (\r\n          <IntlMessages id='common.starred' />\r\n        )}\r\n      </Dropdown.Item>\r\n      <Dropdown.Item onClick={onClickEditOption} href=\"#/action-2\">\r\n        <IntlMessages id='common.edit' />\r\n      </Dropdown.Item>\r\n      <Dropdown.Item onClick={onDeleteContact} href=\"#/action-3\">\r\n        <IntlMessages id='common.delete' />\r\n      </Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n  );\r\n};\r\n\r\nexport default ItemMenu;\r\n\r\nItemMenu.propTypes = {\r\n  onSelectContactsForDelete: PropTypes.func,\r\n  contact: PropTypes.object.isRequired,\r\n  onChangeStarred: PropTypes.func,\r\n  onOpenEditContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {AiOutlineDelete, AiOutlineEdit} from 'react-icons/ai';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport AppIconBtn from \"@crema/core/AppIconBtn\";\r\nimport styles from '../index.module.scss';\r\n\r\nconst ActionBtnHover = (props) => {\r\n  const {\r\n    onSelectContactsForDelete,\r\n    contact,\r\n    onChangeStarred,\r\n    onOpenEditContact,\r\n  } = props;\r\n\r\n  const onDeleteContact = () => {\r\n    onSelectContactsForDelete([contact.id]);\r\n  };\r\n\r\n  const onChangeStarredStatus = () => {\r\n    onChangeStarred(!contact.isStarred, contact);\r\n  };\r\n\r\n  const onClickEditOption = () => {\r\n    onOpenEditContact(contact);\r\n  };\r\n\r\n  return (\r\n    <span className={styles.contactListItemActionHover}>\r\n      <AppsStarredIcon smallBtn item={contact} onChange={onChangeStarredStatus} />\r\n      <AppIconBtn\r\n        smallBtn\r\n        onClick={onClickEditOption}\r\n        title={<IntlMessages id='common.edit' />}\r\n      >\r\n        <AiOutlineEdit />\r\n      </AppIconBtn>\r\n      <AppIconBtn\r\n        smallBtn\r\n        onClick={onDeleteContact}\r\n        title={<IntlMessages id='common.delete' />}\r\n      >\r\n        <AiOutlineDelete />\r\n      </AppIconBtn>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ActionBtnHover;\r\n\r\nActionBtnHover.propTypes = {\r\n  onSelectContactsForDelete: PropTypes.func,\r\n  contact: PropTypes.object.isRequired,\r\n  onChangeStarred: PropTypes.func,\r\n  onOpenEditContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {MdLabelOutline} from 'react-icons/md';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport ItemMenu from './ItemMenu';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport ActionBtnHover from './ActionBtnHover';\r\nimport {Form, Image} from \"react-bootstrap\";\r\nimport styles from '../index.module.scss';\r\n\r\nconst ContactListItem = ({\r\n  contact,\r\n  labelList,\r\n  onChangeCheckedContacts,\r\n  checkedContacts,\r\n  onChangeStarred,\r\n  onSelectContactsForDelete,\r\n  onViewContactDetail,\r\n  onOpenEditContact,\r\n}) => {\r\n  const onGetLabelColor = (labelId) => {\r\n    if (labelId) {\r\n      return (\r\n        labelList.length > 0 &&\r\n        labelList.find((label) => label.id === labelId).color\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        key={contact.id}\r\n        className={clsx(styles.contactListItem, {\r\n          rootCheck: checkedContacts.includes(contact.id),\r\n        })}\r\n        onClick={() => onViewContactDetail(contact)}>\r\n        <span\r\n          className={styles.contactListItemCheckboxView}\r\n          onClick={(event) => event.stopPropagation()}>\r\n          <Form.Check type=\"checkbox\"\r\n                      checked={checkedContacts.includes(contact.id)}\r\n                      onChange={(event) => onChangeCheckedContacts(event, contact.id)}\r\n                      color='primary' />\r\n        </span>\r\n        <span\r\n          className={styles.contactListItemStar}\r\n          onClick={(event) => event.stopPropagation()}>\r\n          <AppsStarredIcon smallBtn item={contact} onChange={onChangeStarred} />\r\n        </span>\r\n        <span className={styles.contactListItemAvatarView}>\r\n          {contact.image ? (\r\n            <Image className={styles.contactListItemAvatar} src={contact.image} roundedCircle />\r\n          ) : (\r\n            <span className={styles.contactListItemAvatar}>\r\n              {contact.name[0].toUpperCase()}\r\n            </span>\r\n          )}\r\n        </span>\r\n        <span className={clsx(styles.contactListItemTitle, 'text-truncate')}>\r\n          {contact.name}\r\n        </span>\r\n\r\n        <span className={clsx(styles.contactListItemCol, styles.contactListItemEmail, 'text-truncate')}>\r\n          <span className='text-truncate'>\r\n            {contact.email ? contact.email : null}\r\n          </span>\r\n        </span>\r\n        <span className={clsx(styles.contactListItemCol, 'text-truncate')}>\r\n          <span className='text-truncate'>{contact.contact}</span>\r\n        </span>\r\n        <span className={clsx(styles.contactListItemCol, styles.contactListItemCompany, 'text-truncate')}>\r\n          <span className='text-truncate'>\r\n            {contact.company ? contact.company : null}\r\n          </span>\r\n        </span>\r\n\r\n        <span className={styles.contactListItemAction}>\r\n          <MdLabelOutline\r\n            className={styles.contactListExportIcon}\r\n            style={{color: onGetLabelColor(contact.label)}}\r\n          />\r\n\r\n          <span\r\n            className={styles.contactListItemMenuView}\r\n            onClick={(event) => event.stopPropagation()}>\r\n            <ItemMenu\r\n              onSelectContactsForDelete={onSelectContactsForDelete}\r\n              contact={contact}\r\n              onChangeStarred={onChangeStarred}\r\n              onOpenEditContact={onOpenEditContact}\r\n            />\r\n          </span>\r\n        </span>\r\n\r\n        <ActionBtnHover\r\n          contact={contact}\r\n          onChangeStarred={onChangeStarred}\r\n          onSelectContactsForDelete={onSelectContactsForDelete}\r\n          onOpenEditContact={onOpenEditContact}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ContactListItem);\r\n\r\nContactListItem.defaultProps = {\r\n  labelList: [],\r\n  checkedContacts: [],\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  labelList: PropTypes.array,\r\n  onChangeCheckedContacts: PropTypes.func,\r\n  checkedContacts: PropTypes.array,\r\n  onChangeStarred: PropTypes.func,\r\n  onSelectContactsForDelete: PropTypes.func,\r\n  onViewContactDetail: PropTypes.func,\r\n  onOpenEditContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport ItemMenu from './ItemMenu';\r\nimport clsx from 'clsx';\r\nimport ActionBtnHover from './ActionBtnHover';\r\nimport {Card, Form, Image} from \"react-bootstrap\";\r\nimport {BiIdCard} from 'react-icons/bi';\r\nimport {FiPhone} from 'react-icons/fi';\r\nimport styles from '../index.module.scss';\r\n\r\nconst ContactGridItem = (props) => {\r\n  const {\r\n    contact,\r\n    onChangeCheckedContacts,\r\n    checkedContacts,\r\n    onChangeStarred,\r\n    onSelectContactsForDelete,\r\n    onOpenEditContact,\r\n    onViewContactDetail,\r\n  } = props;\r\n\r\n  return (\r\n    <Card\r\n      className={styles.contactGridCard}\r\n      onClick={() => onViewContactDetail(contact)}>\r\n      <div className={styles.contactGridCardHeader}>\r\n        <span\r\n          className={styles.contactGridCardHeaderCheckbox}\r\n          onClick={(event) => event.stopPropagation()}>\r\n          <Form.Check type=\"checkbox\"\r\n                      checked={checkedContacts.includes(contact.id)}\r\n                      onChange={(event) => onChangeCheckedContacts(event, contact.id)}\r\n                      color='primary' />\r\n        </span>\r\n\r\n        {contact.image ? (\r\n          <Image className={styles.contactGridCardAvatar} src={contact.image} roundedCircle />\r\n        ) : (\r\n          <span className={styles.contactGridCardAvatar}>\r\n            {contact.name[0].toUpperCase()}\r\n          </span>\r\n        )}\r\n\r\n        <span\r\n          className={styles.contactGridCardHeaderAction}\r\n          onClick={(event) => event.stopPropagation()}>\r\n          <ItemMenu\r\n            onSelectContactsForDelete={onSelectContactsForDelete}\r\n            contact={contact}\r\n            onChangeStarred={onChangeStarred}\r\n            onOpenEditContact={onOpenEditContact}\r\n          />\r\n        </span>\r\n\r\n        <ActionBtnHover\r\n          contact={contact}\r\n          onChangeStarred={onChangeStarred}\r\n          onSelectContactsForDelete={onSelectContactsForDelete}\r\n          onOpenEditContact={onOpenEditContact}\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.contactGridCardContent}>\r\n        <h3 className={styles.contactGridCardTitle}>{contact.name}</h3>\r\n        <p className='text-truncate'>{contact.email ? contact.email : null}</p>\r\n      </div>\r\n\r\n      <div className={styles.contactGridCardAction}>\r\n        <div className={styles.contactGridCardActionItem}>\r\n          <BiIdCard className={styles.contactGridCardIcon} />\r\n          <p className='text-truncate mb-0'>\r\n            {contact.company ? (\r\n              contact.company\r\n            ) : (\r\n              <IntlMessages id='common.na' />\r\n            )}\r\n          </p>\r\n        </div>\r\n        <div className={styles.contactGridCardActionItem}>\r\n          <FiPhone className={styles.contactGridCardIcon} />\r\n          <p className='text-truncate mb-0'>{contact.contact}</p>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ContactGridItem;\r\n\r\nContactGridItem.defaultProps = {\r\n  checkedContacts: [],\r\n};\r\n\r\nContactGridItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  onChangeCheckedContacts: PropTypes.func,\r\n  checkedContacts: PropTypes.array,\r\n  onChangeStarred: PropTypes.func,\r\n  onSelectContactsForDelete: PropTypes.func,\r\n  onOpenEditContact: PropTypes.func,\r\n  onViewContactDetail: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nexport const ContactItem = (props) => (\r\n  <ContentLoader viewBox='0 0 400 21' {...props}>\r\n    <rect x='10' y='8' rx='3' ry='3' width='10' height='10' />\r\n    <circle cx='32' cy='12' r='8' />\r\n    <rect x='45' y='8' rx='0' ry='0' width='50' height='10' />\r\n    <rect x='120' y='8' rx='0' ry='0' width='70' height='10' />\r\n    <rect x='220' y='8' rx='0' ry='0' width='40' height='10' />\r\n    <rect x='280' y='8' rx='0' ry='0' width='60' height='10' />\r\n    <circle cx='360' cy='12' r='5' />\r\n    <circle cx='380' cy='12' r='5' />\r\n  </ContentLoader>\r\n);\r\nconst ContactListSkeleton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n      <ContactItem />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ContactListSkeleton;\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {MdLabelOutline} from 'react-icons/md';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport {AiOutlineCheck} from 'react-icons/ai';\r\nimport {Image} from \"react-bootstrap\";\r\nimport styles from '../index.module.scss';\r\n\r\nconst ContactListItemMobile = ({\r\n  contact,\r\n  labelList,\r\n  checkedContacts,\r\n  onChangeStarred,\r\n  onViewContactDetail,\r\n  onChangeCheckedContacts,\r\n}) => {\r\n  const onGetLabelColor = (labelId) => {\r\n    if (labelId) {\r\n      return (\r\n        labelList.length > 0 &&\r\n        labelList.find((label) => label.id === labelId).color\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        key={contact.id}\r\n        className={clsx(styles.contactListItemMobile, {\r\n          rootCheck: checkedContacts.includes(contact.id),\r\n        })}\r\n        onClick={() => onViewContactDetail(contact)}>\r\n        <div className={styles.contactListItemMainContentMobile}>\r\n          <div\r\n            className={clsx(styles.contactListAvatarMobileView, {\r\n              checked: checkedContacts.includes(contact.id),\r\n            })}\r\n            onClick={(event) => {\r\n              event.stopPropagation();\r\n              onChangeCheckedContacts(\r\n                !checkedContacts.includes(contact.id),\r\n                contact.id,\r\n              );\r\n            }}>\r\n            {checkedContacts.includes(contact.id) ? (\r\n              <AiOutlineCheck />\r\n            ) : (\r\n              <span className={styles.contactListItemAvatarView}>\r\n                {contact.image ? (\r\n                  <Image className={styles.contactListItemAvatar} src={contact.image} roundedCircle />\r\n                ) : (\r\n                  <span className={styles.contactListItemAvatar}>\r\n                    {contact.name[0].toUpperCase()}\r\n                  </span>\r\n                )}\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          <div className={styles.contactListItemContentMobile}>\r\n            <span className={clsx(styles.contactListItemMobileTitle, 'text-truncate')}>\r\n              {contact.name}\r\n            </span>\r\n\r\n            <span className='text-truncate'>{contact.contact}</span>\r\n          </div>\r\n        </div>\r\n        <div className={styles.contactListItemActionMobile}>\r\n          <MdLabelOutline\r\n            className={styles.contactListExportMobileIcon}\r\n            style={{color: onGetLabelColor(contact.label)}}\r\n          />\r\n\r\n          <span\r\n            className={styles.contactListItemStarMobile}\r\n            onClick={(event) => event.stopPropagation()}>\r\n            <AppsStarredIcon item={contact} onChange={onChangeStarred} />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ContactListItemMobile);\r\n\r\nContactListItemMobile.defaultProps = {\r\n  labelList: [],\r\n  checkedContacts: [],\r\n};\r\n\r\nContactListItemMobile.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  labelList: PropTypes.array,\r\n  checkedContacts: PropTypes.array,\r\n  onChangeStarred: PropTypes.func,\r\n  onViewContactDetail: PropTypes.func,\r\n  onChangeCheckedContacts: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\nimport ContactGridItem from './ContactGridItem';\r\nimport {useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport AppList from '@crema/core/AppList';\r\nimport AppGrid from '@crema/core/AppGrid';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport ContactListSkeleton from '@crema/core/AppSkeleton/ContactListSkeleton';\r\nimport {AppAnimates} from '../../../../../shared/constants/AppEnums';\r\nimport ContactListItemMobile from './ContactListItemMobile';\r\nimport styles from '../index.module.scss';\r\n\r\nconst ContactViewContent = (props) => {\r\n  const {\r\n    list,\r\n    pageView,\r\n    loading,\r\n    handleAddContactOpen,\r\n    onChangeStarred,\r\n    onChangeCheckedContacts,\r\n    checkedContacts,\r\n    onSelectContactsForDelete,\r\n    onOpenEditContact,\r\n    onViewContactDetail,\r\n  } = props;\r\n  const labelList = useSelector(({contactApp}) => contactApp.labelList);\r\n\r\n  return (\r\n    <>\r\n      {pageView === 'list' ? (\r\n        <>\r\n          <div className={styles.contactListDesktop}>\r\n            <AppList\r\n              data={list}\r\n              animation={AppAnimates.SLIDEUPIN}\r\n              ListEmptyComponent={\r\n                <ListEmptyResult\r\n                  loading={loading}\r\n                  actionTitle={<IntlMessages id='contactApp.createContact' />}\r\n                  onClick={handleAddContactOpen}\r\n                  placeholder={<ContactListSkeleton />}\r\n                />\r\n              }\r\n              renderItem={(contact) => (\r\n                <ContactListItem\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  labelList={labelList}\r\n                  onChangeCheckedContacts={onChangeCheckedContacts}\r\n                  checkedContacts={checkedContacts}\r\n                  onSelectContactsForDelete={onSelectContactsForDelete}\r\n                  onChangeStarred={onChangeStarred}\r\n                  onViewContactDetail={onViewContactDetail}\r\n                  onOpenEditContact={onOpenEditContact}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n          <div className={styles.contactListMobile}>\r\n            <AppList\r\n              data={list}\r\n              animation={AppAnimates.SLIDEUPIN}\r\n              ListEmptyComponent={\r\n                <ListEmptyResult\r\n                  loading={loading}\r\n                  actionTitle={<IntlMessages id='contactApp.createContact' />}\r\n                  onClick={handleAddContactOpen}\r\n                  placeholder={<ContactListSkeleton />}\r\n                />\r\n              }\r\n              renderItem={(contact) => (\r\n                <ContactListItemMobile\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  labelList={labelList}\r\n                  checkedContacts={checkedContacts}\r\n                  onChangeStarred={onChangeStarred}\r\n                  onViewContactDetail={onViewContactDetail}\r\n                  onChangeCheckedContacts={onChangeCheckedContacts}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className={styles.contactGridView}>\r\n          <AppGrid\r\n            responsive={{\r\n              xs: 1,\r\n              sm: 2,\r\n              md: 2,\r\n              lg: 2,\r\n              xl: 2,\r\n              xxl: 3,\r\n            }}\r\n            data={list}\r\n            renderItem={(contact) => (\r\n              <ContactGridItem\r\n                key={contact.id}\r\n                contact={contact}\r\n                labelList={labelList}\r\n                onChangeCheckedContacts={onChangeCheckedContacts}\r\n                checkedContacts={checkedContacts}\r\n                onChangeStarred={onChangeStarred}\r\n                onSelectContactsForDelete={onSelectContactsForDelete}\r\n                onViewContactDetail={onViewContactDetail}\r\n                onOpenEditContact={onOpenEditContact}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactViewContent;\r\n\r\nContactViewContent.defaultProps = {\r\n  list: [],\r\n  checkedContacts: [],\r\n};\r\n\r\nContactViewContent.propTypes = {\r\n  list: PropTypes.array,\r\n  pageView: PropTypes.string.isRequired,\r\n  checkedContacts: PropTypes.array,\r\n  onChangeCheckedContacts: PropTypes.func,\r\n  onChangeStarred: PropTypes.func,\r\n  onSelectContactsForDelete: PropTypes.func,\r\n  onOpenEditContact: PropTypes.func,\r\n  onViewContactDetail: PropTypes.func,\r\n  handleAddContactOpen: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contactDetailModal\":\"ContactDetail_contactDetailModal__6thKD\",\"contactActionHover\":\"ContactDetail_contactActionHover__CooaT\",\"contactDetailModalHeader\":\"ContactDetail_contactDetailModalHeader__0URq8\",\"contactDetailModalUser\":\"ContactDetail_contactDetailModalUser__tqhEq\",\"contactDetailModalUserAvatar\":\"ContactDetail_contactDetailModalUserAvatar__JPloG\",\"contactDetailModalContent\":\"ContactDetail_contactDetailModalContent__MmpFd\",\"contactDetailModalScrollbar\":\"ContactDetail_contactDetailModalScrollbar__I4IRk\",\"contactAction\":\"ContactDetail_contactAction__Joh41\",\"contactNote\":\"ContactDetail_contactNote__Ntnpe\",\"contactDetailModalItem\":\"ContactDetail_contactDetailModalItem__HpezA\",\"contactDetailModalItemTitle\":\"ContactDetail_contactDetailModalItemTitle__wfuE0\",\"contactDetailModalItemContent\":\"ContactDetail_contactDetailModalItemContent__IoGZ9\",\"contactOtherDetailItem\":\"ContactDetail_contactOtherDetailItem__pn3Sf\",\"contactOtherDetailItemContent\":\"ContactDetail_contactOtherDetailItemContent__zii-a\",\"contactOtherDetailItemIcon\":\"ContactDetail_contactOtherDetailItemIcon__1pMBt\",\"contactFormFooter\":\"ContactDetail_contactFormFooter__BeAsj\",\"contactFormBtn\":\"ContactDetail_contactFormBtn__uFGS8\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppsStarredIcon from '@crema/core/AppsStarredIcon';\r\nimport {AiOutlineDelete, AiOutlineEdit} from 'react-icons/ai';\r\nimport styles from './index.module.scss'\r\nimport AppIconBtn from \"@crema/core/AppIconBtn\";\r\n\r\nconst ContactActions = (props) => {\r\n  const {onDeleteContact, onChangeStarred, onOpenEditContact, contact} = props;\r\n\r\n  return (\r\n    <div className={styles.contactAction}>\r\n      <div className={styles.contactActionHover}>\r\n        <AppIconBtn\r\n          smallBtn\r\n          onClick={() => onOpenEditContact(contact)}\r\n        >\r\n          <AiOutlineEdit />\r\n        </AppIconBtn>\r\n        <AppsStarredIcon smallBtn item={contact} onChange={onChangeStarred} />\r\n      </div>\r\n      <AppIconBtn\r\n        smallBtn\r\n        onClick={onDeleteContact}\r\n      >\r\n        <AiOutlineDelete />\r\n      </AppIconBtn>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactActions;\r\n\r\nContactActions.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n  contact: PropTypes.object.isRequired,\r\n  onChangeStarred: PropTypes.func,\r\n  onOpenEditContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss'\r\n\r\nimport {FiMail, FiPhone} from 'react-icons/fi';\r\nimport {AiOutlineGlobal, AiOutlineShopping} from 'react-icons/ai';\r\n\r\nconst PersonalDetails = ({contact}) => {\r\n  return (\r\n    <div className={styles.contactDetailModalItem}>\r\n      <h6 className={styles.contactDetailModalItemTitle}>\r\n        <IntlMessages id='contactApp.personalDetails' />\r\n      </h6>\r\n\r\n      <div className={styles.contactDetailModalItemContent}>\r\n        <div className={styles.contactOtherDetailItem}>\r\n          <FiMail className={styles.contactOtherDetailItemIcon} />\r\n          <div className={styles.contactOtherDetailItemContent}>\r\n            {contact.email}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.contactOtherDetailItem}>\r\n          <FiPhone className={styles.contactOtherDetailItemIcon} />\r\n          <div className={styles.contactOtherDetailItemContent}>\r\n            {contact.contact}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.contactOtherDetailItem}>\r\n          <AiOutlineGlobal className={styles.contactOtherDetailItemIcon} />\r\n          <div className={styles.contactOtherDetailItemContent}>\r\n            {contact.website ? (\r\n              contact.website\r\n            ) : (\r\n              <IntlMessages id='common.na' />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.contactOtherDetailItem}>\r\n          <AiOutlineShopping className={styles.contactOtherDetailItemIcon} />\r\n          <div className={styles.contactOtherDetailItemContent}>\r\n            {contact.birthday ? (\r\n              contact.birthday\r\n            ) : (\r\n              <IntlMessages id='common.na' />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalDetails;\r\n\r\nPersonalDetails.propTypes = {\r\n  contact: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {RiFoldersLine} from 'react-icons/ri';\r\nimport {AiOutlineHome} from 'react-icons/ai';\r\nimport {FiFacebook, FiTwitter} from 'react-icons/fi';\r\nimport styles from './index.module.scss';\r\n\r\nconst OtherDetails = (props) => {\r\n  const {contact} = props;\r\n\r\n  return (\r\n    <div className={styles.contactDetailModalItem}>\r\n      <h6 className={styles.contactDetailModalItemTitle}>\r\n        <IntlMessages id='common.otherDetails' />\r\n      </h6>\r\n\r\n      <div className={styles.contactDetailModalItemContent}>\r\n        <div className={styles.contactOtherDetailItem}>\r\n          <RiFoldersLine className={styles.contactOtherDetailItemIcon} />\r\n          <div className={styles.contactOtherDetailItemContent}>\r\n            {contact.company ? (\r\n              contact.company\r\n            ) : (\r\n              <IntlMessages id='common.na' />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.contactOtherDetailItem}>\r\n          <AiOutlineHome className={styles.contactOtherDetailItemIcon} />\r\n          <div className={styles.contactOtherDetailItemContent}>\r\n            {contact.address ? (\r\n              contact.address\r\n            ) : (\r\n              <IntlMessages id='common.na' />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={styles.contactOtherDetailItem}>\r\n          <FiFacebook className={styles.contactOtherDetailItemIcon} />\r\n          <div className={styles.contactOtherDetailItemContent}>\r\n            {contact.facebookId ? (\r\n              contact.facebookId\r\n            ) : (\r\n              <IntlMessages id='common.na' />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.contactOtherDetailItem}>\r\n          <FiTwitter className={styles.contactOtherDetailItemIcon} />\r\n          <div className={styles.contactOtherDetailItemContent}>\r\n            {contact.twitterId ? (\r\n              contact.twitterId\r\n            ) : (\r\n              <IntlMessages id='common.na' />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtherDetails;\r\n\r\nOtherDetails.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {onUpdateSelectedContact} from 'redux/actions/ContactApp';\r\nimport PropTypes from 'prop-types';\r\nimport ContactActions from './ContactActions';\r\nimport PersonalDetails from './PersonalDetails';\r\nimport OtherDetails from './OtherDetails';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport styles from './index.module.scss';\r\nimport AppRowContainer from '@crema/core/AppRowContainer';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {Button, Col, Image, Modal} from \"react-bootstrap\";\r\n\r\nconst ContactDetail = (props) => {\r\n  const {\r\n    isShowDetail,\r\n    selectedContact,\r\n    onShowDetail,\r\n    onSelectContactsForDelete,\r\n    onOpenEditContact,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const [contact, setContact] = useState(selectedContact);\r\n\r\n  useEffect(() => {\r\n    setContact(selectedContact);\r\n  }, [selectedContact]);\r\n\r\n  const onChangeStarred = (checked) => {\r\n    const updatedContact = contact;\r\n    contact.isStarred = checked;\r\n    setContact(updatedContact);\r\n    dispatch(onUpdateSelectedContact(contact));\r\n  };\r\n\r\n  const onDeleteContact = () => {\r\n    onSelectContactsForDelete([contact.id]);\r\n    onShowDetail(false);\r\n  };\r\n\r\n  const onContactDetailClose = () => {\r\n    onShowDetail(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={isShowDetail}\r\n        onHide={() => onShowDetail(false)}\r\n        className={styles.contactDetailModal}>\r\n        <div className={styles.contactDetailModalHeader}>\r\n          <ContactActions\r\n            onChangeStarred={onChangeStarred}\r\n            onDeleteContact={onDeleteContact}\r\n            onOpenEditContact={onOpenEditContact}\r\n            contact={contact}\r\n          />\r\n          <div className={styles.contactDetailModalUser}>\r\n            {contact.image ? (\r\n              <Image\r\n                className={styles.contactDetailModalUserAvatar} src={contact.image} roundedCircle />\r\n            ) : (\r\n              <span className={styles.contactDetailModalUserAvatar}>\r\n                {contact.name[0].toUpperCase()}\r\n              </span>\r\n            )}\r\n            <h4>{contact.name}</h4>\r\n          </div>\r\n        </div>\r\n\r\n        <AppScrollbar className={styles.contactDetailModalScrollbar}>\r\n          <div className={styles.contactDetailModalContent}>\r\n            <AppRowContainer>\r\n              <Col item xs={12} md={6}>\r\n                <PersonalDetails contact={contact} />\r\n              </Col>\r\n              <Col item xs={12} md={6}>\r\n                <OtherDetails contact={contact} />\r\n              </Col>\r\n            </AppRowContainer>\r\n          </div>\r\n\r\n          <div className={styles.contactFormFooter}>\r\n            <Button\r\n              variant='primary'\r\n              className={styles.contactFormBtn}\r\n              onClick={onContactDetailClose}>\r\n              <IntlMessages id='common.cancel' />\r\n            </Button>\r\n          </div>\r\n        </AppScrollbar>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactDetail;\r\n\r\nContactDetail.propTypes = {\r\n  isShowDetail: PropTypes.bool.isRequired,\r\n  onShowDetail: PropTypes.func.isRequired,\r\n  selectedContact: PropTypes.object.isRequired,\r\n  onSelectContactsForDelete: PropTypes.func,\r\n  onOpenEditContact: PropTypes.func,\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {\r\n  onDeleteContacts,\r\n  onGetContactList,\r\n  onUpdateStarredStatus,\r\n} from '../../../../redux/actions';\r\nimport ContactHeader from './ContactHeader';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport CreateContact from '../CreateContact';\r\nimport ContactViewContent from './ContactViewContent';\r\nimport ContactDetail from '../ContactDetail';\r\nimport AppsPagination from '@crema/core/AppsPagination';\r\nimport AppsHeader from '@crema/core/AppsContainer/AppsHeader';\r\nimport AppsContent from '@crema/core/AppsContainer/AppsContent';\r\nimport AppsFooter from '@crema/core/AppsContainer/AppsFooter';\r\nimport styles from './index.module.scss';\r\nimport ConfirmationModal from '@crema/core/AppConfirmationModal';\r\n\r\nconst ContactListing = () => {\r\n  const dispatch = useDispatch();\r\n  const {pathname} = useLocation();\r\n\r\n  const {contactList} = useSelector(({contactApp}) => contactApp);\r\n\r\n  const {totalContacts} = useSelector(({contactApp}) => contactApp);\r\n\r\n  const [filterText, onSetFilterText] = useState('');\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [pageView, setPageView] = useState('list');\r\n\r\n  const [isDeleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n\r\n  const [checkedContacts, setCheckedContacts] = useState([]);\r\n\r\n  const [toDeleteContacts, setToDeleteContacts] = useState([]);\r\n\r\n  const [isAddContact, onSetIsAddContact] = useState(false);\r\n\r\n  const [isShowDetail, onShowDetail] = useState(false);\r\n\r\n  const [selectedContact, setSelectedContact] = useState(null);\r\n\r\n  const loading = useSelector(({common}) => common.loading);\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [pathname]);\r\n\r\n  useEffect(() => {\r\n    const path = pathname.split('/');\r\n    dispatch(\r\n      onGetContactList(path[path.length - 2], path[path.length - 1], page),\r\n    );\r\n  }, [pathname, pageView, page, dispatch]);\r\n\r\n  const handleAddContactOpen = () => {\r\n    onSetIsAddContact(true);\r\n  };\r\n\r\n  const handleAddContactClose = () => {\r\n    onSetIsAddContact(false);\r\n  };\r\n\r\n  const onViewContactDetail = (contact) => {\r\n    setSelectedContact(contact);\r\n    onShowDetail(true);\r\n  };\r\n\r\n  const onOpenEditContact = (contact) => {\r\n    setSelectedContact(contact);\r\n    handleAddContactOpen();\r\n  };\r\n\r\n  const onChange = (page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const onChangePageView = (view) => {\r\n    setPageView(view);\r\n  };\r\n\r\n  const onChangeCheckedContacts = (checked, id) => {\r\n    if (checked) {\r\n      setCheckedContacts(checkedContacts.concat(id));\r\n    } else {\r\n      setCheckedContacts(\r\n        checkedContacts.filter((contactId) => contactId !== id),\r\n      );\r\n    }\r\n  };\r\n\r\n  const onChangeStarred = (status, contact) => {\r\n    const selectedIdList = [contact.id];\r\n    const path = pathname.split('/');\r\n    dispatch(\r\n      onUpdateStarredStatus(selectedIdList, status, path[path.length - 1]),\r\n    );\r\n  };\r\n\r\n  const onUpdateContact = (contact) => {\r\n    setSelectedContact(contact);\r\n    handleAddContactClose();\r\n  };\r\n\r\n  const onGetFilteredItems = () => {\r\n    if (filterText === '') {\r\n      return contactList;\r\n    } else {\r\n      return contactList.filter((contact) =>\r\n        contact.name.toUpperCase().includes(filterText.toUpperCase()),\r\n      );\r\n    }\r\n  };\r\n\r\n  const onDeleteSelectedContacts = () => {\r\n    const path = pathname.split('/');\r\n    dispatch(\r\n      onDeleteContacts(\r\n        path[path.length - 2],\r\n        path[path.length - 1],\r\n        toDeleteContacts,\r\n        page,\r\n      ),\r\n    );\r\n    setDeleteDialogOpen(false);\r\n    setCheckedContacts([]);\r\n  };\r\n\r\n  const onSelectContactsForDelete = (contactIds) => {\r\n    setToDeleteContacts(contactIds);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const list = onGetFilteredItems();\r\n\r\n  return (\r\n    <>\r\n      <AppsHeader>\r\n        <ContactHeader\r\n          checkedContacts={checkedContacts}\r\n          setCheckedContacts={setCheckedContacts}\r\n          filterText={filterText}\r\n          onSelectContactsForDelete={onSelectContactsForDelete}\r\n          onSetFilterText={onSetFilterText}\r\n          onChange={onChange}\r\n          page={page}\r\n          onChangePageView={onChangePageView}\r\n          pageView={pageView}\r\n        />\r\n      </AppsHeader>\r\n      <AppsContent>\r\n        <ContactViewContent\r\n          list={list}\r\n          loading={loading}\r\n          pageView={pageView}\r\n          handleAddContactOpen={handleAddContactOpen}\r\n          onChangeCheckedContacts={onChangeCheckedContacts}\r\n          onChangeStarred={onChangeStarred}\r\n          checkedContacts={checkedContacts}\r\n          onSelectContactsForDelete={onSelectContactsForDelete}\r\n          onViewContactDetail={onViewContactDetail}\r\n          onOpenEditContact={onOpenEditContact}\r\n        />\r\n      </AppsContent>\r\n\r\n      {contactList.length > 0 ? (\r\n        <AppsFooter className={styles.contactFooter}>\r\n          <AppsPagination\r\n            count={totalContacts}\r\n            page={page}\r\n            onChange={onChange}\r\n          />\r\n        </AppsFooter>\r\n      ) : null}\r\n\r\n      {isAddContact ? (\r\n        <CreateContact\r\n          isAddContact={isAddContact}\r\n          handleAddContactClose={handleAddContactClose}\r\n          selectContact={selectedContact}\r\n          onUpdateContact={onUpdateContact}\r\n        />\r\n      ) : null}\r\n\r\n      {isShowDetail ? (\r\n        <ContactDetail\r\n          selectedContact={selectedContact}\r\n          isShowDetail={isShowDetail}\r\n          onShowDetail={onShowDetail}\r\n          onSelectContactsForDelete={onSelectContactsForDelete}\r\n          onOpenEditContact={onOpenEditContact}\r\n        />\r\n      ) : null}\r\n\r\n      {isDeleteDialogOpen ? (\r\n        <ConfirmationModal\r\n          open={isDeleteDialogOpen}\r\n          onDeny={setDeleteDialogOpen}\r\n          onConfirm={onDeleteSelectedContacts}\r\n          modalTitle={<IntlMessages id='common.deleteItem' />}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactListing;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contactSidebarHeader\":\"ContactSideBar_contactSidebarHeader__dZZS-\",\"contactSidebarScrollbar\":\"ContactSideBar_contactSidebarScrollbar__C3yID\",\"contactSidebarContent\":\"ContactSideBar_contactSidebarContent__RUS4n\",\"contactSidebarList\":\"ContactSideBar_contactSidebarList__JI94r\",\"contactSidebarTitle\":\"ContactSideBar_contactSidebarTitle__y3H80\",\"contactSidebarLabelItem\":\"ContactSideBar_contactSidebarLabelItem__sHWzP\",\"active\":\"ContactSideBar_active__BojD2\",\"contactSidebarLabelIcon\":\"ContactSideBar_contactSidebarLabelIcon__EEouS\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {MdLabelOutline} from 'react-icons/md';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './index.module.scss';\r\n\r\nconst LabelItem = ({label}) => {\r\n  return (\r\n    <div key={label.id}>\r\n      <NavLink\r\n        to={`/apps/contact/label/${label.alias}`}\r\n        className={styles.contactSidebarLabelItem}>\r\n        <span className={styles.contactSidebarLabelIcon}>\r\n          <MdLabelOutline style={{color: `${label.color}`}} />\r\n        </span>\r\n        {label.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LabelItem;\r\n\r\nLabelItem.propTypes = {\r\n  label: PropTypes.object.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport CreateContact from '../CreateContact';\r\nimport LabelItem from './LabelItem';\r\nimport AppsSideBarFolderItem from '@crema/core/AppsSideBarFolderItem';\r\nimport AppList from '@crema/core/AppList';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport SidebarPlaceholder from '@crema/core/AppSkeleton/SidebarListSkeleton';\r\nimport AppScrollbar from '@crema/core/AppScrollbar';\r\nimport styles from './index.module.scss';\r\nimport {AppAnimates} from 'shared/constants/AppEnums';\r\nimport {Button} from \"react-bootstrap\";\r\nimport {AiOutlinePlus} from 'react-icons/ai';\r\n\r\nconst SideBarContent = () => {\r\n  const labelList = useSelector(({contactApp}) => contactApp.labelList);\r\n\r\n  const folderList = useSelector(({contactApp}) => contactApp.folderList);\r\n\r\n  const [isAddContact, onSetIsAddContact] = useState(false);\r\n\r\n  const handleAddContactOpen = () => {\r\n    onSetIsAddContact(true);\r\n  };\r\n\r\n  const handleAddContactClose = () => {\r\n    onSetIsAddContact(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.contactSidebarHeader}>\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          onClick={handleAddContactOpen}>\r\n          <AiOutlinePlus />\r\n          <IntlMessages id='contactApp.createContact' />\r\n        </Button>\r\n      </div>\r\n\r\n      <AppScrollbar className={styles.contactSidebarScrollbar}>\r\n        <div className={styles.contactSidebarContent}>\r\n          <div className={styles.contactSidebarList}>\r\n            <AppList\r\n              animation={AppAnimates.SLIDELEFTIN}\r\n              data={folderList}\r\n              ListEmptyComponent={\r\n                <ListEmptyResult\r\n                  loading={true}\r\n                  placeholder={<SidebarPlaceholder />}\r\n                />\r\n              }\r\n              renderItem={(item) => (\r\n                <AppsSideBarFolderItem\r\n                  key={item.id}\r\n                  item={item}\r\n                  path={`/apps/contact/folder/${item.alias}`}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n\r\n          <h5 className={styles.contactSidebarTitle}>\r\n            <IntlMessages id='common.labels' />\r\n          </h5>\r\n\r\n          <AppList\r\n            animation={AppAnimates.SLIDELEFTIN}\r\n            data={labelList}\r\n            ListEmptyComponent={\r\n              <ListEmptyResult\r\n                loading={true}\r\n                placeholder={<SidebarPlaceholder />}\r\n              />\r\n            }\r\n            renderItem={(label) => <LabelItem key={label.id} label={label} />}\r\n          />\r\n\r\n          {isAddContact ? (\r\n            <CreateContact\r\n              isAddContact={isAddContact}\r\n              handleAddContactClose={handleAddContactClose}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </AppScrollbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideBarContent;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n  onGetFolderList,\r\n  onGetLabelList,\r\n} from '../../../redux/actions/ContactApp';\r\nimport ContactListing from './ContactListing';\r\nimport {useIntl} from 'react-intl';\r\nimport AppsContainer from '@crema/core/AppsContainer';\r\nimport SideBarContent from './ContactSideBar';\r\nimport AppPageMetadata from '@crema/core/AppPageMetadata';\r\n\r\nconst Contact = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetFolderList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetLabelList());\r\n  }, [dispatch]);\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppsContainer\r\n      title={messages['contactApp.contact']}\r\n      sidebarContent={<SideBarContent />}>\r\n      <AppPageMetadata title='Contact App' />\r\n      <ContactListing />\r\n    </AppsContainer>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active,\n  disabled,\n  className,\n  style,\n  activeLabel,\n  children,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : Anchor;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: \"page-link\",\n      disabled: disabled,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label = name) {\n  function Button({\n    children,\n    ...props\n  }) {\n    return /*#__PURE__*/_jsxs(PageItem, { ...props,\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        \"aria-hidden\": \"true\",\n        children: children || defaultValue\n      }), /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: label\n      })]\n    });\n  }\n\n  Button.displayName = name;\n  return Button;\n}\n\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","// extracted by mini-css-extract-plugin\nexport default {\"listFooter\":\"AppList_listFooter__Sh7ys\",\"loaderProgress\":\"AppList_loaderProgress__rZEBy\",\"emptyListContainer\":\"AppList_emptyListContainer__PsPAD\"};","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"AppRowContainer_row__lSYCd\"};","// extracted by mini-css-extract-plugin\nexport default {\"appsWrap\":\"AppsContainer_appsWrap__zvw-4\",\"appsWrapHeader\":\"AppsContainer_appsWrapHeader__szimU\",\"menuBtn\":\"AppsContainer_menuBtn__hKXrB\",\"appsContainer\":\"AppsContainer_appsContainer__ASz5t\",\"appMainFixedFooter\":\"AppsContainer_appMainFixedFooter__1JfeO\",\"appMainFooter\":\"AppsContainer_appMainFooter__qShEH\",\"appsMainContent\":\"AppsContainer_appsMainContent__59PsM\",\"appsMainContentFull\":\"AppsContainer_appsMainContentFull__WJWdT\",\"appsContentContainer\":\"AppsContainer_appsContentContainer__ild+C\",\"fullView\":\"AppsContainer_fullView__vSr4E\",\"scrum-absolute\":\"AppsContainer_scrum-absolute__VqjBV\",\"react-trello-board\":\"AppsContainer_react-trello-board__OycKh\",\"scrum-row\":\"AppsContainer_scrum-row__PRpkM\",\"smooth-dnd-container\":\"AppsContainer_smooth-dnd-container__pGBR-\",\"horizontal\":\"AppsContainer_horizontal__f1Ksg\",\"scrum-col\":\"AppsContainer_scrum-col__Gi57q\",\"react-trello-lane\":\"AppsContainer_react-trello-lane__sS-jH\",\"scrum-board-list-header-card\":\"AppsContainer_scrum-board-list-header-card__+vk2n\",\"scroll-scrum-item\":\"AppsContainer_scroll-scrum-item__JP4Va\",\"vertical\":\"AppsContainer_vertical__KLU+e\",\"appsFooter\":\"AppsContainer_appsFooter__hOjz4\",\"appsHeader\":\"AppsContainer_appsHeader__bf5mr\",\"appsSidebar\":\"AppsContainer_appsSidebar__ZPAXS\",\"card\":\"AppsContainer_card__tJ4dA\",\"heightFull\":\"AppsContainer_heightFull__GtgHE\",\"appsOffcanvas\":\"AppsContainer_appsOffcanvas__psiRa\"};"],"names":["AppConfirmationModal","open","onDeny","onConfirm","modalTitle","paragraph","title","show","onHide","centered","Header","closeButton","Title","Body","Footer","variant","onClick","defaultProps","useSelector","common","loading","error","displayMessage","ListEmptyResult","loader","placeholder","actionTitle","content","className","clsx","styles","emptyListContainer","percent","type","style","marginTop","minWidth","id","description","prototype","PropTypes","action","getEmptyContainer","ListEmptyComponent","React","getFooterContainer","ListFooterComponent","ListView","renderItem","onEndReached","data","interval","duration","delay","useBottomScrollListener","AppAnimateGroup","animateStyle","flexDirection","flexWrap","length","map","item","index","border","ListFooter","footerText","loaderProgress","ProgressBar","listFooter","AppList","footerProps","props","AppRow","row","children","others","component","ease","height","SidebarItem","viewBox","x","y","rx","ry","width","AppsContent","isDetailView","fullView","appsContentContainer","rest","appsFooter","AppsHeader","appsHeader","isAppDrawerOpen","setAppDrawerOpen","sidebarContent","appsSidebar","Offcanvas","appsOffcanvas","closeIcon","Card","card","AppsContainer","useState","useLayoutContext","footer","navStyle","noContentAnimation","appsWrap","appsWrapHeader","appsWrapHeaderFull","Button","menuBtn","zIndex","overflow","appsContainer","appsMainContent","appsMainContentFull","cardStyle","minHeight","AppInfoView","AppsPagination","count","page","onChange","pageSize","total","backIconButtonProps","nextIconButtonProps","rowsPerPageOptions","getIconByName","iconName","path","to","icon","name","smallBtn","AppIconBtn","e","isStarred","checkedContacts","setCheckedContacts","contactList","contactApp","Form","Check","color","checked","event","target","contactIds","contact","onSelectContactsForDelete","dispatch","useDispatch","pathname","useLocation","isLabelOpen","onOpenLabel","onLabelClose","IntlMessages","Dropdown","Toggle","Menu","key","split","onUpdateContactLabel","onClose","Item","value","href","pageView","onChangePageView","messages","useIntl","active","ContactHeader","filterText","onSetFilterText","totalContacts","InputGroup","FormControl","Text","userImage","selectContact","setUserImage","handleAddContactClose","onUpdateContact","labelList","useDropzone","accept","onDrop","acceptedFiles","URL","createObjectURL","getRootProps","getInputProps","console","log","initialValues","birthday","moment","onFinish","values","format","newContact","isFrequent","image","onUpdateSelectedContact","Math","floor","random","onCreateContact","onFinishFailed","errorInfo","htmlFor","Image","src","roundedCircle","AppScrollbar","Group","controlId","Control","Select","label","as","rows","htmlType","CreateContact","isAddContact","Modal","onChangeStarred","onOpenEditContact","AppsStarredIcon","ContactListItem","onChangeCheckedContacts","onViewContactDetail","rootCheck","includes","stopPropagation","toUpperCase","email","company","labelId","find","onGetLabelColor","withRouter","ContactGridItem","ContactItem","cx","cy","r","ContactListItemMobile","ContactViewContent","list","handleAddContactOpen","animation","AppAnimates","SLIDEUPIN","AppGrid","responsive","xs","sm","md","lg","xl","xxl","onDeleteContact","website","address","facebookId","twitterId","isShowDetail","selectedContact","onShowDetail","setContact","useEffect","updatedContact","AppRowContainer","Col","setPage","setPageView","isDeleteDialogOpen","setDeleteDialogOpen","toDeleteContacts","setToDeleteContacts","onSetIsAddContact","setSelectedContact","onGetContactList","filter","view","concat","contactId","status","selectedIdList","onUpdateStarredStatus","AppsFooter","onDeleteContacts","alias","folderList","SLIDELEFTIN","AppsSideBarFolderItem","onGetFolderList","onGetLabelList","AppPageMetadata","PageItem","ref","disabled","activeLabel","Component","Anchor","_jsx","classNames","_jsxs","displayName","createButton","defaultValue","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","size","decoratedBsPrefix","useBootstrapPrefix","Object","assign","DEVICE_SIZES","Row","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","useWillUnmount","fn","onUnmount","valueRef","useRef","current","useUpdatedRef"],"sourceRoot":""}