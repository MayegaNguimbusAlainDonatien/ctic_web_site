{"version":3,"file":"static/js/1198.bb1a8482.chunk.js","mappings":"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","sources":["webpack://ctic/./src/@crema/core/AppCard/index.module.scss?c1e2","@crema/core/AppCard/index.js","@crema/core/AppComponentCard/highlightTheme.js","webpack://ctic/./src/@crema/core/AppComponentCard/index.module.scss?0c6d","@crema/core/AppAnimate/Expand.js","@crema/core/AppComponentCard/ComponentCardWithoutAnim.js","@crema/core/AppComponentCard/index.js","webpack://ctic/./src/@crema/core/AppComponentHeader/index.module.scss?ae62","@crema/core/AppComponentHeader/index.js","@crema/core/AppRowContainer/index.js","webpack://ctic/./src/pages/components/Modals/index.module.scss?f38b","pages/components/Modals/Examples.js","pages/components/Modals/Live.js","pages/components/Modals/Without.js","pages/components/Modals/Vertically.js","pages/components/Modals/Using.js","pages/components/Modals/Optional.js","pages/components/Modals/Fullscreen.js","pages/components/Modals/Sizing.js","pages/components/Modals/index.js","webpack://ctic/./src/pages/components/Modals/Examples.js?c48f","webpack://ctic/./src/pages/components/Modals/Live.js?8564","webpack://ctic/./src/pages/components/Modals/Without.js?bcee","webpack://ctic/./src/pages/components/Modals/Vertically.js?f856","webpack://ctic/./src/pages/components/Modals/Using.js?e104","webpack://ctic/./src/pages/components/Modals/Optional.js?e76c","webpack://ctic/./src/pages/components/Modals/Fullscreen.js?d3ca","webpack://ctic/./src/pages/components/Modals/Sizing.js?5dbd","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useUpdatedRef.js","webpack://ctic/./src/@crema/core/AppRowContainer/index.module.scss?e727"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"AppCard_card__lJ6Uc\",\"heightFull\":\"AppCard_heightFull__T8kun\",\"cardBody\":\"AppCard_cardBody__Yq-vX\",\"cardHeader\":\"AppCard_cardHeader__Y+R+4\",\"cardTitle\":\"AppCard_cardTitle__HaekO\",\"action\":\"AppCard_action__sd-8L\",\"cardFooter\":\"AppCard_cardFooter__qAyRn\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport styles from './index.module.scss';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst AppCard = ({\r\n  title,\r\n  footer,\r\n  children,\r\n  className,\r\n  titleClass,\r\n  actionClass,\r\n  footerClass,\r\n  cardBodyClass,\r\n  cardHeaderClass,\r\n  action,\r\n  heightFull,\r\n  cardImg,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Card\r\n      className={clsx(\r\n        styles.card,\r\n        heightFull ? styles.heightFull : '',\r\n        className,\r\n      )}\r\n      title={title}\r\n      {...rest}>\r\n      {cardImg ? <Card.Img variant='top' src={cardImg} /> : null}\r\n      {title || action ? (\r\n        <Card.Header className={clsx(styles.cardHeader, cardHeaderClass)}>\r\n          {typeof title === 'object' ? (\r\n            title\r\n          ) : (\r\n            <Card.Title\r\n              className={clsx(\r\n                styles.cardTitle,\r\n                'mb-0 text-truncate',\r\n                titleClass,\r\n              )}>\r\n              {title}\r\n            </Card.Title>\r\n          )}\r\n          {typeof action === 'object' ? (\r\n            action\r\n          ) : (\r\n            <a\r\n              className={clsx(\r\n                styles.action,\r\n                'text-decoration-none ms-1',\r\n                actionClass,\r\n              )}\r\n              href='#'>\r\n              {action}\r\n            </a>\r\n          )}\r\n        </Card.Header>\r\n      ) : null}\r\n      <Card.Body className={clsx(styles.cardBody, cardBodyClass)}>\r\n        {children}\r\n      </Card.Body>\r\n      {footer ? (\r\n        <Card.Footer className={clsx(styles.cardFooter, footerClass)}>\r\n          {footer}\r\n        </Card.Footer>\r\n      ) : null}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppCard;\r\n\r\nAppCard.propTypes = {\r\n  action: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  footer: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  cardImg: PropTypes.string,\r\n  titleClass: PropTypes.string,\r\n  actionClass: PropTypes.string,\r\n  footerClass: PropTypes.string,\r\n  cardBodyClass: PropTypes.string,\r\n  cardHeaderClass: PropTypes.string,\r\n  heightFull: PropTypes.bool,\r\n};\r\n\r\nAppCard.defaultProps = {};\r\n","import {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nexport const highlightTheme = {\r\n  plain: {\r\n    color: '#F8F8F2',\r\n    fontFamily: 'Poppins',\r\n    fontWeight: Fonts.REGULAR,\r\n    backgroundColor: '#333333',\r\n  },\r\n  styles: [\r\n    {\r\n      types: ['prolog', 'constant', 'builtin'],\r\n      style: {\r\n        color: '#FFFFFF',\r\n      },\r\n    },\r\n    {\r\n      types: ['inserted', 'tag', 'function'],\r\n      style: {\r\n        color: '#E6DB74',\r\n      },\r\n    },\r\n    {\r\n      types: ['deleted'],\r\n      style: {\r\n        color: 'rgb(255, 85, 85)',\r\n      },\r\n    },\r\n    {\r\n      types: ['changed'],\r\n      style: {\r\n        color: 'rgb(255, 184, 108)',\r\n      },\r\n    },\r\n    {\r\n      types: ['punctuation', 'symbol'],\r\n      style: {\r\n        color: 'rgb(248, 248, 242)',\r\n      },\r\n    },\r\n    {\r\n      types: ['string', 'char', 'selector'],\r\n      style: {\r\n        color: '#98CD2F',\r\n      },\r\n    },\r\n    {\r\n      types: ['keyword', 'variable'],\r\n      style: {\r\n        color: '#65D4EA',\r\n        // fontStyle: \"italic\"\r\n      },\r\n    },\r\n    {\r\n      types: ['comment'],\r\n      style: {\r\n        color: 'rgb(98, 114, 164)',\r\n      },\r\n    },\r\n    {\r\n      types: ['attr-name'],\r\n      style: {\r\n        color: '#98CD2F',\r\n      },\r\n    },\r\n  ],\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"compCardTitleDescription\":\"AppComponentCard_compCardTitleDescription__SHL6w\",\"preTag\":\"AppComponentCard_preTag__0+EII\",\"componentRoot\":\"AppComponentCard_componentRoot__dgPU7\",\"codeIcon\":\"AppComponentCard_codeIcon__mUnRp\"};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// In firefox, setTimeout with duration 0 too short for browser notice the changes in dom\r\nconst initialTransitDuration = 20;\r\n\r\nconst PHASE = {\r\n  CLOSE: 'close',\r\n  CLOSING: 'closing',\r\n  CLOSED: 'closed',\r\n  OPEN: 'open',\r\n  OPENING: 'opening',\r\n  OPENED: 'opened',\r\n};\r\n\r\nconst GROUP = {\r\n  [PHASE.CLOSE]: PHASE.CLOSE,\r\n  [PHASE.CLOSED]: PHASE.CLOSE,\r\n  [PHASE.OPENING]: PHASE.CLOSE,\r\n\r\n  [PHASE.CLOSING]: PHASE.OPEN,\r\n  [PHASE.OPEN]: PHASE.OPEN,\r\n  [PHASE.OPENED]: PHASE.OPEN,\r\n};\r\n\r\nclass Expand extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: this.props.open ? PHASE.OPEN : PHASE.CLOSE,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps /* prevState */) {\r\n    if (prevProps.open !== this.props.open) {\r\n      this.toggle(this.props.open);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.clearDelay();\r\n  }\r\n\r\n  getClientHeight = () => this.refWrapper.scrollHeight;\r\n\r\n  getDefaultExpandStyle = () => {\r\n    const {status} = this.state;\r\n\r\n    switch (status) {\r\n      case PHASE.OPENING:\r\n      case PHASE.CLOSE:\r\n      case PHASE.CLOSED:\r\n        return {height: 0, opacity: 0, overflow: 'hidden'};\r\n      case PHASE.OPENED:\r\n      case PHASE.CLOSING:\r\n        return {height: this.getClientHeight(), opacity: 1, overflow: 'hidden'};\r\n      default:\r\n        return {height: 'auto', opacity: 1, overflow: 'unset'};\r\n    }\r\n  };\r\n\r\n  getExpandStyle = () => ({\r\n    ...this.getDefaultExpandStyle(),\r\n    ...this.props.styles[GROUP[this.state.status]],\r\n  });\r\n\r\n  getTransition = (attribute) =>\r\n    `${attribute} ${this.props.duration}ms ${this.props.easing}`;\r\n\r\n  getStyle() {\r\n    const transition = this.props.transitions.map(this.getTransition).join(',');\r\n\r\n    return {\r\n      ...this.getExpandStyle(),\r\n      transition,\r\n    };\r\n  }\r\n\r\n  updateStatus = (status) => this.setState({status});\r\n\r\n  delay = (fn, time) => {\r\n    this.timeout = setTimeout(fn, time);\r\n  };\r\n\r\n  clearDelay = () => {\r\n    if (this.timeout) {\r\n      clearTimeout(this.timeout);\r\n    }\r\n  };\r\n\r\n  transit = (entering, entered, enter) => {\r\n    const {duration} = this.props;\r\n\r\n    this.updateStatus(entering);\r\n\r\n    this.delay(() => {\r\n      this.updateStatus(entered);\r\n\r\n      this.delay(() => {\r\n        this.updateStatus(enter);\r\n      }, duration);\r\n    }, initialTransitDuration);\r\n  };\r\n\r\n  toggle = (open) => {\r\n    this.clearDelay();\r\n\r\n    if (open) {\r\n      this.transit(PHASE.OPENING, PHASE.OPENED, PHASE.OPEN);\r\n    } else {\r\n      this.transit(PHASE.CLOSING, PHASE.CLOSED, PHASE.CLOSE);\r\n    }\r\n  };\r\n\r\n  setRef = (ref) => {\r\n    this.refWrapper = ref;\r\n  };\r\n\r\n  render() {\r\n    const {className, children, tag: Tag} = this.props;\r\n\r\n    const childProps = {\r\n      className,\r\n      style: this.getStyle(),\r\n      ref: this.setRef,\r\n    };\r\n\r\n    return <Tag {...childProps}>{children}</Tag>;\r\n  }\r\n}\r\n\r\nExpand.propTypes = {\r\n  children: PropTypes.node,\r\n  open: PropTypes.bool,\r\n  duration: PropTypes.number,\r\n  easing: PropTypes.string,\r\n  className: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  transitions: PropTypes.arrayOf(PropTypes.string),\r\n  styles: PropTypes.shape({\r\n    [PHASE.OPEN]: PropTypes.object,\r\n    [PHASE.CLOSE]: PropTypes.object,\r\n  }),\r\n};\r\n\r\nExpand.defaultProps = {\r\n  open: false,\r\n  duration: 200,\r\n  easing: 'ease-in-out',\r\n  className: '',\r\n  tag: 'div',\r\n  transitions: ['height', 'opacity'],\r\n  styles: {},\r\n};\r\n\r\nexport default Expand;\r\n","import React, {useState} from 'react';\r\nimport Highlight, {defaultProps} from 'prism-react-renderer';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {highlightTheme} from './highlightTheme';\r\nimport AppScrollbar from '../AppScrollbar';\r\nimport styles from './index.module.scss';\r\nimport Expand from '../AppAnimate/Expand';\r\nimport AppCard from '../AppCard';\r\nimport {HiOutlineCode} from 'react-icons/hi';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst ComponentCardWithoutAnim = ({\r\n  title,\r\n  description,\r\n  className,\r\n  maxHeight,\r\n  component: Component,\r\n  source,\r\n}) => {\r\n  const [viewSource, setToggleViewSource] = useState(false);\r\n  return (\r\n    <AppCard\r\n      className={className}\r\n      title={\r\n        <div className='w-100'>\r\n          <div>{title}</div>\r\n          <div\r\n            className={clsx(styles.compCardTitleDescription, 'text-truncate')}>\r\n            {description}\r\n          </div>\r\n        </div>\r\n      }\r\n      extra={\r\n        source ? (\r\n          <Button\r\n            aria-label='view code'\r\n            shape='circle'\r\n            onClick={() => setToggleViewSource(!viewSource)}>\r\n            <HiOutlineCode className={styles.codeIcon} />\r\n          </Button>\r\n        ) : null\r\n      }>\r\n      <Expand open={viewSource}>\r\n        {source ? (\r\n          <AppScrollbar\r\n            style={{\r\n              borderRadius: 8,\r\n              background: '#333333',\r\n              height: 350,\r\n              maxHeight: 400,\r\n            }}>\r\n            <Highlight\r\n              {...defaultProps}\r\n              code={source}\r\n              language='jsx'\r\n              theme={highlightTheme}>\r\n              {({style, tokens, getLineProps, getTokenProps}) => (\r\n                <pre\r\n                  className={styles.preTag}\r\n                  style={{...style, maxHeight: 500}}>\r\n                  {tokens.map((line, i) => (\r\n                    <div key={i} {...getLineProps({line, key: i})}>\r\n                      {line.map((token, key) => (\r\n                        <span key={i} {...getTokenProps({token, key})} />\r\n                      ))}\r\n                    </div>\r\n                  ))}\r\n                </pre>\r\n              )}\r\n            </Highlight>\r\n          </AppScrollbar>\r\n        ) : null}\r\n      </Expand>\r\n      <AppScrollbar\r\n        style={{maxHeight: maxHeight}}\r\n        className='position-relative'>\r\n        <div\r\n          className={clsx(\r\n            styles.componentRoot,\r\n            'd-flex align-items-center justify-content-center w-100 p-3',\r\n          )}>\r\n          <Component />\r\n        </div>\r\n      </AppScrollbar>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default ComponentCardWithoutAnim;\r\n\r\nComponentCardWithoutAnim.defaultProps = {\r\n  description: '',\r\n  maxHeight: 500,\r\n};\r\n\r\nComponentCardWithoutAnim.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n  source: PropTypes.node,\r\n  title: PropTypes.node.isRequired,\r\n  description: PropTypes.node,\r\n  maxHeight: PropTypes.number,\r\n  className: PropTypes.string,\r\n  size: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport ComponentCardWithoutAnim from './ComponentCardWithoutAnim';\r\n\r\nconst AppComponentCard = ({\r\n  title,\r\n  description,\r\n  className,\r\n  maxHeight,\r\n  component,\r\n  source,\r\n}) => {\r\n  return (\r\n    <AppAnimateGroup type='bottom' interval={100} duration={450}>\r\n      <ComponentCardWithoutAnim\r\n        title={title}\r\n        description={description}\r\n        className={className}\r\n        maxHeight={maxHeight}\r\n        component={component}\r\n        source={source}\r\n        key={'card'}\r\n      />\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppComponentCard;\r\n\r\nAppComponentCard.defaultProps = {\r\n  description: '',\r\n  maxHeight: 500,\r\n};\r\n\r\nAppComponentCard.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n  source: PropTypes.node,\r\n  title: PropTypes.node.isRequired,\r\n  description: PropTypes.node,\r\n  maxHeight: PropTypes.number,\r\n  className: PropTypes.string,\r\n  size: PropTypes.number,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"headerTitle\":\"AppComponentHeader_headerTitle__A9HGS\",\"titleH3\":\"AppComponentHeader_titleH3__owcvF\",\"textBase\":\"AppComponentHeader_textBase__Hw4ll\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.scss';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst AppComponentHeader = ({title, description, refUrl}) => {\r\n  return (\r\n    <AppAnimateGroup type='top' height='auto' interval={100} duration={450}>\r\n      <div\r\n        className='d-flex flex-column pb-3 flex-sm-row justify-content-sm-between pt-xxl-3'\r\n        key={'header'}>\r\n        <div className={styles.headerTitle}>\r\n          <h3 className={styles.titleH3}>{title}</h3>\r\n          {description ? (\r\n            <h5 className={styles.textBase}>{description}</h5>\r\n          ) : null}\r\n        </div>\r\n        {refUrl ? (\r\n          <div style={{height: 30}}>\r\n            <Button variant='primary' href={refUrl} target='_blank'>\r\n              Reference\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppComponentHeader;\r\n\r\nAppComponentHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  refUrl: PropTypes.string,\r\n};\r\nAppComponentHeader.defaultProps = {};\r\n","import React from 'react';\r\nimport styles from './index.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport AppAnimateGroup from '../AppAnimateGroup';\r\nimport {Row} from 'react-bootstrap';\r\n\r\nconst AppRow = (props) => <Row className={styles.row} {...props} />;\r\n\r\nconst AppRowContainer = ({children, ...others}) => {\r\n  return (\r\n    <AppAnimateGroup\r\n      animateStyle={{flexDirection: 'row'}}\r\n      component={AppRow}\r\n      type='bottom'\r\n      ease='easeInOutQuart'\r\n      height='auto'\r\n      {...others}>\r\n      {children}\r\n    </AppAnimateGroup>\r\n  );\r\n};\r\n\r\nexport default AppRowContainer;\r\nAppRowContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"closeBtn\":\"Modals_closeBtn__t5cAF\"};","import React from 'react';\r\nimport {Button, Modal} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nconst Examples = () => {\r\n  return (\r\n    <div>\r\n      <Modal.Dialog>\r\n        <Modal.Header className={styles.closeBtn} closeButton>\r\n          <Modal.Title>Modal title</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <p>Modal body text goes here.</p>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant='secondary'>Close</Button>\r\n          <Button variant='primary'>Save changes</Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Examples;\r\n","import React, {useState} from 'react';\r\nimport {Button, Modal} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nfunction Example() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant='primary' onClick={handleShow}>\r\n        Launch demo modal\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className={styles.closeBtn} closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant='primary' onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Live = () => {\r\n  return (\r\n    <div>\r\n      <Example />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Live;\r\n","import React, {useState} from 'react';\r\nimport {Button, Modal} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nfunction Example() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant='primary' onClick={handleShow}>\r\n        Launch demo modal\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose} animation={false}>\r\n        <Modal.Header className={styles.closeBtn} closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant='primary' onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Without = () => {\r\n  return (\r\n    <div>\r\n      <Example />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Without;\r\n","import React from 'react';\r\nimport {Button, Modal} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size='lg'\r\n      aria-labelledby='contained-modal-title-vcenter'\r\n      centered>\r\n      <Modal.Header className={styles.closeBtn} closeButton>\r\n        <Modal.Title id='contained-modal-title-vcenter'>\r\n          Modal heading\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h4>Centered Modal</h4>\r\n        <p>\r\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n          dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n          consectetur ac, vestibulum at eros.\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button variant='primary' onClick={() => setModalShow(true)}>\r\n        Launch vertically centered modal\r\n      </Button>\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst Vertically = () => {\r\n  return (\r\n    <div>\r\n      <App />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Vertically;\r\n","import React, {useState} from 'react';\r\nimport {Button, Col, Container, Modal, Row} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nfunction MydModalWithGrid(props) {\r\n  return (\r\n    <Modal {...props} aria-labelledby='contained-modal-title-vcenter'>\r\n      <Modal.Header className={styles.closeBtn} closeButton>\r\n        <Modal.Title id='contained-modal-title-vcenter'>\r\n          Using Grid in Modal\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className='show-grid'>\r\n        <Container>\r\n          <Row>\r\n            <Col xs={12} md={8}>\r\n              .col-xs-12 .col-md-8\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              .col-xs-6 .col-md-4\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={6} md={4}>\r\n              .col-xs-6 .col-md-4\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              .col-xs-6 .col-md-4\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              .col-xs-6 .col-md-4\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button variant='primary' onClick={() => setModalShow(true)}>\r\n        Launch modal with grid\r\n      </Button>\r\n\r\n      <MydModalWithGrid show={modalShow} onHide={() => setModalShow(false)} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst Using = () => {\r\n  return (\r\n    <div>\r\n      <App />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Using;\r\n","import React, {useState} from 'react';\r\nimport {Button, Modal} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nfunction Example() {\r\n  const [smShow, setSmShow] = useState(false);\r\n  const [lgShow, setLgShow] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={() => setSmShow(true)}>Small modal</Button>{' '}\r\n      <Button onClick={() => setLgShow(true)}>Large modal</Button>\r\n      <Modal\r\n        size='sm'\r\n        show={smShow}\r\n        onHide={() => setSmShow(false)}\r\n        aria-labelledby='example-modal-sizes-title-sm'>\r\n        <Modal.Header className={styles.closeBtn} closeButton>\r\n          <Modal.Title id='example-modal-sizes-title-sm'>\r\n            Small Modal\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>...</Modal.Body>\r\n      </Modal>\r\n      <Modal\r\n        size='lg'\r\n        show={lgShow}\r\n        onHide={() => setLgShow(false)}\r\n        aria-labelledby='example-modal-sizes-title-lg'>\r\n        <Modal.Header className={styles.closeBtn} closeButton>\r\n          <Modal.Title id='example-modal-sizes-title-lg'>\r\n            Large Modal\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>...</Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Optional = () => {\r\n  return (\r\n    <div>\r\n      <Example />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Optional;\r\n","import React, {useState} from 'react';\r\nimport {Button, Modal} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nfunction Example() {\r\n  const values = [true, 'sm-down', 'md-down', 'lg-down', 'xl-down', 'xxl-down'];\r\n  const [fullscreen, setFullscreen] = useState(true);\r\n  const [show, setShow] = useState(false);\r\n\r\n  function handleShow(breakpoint) {\r\n    setFullscreen(breakpoint);\r\n    setShow(true);\r\n  }\r\n\r\n  return (\r\n    <div style={{width: '100%'}}>\r\n      {values.map((v, idx) => (\r\n        <Button key={idx} className='me-2' onClick={() => handleShow(v)}>\r\n          Full screen\r\n          {typeof v === 'string' && `below ${v.split('-')[0]}`}\r\n        </Button>\r\n      ))}\r\n      <Modal show={show} fullscreen={fullscreen} onHide={() => setShow(false)}>\r\n        <Modal.Header className={styles.closeBtn} closeButton>\r\n          <Modal.Title>Modal</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Modal body content</Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Fullscreen = () => {\r\n  return (\r\n    <div>\r\n      <Example />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fullscreen;\r\n","import React, {useState} from 'react';\r\nimport {Button, Modal} from 'react-bootstrap';\r\nimport styles from './index.module.scss';\r\n\r\nfunction Example() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button variant='primary' onClick={() => setShow(true)}>\r\n        Custom Width Modal\r\n      </Button>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={() => setShow(false)}\r\n        dialogClassName='modal-90w'\r\n        aria-labelledby='example-custom-modal-styling-title'>\r\n        <Modal.Header className={styles.closeBtn} closeButton>\r\n          <Modal.Title id='example-custom-modal-styling-title'>\r\n            Custom Modal Styling\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>\r\n            Ipsum molestiae natus adipisci modi eligendi? Debitis amet quae unde\r\n            commodi aspernatur enim, consectetur. Cumque deleniti temporibus\r\n            ipsam atque a dolores quisquam quisquam adipisci possimus\r\n            laboriosam. Quibusdam facilis doloribus debitis! Sit quasi quod\r\n            accusamus eos quod. Ab quos consequuntur eaque quo rem! Mollitia\r\n            reiciendis porro quo magni incidunt dolore amet atque facilis ipsum\r\n            deleniti rem!\r\n          </p>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Sizing = () => {\r\n  return (\r\n    <div>\r\n      <Example />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sizing;\r\n","import React from 'react';\r\nimport AppComponentHeader from '@crema/core/AppComponentHeader';\r\nimport AppRowContainer from '@crema/core/AppRowContainer';\r\nimport {Col} from 'react-bootstrap';\r\nimport AppComponentCard from '@crema/core/AppComponentCard';\r\n\r\nimport Examples from './Examples';\r\nimport ExamplesSource from '!raw-loader!./Examples';\r\nimport Live from './Live';\r\nimport LiveSource from '!raw-loader!./Live';\r\nimport Without from './Without';\r\nimport WithoutSource from '!raw-loader!./Without';\r\nimport Vertically from './Vertically';\r\nimport VerticallySource from '!raw-loader!./Vertically';\r\nimport Using from './Using';\r\nimport UsingSource from '!raw-loader!./Using';\r\nimport Optional from './Optional';\r\nimport OptionalSource from '!raw-loader!./Optional';\r\nimport Fullscreen from './Fullscreen';\r\nimport FullscreenSource from '!raw-loader!./Fullscreen';\r\nimport Sizing from './Sizing';\r\nimport SizingSource from '!raw-loader!./Sizing';\r\n\r\nconst Modals = () => {\r\n  return (\r\n    <>\r\n      <AppComponentHeader\r\n        title='Modals'\r\n        description='Add dialogs to your site for lightboxes, user notifications, or completely custom content.'\r\n        refUrl='https://react-bootstrap.github.io/components/modal/'\r\n      />\r\n\r\n      <AppRowContainer>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Static Markup'\r\n            component={Examples}\r\n            source={ExamplesSource}\r\n            noScrollbar\r\n            description='Below is a static modal dialog (without the positioning) to demonstrate the look and feel of the Modal.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Live demo'\r\n            component={Live}\r\n            source={LiveSource}\r\n            noScrollbar\r\n            description='When backdrop is set to static, the modal will not close when clicking outside it. Click the button below to try it.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Without Animation'\r\n            component={Without}\r\n            source={WithoutSource}\r\n            noScrollbar\r\n            description='A Modal can also be without an animation. For that set the \"animation\" prop to false.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Vertically centered'\r\n            component={Vertically}\r\n            source={VerticallySource}\r\n            noScrollbar\r\n            description='You can vertically center a modal by passing the \"centered\" prop.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Using'\r\n            component={Using}\r\n            source={UsingSource}\r\n            noScrollbar\r\n            description='You can use grid layouts within a model using regular grid components inside the modal content.'\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <AppComponentCard\r\n            title='Optional Sizes'\r\n            component={Optional}\r\n            source={OptionalSource}\r\n            noScrollbar\r\n            description='You can specify a bootstrap large or small modal by using the size prop.'\r\n          />\r\n        </Col>\r\n        <Col xs={12}>\r\n          <AppComponentCard\r\n            title='Fullscreen'\r\n            component={Fullscreen}\r\n            source={FullscreenSource}\r\n            noScrollbar\r\n            description='You can use the fullscreen prop to make the modal fullscreen. Specifying a breakpoint will only set the modal as fullscreen below the breakpoint size.'\r\n          />\r\n        </Col>\r\n        <Col xs={12}>\r\n          <AppComponentCard\r\n            title='Sizing modals using custom CSS'\r\n            component={Sizing}\r\n            source={SizingSource}\r\n            noScrollbar\r\n            description='You can apply custom css to the modal dialog div using the \"dialogClassName\" prop. Example is using a custom css class with width set to 90%.'\r\n          />\r\n        </Col>\r\n      </AppRowContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modals;\r\n","export default \"import React from 'react';\\r\\nimport {Button, Modal} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nconst Examples = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Modal.Dialog>\\r\\n        <Modal.Header className={styles.closeBtn} closeButton>\\r\\n          <Modal.Title>Modal title</Modal.Title>\\r\\n        </Modal.Header>\\r\\n\\r\\n        <Modal.Body>\\r\\n          <p>Modal body text goes here.</p>\\r\\n        </Modal.Body>\\r\\n\\r\\n        <Modal.Footer>\\r\\n          <Button variant='secondary'>Close</Button>\\r\\n          <Button variant='primary'>Save changes</Button>\\r\\n        </Modal.Footer>\\r\\n      </Modal.Dialog>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Examples;\\r\\n\";","export default \"import React, {useState} from 'react';\\r\\nimport {Button, Modal} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nfunction Example() {\\r\\n  const [show, setShow] = useState(false);\\r\\n\\r\\n  const handleClose = () => setShow(false);\\r\\n  const handleShow = () => setShow(true);\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <Button variant='primary' onClick={handleShow}>\\r\\n        Launch demo modal\\r\\n      </Button>\\r\\n\\r\\n      <Modal show={show} onHide={handleClose}>\\r\\n        <Modal.Header className={styles.closeBtn} closeButton>\\r\\n          <Modal.Title>Modal heading</Modal.Title>\\r\\n        </Modal.Header>\\r\\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\\r\\n        <Modal.Footer>\\r\\n          <Button variant='secondary' onClick={handleClose}>\\r\\n            Close\\r\\n          </Button>\\r\\n          <Button variant='primary' onClick={handleClose}>\\r\\n            Save Changes\\r\\n          </Button>\\r\\n        </Modal.Footer>\\r\\n      </Modal>\\r\\n    </>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst Live = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Example />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Live;\\r\\n\";","export default \"import React, {useState} from 'react';\\r\\nimport {Button, Modal} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nfunction Example() {\\r\\n  const [show, setShow] = useState(false);\\r\\n\\r\\n  const handleClose = () => setShow(false);\\r\\n  const handleShow = () => setShow(true);\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <Button variant='primary' onClick={handleShow}>\\r\\n        Launch demo modal\\r\\n      </Button>\\r\\n\\r\\n      <Modal show={show} onHide={handleClose} animation={false}>\\r\\n        <Modal.Header className={styles.closeBtn} closeButton>\\r\\n          <Modal.Title>Modal heading</Modal.Title>\\r\\n        </Modal.Header>\\r\\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\\r\\n        <Modal.Footer>\\r\\n          <Button variant='secondary' onClick={handleClose}>\\r\\n            Close\\r\\n          </Button>\\r\\n          <Button variant='primary' onClick={handleClose}>\\r\\n            Save Changes\\r\\n          </Button>\\r\\n        </Modal.Footer>\\r\\n      </Modal>\\r\\n    </>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst Without = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Example />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Without;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {Button, Modal} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nfunction MyVerticallyCenteredModal(props) {\\r\\n  return (\\r\\n    <Modal\\r\\n      {...props}\\r\\n      size='lg'\\r\\n      aria-labelledby='contained-modal-title-vcenter'\\r\\n      centered>\\r\\n      <Modal.Header className={styles.closeBtn} closeButton>\\r\\n        <Modal.Title id='contained-modal-title-vcenter'>\\r\\n          Modal heading\\r\\n        </Modal.Title>\\r\\n      </Modal.Header>\\r\\n      <Modal.Body>\\r\\n        <h4>Centered Modal</h4>\\r\\n        <p>\\r\\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\\r\\n          dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\\r\\n          consectetur ac, vestibulum at eros.\\r\\n        </p>\\r\\n      </Modal.Body>\\r\\n      <Modal.Footer>\\r\\n        <Button onClick={props.onHide}>Close</Button>\\r\\n      </Modal.Footer>\\r\\n    </Modal>\\r\\n  );\\r\\n}\\r\\n\\r\\nfunction App() {\\r\\n  const [modalShow, setModalShow] = React.useState(false);\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <Button variant='primary' onClick={() => setModalShow(true)}>\\r\\n        Launch vertically centered modal\\r\\n      </Button>\\r\\n\\r\\n      <MyVerticallyCenteredModal\\r\\n        show={modalShow}\\r\\n        onHide={() => setModalShow(false)}\\r\\n      />\\r\\n    </>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst Vertically = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <App />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Vertically;\\r\\n\";","export default \"import React, {useState} from 'react';\\r\\nimport {Button, Col, Container, Modal, Row} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nfunction MydModalWithGrid(props) {\\r\\n  return (\\r\\n    <Modal {...props} aria-labelledby='contained-modal-title-vcenter'>\\r\\n      <Modal.Header className={styles.closeBtn} closeButton>\\r\\n        <Modal.Title id='contained-modal-title-vcenter'>\\r\\n          Using Grid in Modal\\r\\n        </Modal.Title>\\r\\n      </Modal.Header>\\r\\n      <Modal.Body className='show-grid'>\\r\\n        <Container>\\r\\n          <Row>\\r\\n            <Col xs={12} md={8}>\\r\\n              .col-xs-12 .col-md-8\\r\\n            </Col>\\r\\n            <Col xs={6} md={4}>\\r\\n              .col-xs-6 .col-md-4\\r\\n            </Col>\\r\\n          </Row>\\r\\n\\r\\n          <Row>\\r\\n            <Col xs={6} md={4}>\\r\\n              .col-xs-6 .col-md-4\\r\\n            </Col>\\r\\n            <Col xs={6} md={4}>\\r\\n              .col-xs-6 .col-md-4\\r\\n            </Col>\\r\\n            <Col xs={6} md={4}>\\r\\n              .col-xs-6 .col-md-4\\r\\n            </Col>\\r\\n          </Row>\\r\\n        </Container>\\r\\n      </Modal.Body>\\r\\n      <Modal.Footer>\\r\\n        <Button onClick={props.onHide}>Close</Button>\\r\\n      </Modal.Footer>\\r\\n    </Modal>\\r\\n  );\\r\\n}\\r\\n\\r\\nfunction App() {\\r\\n  const [modalShow, setModalShow] = useState(false);\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <Button variant='primary' onClick={() => setModalShow(true)}>\\r\\n        Launch modal with grid\\r\\n      </Button>\\r\\n\\r\\n      <MydModalWithGrid show={modalShow} onHide={() => setModalShow(false)} />\\r\\n    </>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst Using = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <App />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Using;\\r\\n\";","export default \"import React, {useState} from 'react';\\r\\nimport {Button, Modal} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nfunction Example() {\\r\\n  const [smShow, setSmShow] = useState(false);\\r\\n  const [lgShow, setLgShow] = useState(false);\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <Button onClick={() => setSmShow(true)}>Small modal</Button>{' '}\\r\\n      <Button onClick={() => setLgShow(true)}>Large modal</Button>\\r\\n      <Modal\\r\\n        size='sm'\\r\\n        show={smShow}\\r\\n        onHide={() => setSmShow(false)}\\r\\n        aria-labelledby='example-modal-sizes-title-sm'>\\r\\n        <Modal.Header className={styles.closeBtn} closeButton>\\r\\n          <Modal.Title id='example-modal-sizes-title-sm'>\\r\\n            Small Modal\\r\\n          </Modal.Title>\\r\\n        </Modal.Header>\\r\\n        <Modal.Body>...</Modal.Body>\\r\\n      </Modal>\\r\\n      <Modal\\r\\n        size='lg'\\r\\n        show={lgShow}\\r\\n        onHide={() => setLgShow(false)}\\r\\n        aria-labelledby='example-modal-sizes-title-lg'>\\r\\n        <Modal.Header className={styles.closeBtn} closeButton>\\r\\n          <Modal.Title id='example-modal-sizes-title-lg'>\\r\\n            Large Modal\\r\\n          </Modal.Title>\\r\\n        </Modal.Header>\\r\\n        <Modal.Body>...</Modal.Body>\\r\\n      </Modal>\\r\\n    </>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst Optional = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Example />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Optional;\\r\\n\";","export default \"import React, {useState} from 'react';\\r\\nimport {Button, Modal} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nfunction Example() {\\r\\n  const values = [true, 'sm-down', 'md-down', 'lg-down', 'xl-down', 'xxl-down'];\\r\\n  const [fullscreen, setFullscreen] = useState(true);\\r\\n  const [show, setShow] = useState(false);\\r\\n\\r\\n  function handleShow(breakpoint) {\\r\\n    setFullscreen(breakpoint);\\r\\n    setShow(true);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div style={{width: '100%'}}>\\r\\n      {values.map((v, idx) => (\\r\\n        <Button key={idx} className='me-2' onClick={() => handleShow(v)}>\\r\\n          Full screen\\r\\n          {typeof v === 'string' && `below ${v.split('-')[0]}`}\\r\\n        </Button>\\r\\n      ))}\\r\\n      <Modal show={show} fullscreen={fullscreen} onHide={() => setShow(false)}>\\r\\n        <Modal.Header className={styles.closeBtn} closeButton>\\r\\n          <Modal.Title>Modal</Modal.Title>\\r\\n        </Modal.Header>\\r\\n        <Modal.Body>Modal body content</Modal.Body>\\r\\n      </Modal>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst Fullscreen = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Example />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Fullscreen;\\r\\n\";","export default \"import React, {useState} from 'react';\\r\\nimport {Button, Modal} from 'react-bootstrap';\\r\\nimport styles from './index.module.scss';\\r\\n\\r\\nfunction Example() {\\r\\n  const [show, setShow] = useState(false);\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <Button variant='primary' onClick={() => setShow(true)}>\\r\\n        Custom Width Modal\\r\\n      </Button>\\r\\n\\r\\n      <Modal\\r\\n        show={show}\\r\\n        onHide={() => setShow(false)}\\r\\n        dialogClassName='modal-90w'\\r\\n        aria-labelledby='example-custom-modal-styling-title'>\\r\\n        <Modal.Header className={styles.closeBtn} closeButton>\\r\\n          <Modal.Title id='example-custom-modal-styling-title'>\\r\\n            Custom Modal Styling\\r\\n          </Modal.Title>\\r\\n        </Modal.Header>\\r\\n        <Modal.Body>\\r\\n          <p>\\r\\n            Ipsum molestiae natus adipisci modi eligendi? Debitis amet quae unde\\r\\n            commodi aspernatur enim, consectetur. Cumque deleniti temporibus\\r\\n            ipsam atque a dolores quisquam quisquam adipisci possimus\\r\\n            laboriosam. Quibusdam facilis doloribus debitis! Sit quasi quod\\r\\n            accusamus eos quod. Ab quos consequuntur eaque quo rem! Mollitia\\r\\n            reiciendis porro quo magni incidunt dolore amet atque facilis ipsum\\r\\n            deleniti rem!\\r\\n          </p>\\r\\n        </Modal.Body>\\r\\n      </Modal>\\r\\n    </>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst Sizing = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Example />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Sizing;\\r\\n\";","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"AppRowContainer_row__lSYCd\"};"],"names":["AppCard","title","footer","children","className","titleClass","actionClass","footerClass","cardBodyClass","cardHeaderClass","action","heightFull","cardImg","rest","Card","clsx","styles","Img","variant","src","Header","Title","href","Body","Footer","defaultProps","highlightTheme","plain","color","fontFamily","fontWeight","Fonts","REGULAR","backgroundColor","types","style","PHASE","GROUP","Expand","props","getClientHeight","refWrapper","scrollHeight","getDefaultExpandStyle","state","status","height","opacity","overflow","getExpandStyle","getTransition","attribute","duration","easing","updateStatus","setState","delay","fn","time","timeout","setTimeout","clearDelay","clearTimeout","transit","entering","entered","enter","toggle","open","setRef","ref","prevProps","this","transition","transitions","map","join","Tag","tag","childProps","getStyle","Component","ComponentCardWithoutAnim","description","maxHeight","component","source","useState","viewSource","setToggleViewSource","extra","Button","shape","onClick","AppScrollbar","borderRadius","background","code","language","theme","tokens","getLineProps","getTokenProps","line","i","key","token","AppComponentCard","AppAnimateGroup","type","interval","AppComponentHeader","refUrl","target","AppRow","row","others","animateStyle","flexDirection","ease","Modal","Dialog","closeBtn","closeButton","Example","show","setShow","handleClose","onHide","animation","MyVerticallyCenteredModal","size","centered","id","App","React","modalShow","setModalShow","MydModalWithGrid","Container","Row","Col","xs","md","smShow","setSmShow","lgShow","setLgShow","fullscreen","setFullscreen","width","v","idx","split","dialogClassName","AppRowContainer","Examples","noScrollbar","Live","Without","Vertically","Using","Optional","Fullscreen","Sizing","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","position","top","body","appendChild","offsetWidth","clientWidth","removeChild","bsPrefix","fluid","as","prefix","useBootstrapPrefix","suffix","_jsx","classNames","displayName","createWithBsPrefix","ModalDialog","contentClassName","scrollable","dialogClass","fullScreenClass","ModalHeader","AbstractModalHeader","closeLabel","DivStyledAsH4","divWithClassName","backdrop","keyboard","autoFocus","enforceFocus","restoreFocus","dialogAs","DialogTransition","Fade","BackdropTransition","ariaLabelledby","onEscapeKeyDown","onShow","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","manager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","useRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","undefined","paddingLeft","handleWindowResize","dialog","useWillUnmount","removeEventListener","window","current","handleDialogMouseDown","handleMouseUp","e","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","Provider","value","BaseModal","preventDefault","isAppearing","addEventListener","backdropTransition","renderDialog","dialogProps","role","onMouseUp","onMouseDown","Object","assign","ModalBody","ModalTitle","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","onUnmount","valueRef","useUpdatedRef","useEffect"],"sourceRoot":""}